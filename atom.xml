<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Firehacker</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-09-07T01:46:40.523Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Firehacker</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>新型安全技术简析</title>
    <link href="http://yoursite.com/2018/09/07/%E6%96%B0%E5%9E%8B%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E7%AE%80%E6%9E%90/"/>
    <id>http://yoursite.com/2018/09/07/新型安全技术简析/</id>
    <published>2018-09-07T01:27:15.000Z</published>
    <updated>2018-09-07T01:46:40.523Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>伴随大智云联的兴起与发展，自适应，微隔离，软件定义安全，加密流量分析，MLSec，下一代防火墙等新型安全概念层出不穷，这些安全技术的背景，兴起的原因，以及深层次的技术原理又是什么？本文综合网络上的相关资源，对此进行分析总结</p></blockquote><a id="more"></a><hr>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;伴随大智云联的兴起与发展，自适应，微隔离，软件定义安全，加密流量分析，MLSec，下一代防火墙等新型安全概念层出不穷，这些安全技术的背景，兴起的原因，以及深层次的技术原理又是什么？本文综合网络上的相关资源，对此进行分析总结&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="0x02 安全技术" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="安全前沿" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/%E5%AE%89%E5%85%A8%E5%89%8D%E6%B2%BF/"/>
    
    
      <category term="ASA" scheme="http://yoursite.com/tags/ASA/"/>
    
  </entry>
  
  <entry>
    <title>Violent Python 系列(七)：免杀篇 </title>
    <link href="http://yoursite.com/2018/09/04/Violent-Python-%E7%B3%BB%E5%88%97-%E4%B8%83-%EF%BC%9A%E5%85%8D%E6%9D%80%E7%AF%87/"/>
    <id>http://yoursite.com/2018/09/04/Violent-Python-系列-七-：免杀篇/</id>
    <published>2018-09-03T23:29:50.000Z</published>
    <updated>2018-09-04T00:01:30.439Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文是《Violent Python》系列七 规避免杀篇：使用构建一个躲避杀毒系统的恶意软件，上传恶意软件到在线的杀毒系统扫描</p></blockquote><a id="more"></a><hr>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是《Violent Python》系列七 规避免杀篇：使用构建一个躲避杀毒系统的恶意软件，上传恶意软件到在线的杀毒系统扫描&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="0x02 安全技术" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="脚本编程" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Violent Python" scheme="http://yoursite.com/tags/Violent-Python/"/>
    
  </entry>
  
  <entry>
    <title>Violent Python 系列(六)：Web 侦察 </title>
    <link href="http://yoursite.com/2018/09/04/Violent-Python-%E7%B3%BB%E5%88%97-%E5%85%AD-%EF%BC%9AWeb-%E4%BE%A6%E5%AF%9F/"/>
    <id>http://yoursite.com/2018/09/04/Violent-Python-系列-六-：Web-侦察/</id>
    <published>2018-09-03T23:29:11.000Z</published>
    <updated>2018-09-04T00:01:24.563Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文是《Violent Python》系列六 Web侦察篇：使用Python侦查Web信息，脚本实例包含用Python匿名访问web网站，试探流行的媒体网站，发送钓鱼邮件</p></blockquote><a id="more"></a><hr>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是《Violent Python》系列六 Web侦察篇：使用Python侦查Web信息，脚本实例包含用Python匿名访问web网站，试探流行的媒体网站，发送钓鱼邮件&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="0x02 安全技术" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="脚本编程" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Violent Python" scheme="http://yoursite.com/tags/Violent-Python/"/>
    
  </entry>
  
  <entry>
    <title>Violent Python 系列(五)：无线网络攻击 </title>
    <link href="http://yoursite.com/2018/09/04/Violent-Python-%E7%B3%BB%E5%88%97-%E4%BA%94-%EF%BC%9A%E6%97%A0%E7%BA%BF%E7%BD%91%E7%BB%9C%E6%94%BB%E5%87%BB/"/>
    <id>http://yoursite.com/2018/09/04/Violent-Python-系列-五-：无线网络攻击/</id>
    <published>2018-09-03T23:27:16.000Z</published>
    <updated>2018-09-04T00:00:41.472Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文是《Violent Python》系列五 无线网络攻击篇：介绍无线网络和蓝牙设备攻击，实例将演示怎样嗅探和解析无线网络流量，构建一个无线网络记录器，发现隐藏的无线网络，确认恶意的无线网络工具的使用，追踪蓝牙接收器，攻击蓝牙漏洞</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文是《Violent Python》系列五 无线网络攻击篇：介绍无线网络和蓝牙设备攻击，实例将演示怎样嗅探和解析无线网络流量，构建一个无线网络记录器，发现隐藏的无线网络，确认恶意的无线网络工具的使用，追踪蓝牙接收器，攻击蓝牙漏洞&lt;/p&gt;
&lt;/bl
      
    
    </summary>
    
      <category term="0x02 安全技术" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="脚本编程" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Violent Python" scheme="http://yoursite.com/tags/Violent-Python/"/>
    
  </entry>
  
  <entry>
    <title>Violent Python 系列(四)：网络流量分析 </title>
    <link href="http://yoursite.com/2018/09/04/Violent-Python-%E7%B3%BB%E5%88%97-%E5%9B%9B-%EF%BC%9A%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2018/09/04/Violent-Python-系列-四-：网络流量分析/</id>
    <published>2018-09-03T23:26:46.000Z</published>
    <updated>2018-09-04T00:01:43.111Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文是《Violent Python》系列四 网络流量分析篇：使用Python进行网络流量分析，脚本演示了从捕获的数据包中定位IP地址，探讨流行的DDOS攻击工具，发现潜藏的扫描，分析僵尸网络流量，挫败入侵检测系统</p></blockquote><a id="more"></a><hr>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是《Violent Python》系列四 网络流量分析篇：使用Python进行网络流量分析，脚本演示了从捕获的数据包中定位IP地址，探讨流行的DDOS攻击工具，发现潜藏的扫描，分析僵尸网络流量，挫败入侵检测系统&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="0x02 安全技术" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="脚本编程" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Violent Python" scheme="http://yoursite.com/tags/Violent-Python/"/>
    
  </entry>
  
  <entry>
    <title>Violent Python 系列(三)：调查取证</title>
    <link href="http://yoursite.com/2018/09/04/Violent-Python-%E7%B3%BB%E5%88%97-%E4%B8%89-%EF%BC%9A%E5%8F%96%E8%AF%81%E8%B0%83%E6%9F%A5/"/>
    <id>http://yoursite.com/2018/09/04/Violent-Python-系列-三-：取证调查/</id>
    <published>2018-09-03T23:26:13.000Z</published>
    <updated>2018-09-04T00:01:37.319Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文是《Violent Python》系列三 调查取证篇：利用Python进行数字调查取证，实例包括个人地理定位，数据恢复，从windows注册表，文档元数据，镜像中提取痕迹，调查应用程序和移动设备的痕迹</p></blockquote><a id="more"></a><hr>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是《Violent Python》系列三 调查取证篇：利用Python进行数字调查取证，实例包括个人地理定位，数据恢复，从windows注册表，文档元数据，镜像中提取痕迹，调查应用程序和移动设备的痕迹&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="0x02 安全技术" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="脚本编程" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Violent Python" scheme="http://yoursite.com/tags/Violent-Python/"/>
    
  </entry>
  
  <entry>
    <title>Violent Python 系列(二)：渗透测试</title>
    <link href="http://yoursite.com/2018/09/04/Violent-Python-%E7%B3%BB%E5%88%97-%E4%BA%8C-%EF%BC%9A%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2018/09/04/Violent-Python-系列-二-：渗透测试/</id>
    <published>2018-09-03T23:25:48.000Z</published>
    <updated>2018-09-04T00:01:17.611Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文是《Violent Python》系列二 渗透测试篇：介绍了Python脚本用于渗透测试的内容，例子包含建立一个端口扫描器，构建一个SSH的僵尸网络，降伏FTP，编写病毒和漏洞利用代码</p></blockquote><a id="more"></a><hr>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是《Violent Python》系列二 渗透测试篇：介绍了Python脚本用于渗透测试的内容，例子包含建立一个端口扫描器，构建一个SSH的僵尸网络，降伏FTP，编写病毒和漏洞利用代码&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="0x02 安全技术" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="脚本编程" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Violent Python" scheme="http://yoursite.com/tags/Violent-Python/"/>
    
  </entry>
  
  <entry>
    <title>Violent Python 系列(一)：基础篇</title>
    <link href="http://yoursite.com/2018/09/04/Violent-Python-%E7%B3%BB%E5%88%97-%E4%B8%80-%EF%BC%9A%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    <id>http://yoursite.com/2018/09/04/Violent-Python-系列-一-：基础篇/</id>
    <published>2018-09-03T23:24:45.000Z</published>
    <updated>2018-09-04T00:01:09.173Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://books.google.com/books/elsevier?id=2XliiK7FKoEC&amp;dq=violent+python&amp;ei=zL66UNT7N4XYkgTBt4DoDg&amp;hl=zh-CN" target="_blank" rel="noopener">Violent Python</a>: A Cookbook for Hackers, Forensic Analysts, Penetration Testers and Security Engineers。本文是《Violent Python》 系列一 基础篇：涉及Python背景，语法，函数，迭代器等语法</p></blockquote><a id="more"></a><hr>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://books.google.com/books/elsevier?id=2XliiK7FKoEC&amp;amp;dq=violent+python&amp;amp;ei=zL66UNT7N4XYkgTBt4DoDg&amp;amp;hl=zh-CN&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Violent Python&lt;/a&gt;: A Cookbook for Hackers, Forensic Analysts, Penetration Testers and Security Engineers。本文是《Violent Python》 系列一 基础篇：涉及Python背景，语法，函数，迭代器等语法&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="0x02 安全技术" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="脚本编程" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Violent Python" scheme="http://yoursite.com/tags/Violent-Python/"/>
    
  </entry>
  
  <entry>
    <title>Linux Shell 脚本实战</title>
    <link href="http://yoursite.com/2018/09/03/Linux-Shell-%E8%84%9A%E6%9C%AC%E5%AE%9E%E6%88%98/"/>
    <id>http://yoursite.com/2018/09/03/Linux-Shell-脚本实战/</id>
    <published>2018-09-03T14:55:31.000Z</published>
    <updated>2018-09-04T15:15:54.734Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://www.shellscript.sh/index.html" target="_blank" rel="noopener">Shell</a>脚本，简单而强大，短短数行脚本即可完成大量工作，本文从实战角度对Linux 常用<a href="http://man.linuxde.net/" target="_blank" rel="noopener">命令</a>及<a href="https://www.shellscript.sh/index.html" target="_blank" rel="noopener">Shell</a>脚本编程进行总结与分析</p></blockquote><a id="more"></a><hr><h2 id="0X01-Bash-脚本基础"><a href="#0X01-Bash-脚本基础" class="headerlink" title="0X01 Bash 脚本基础"></a>0X01 Bash 脚本基础</h2><h3 id="1-符号标识"><a href="#1-符号标识" class="headerlink" title="1. 符号标识"></a>1. 符号标识</h3><p>shell 脚本以 <code>#!</code>起始，通过分号或者换行符分隔，注释部分以<code>#</code>起始，延申至行尾</p><h3 id="2-终端打印"><a href="#2-终端打印" class="headerlink" title="2. 终端打印"></a>2. 终端打印</h3><p><strong>(1) echo 命令</strong></p><p>echo 每次调用后会添加一个换行符</p><pre><code>echo 文本内容  ;前后均被视为命令echo &quot;文本内容&quot; 使用！等符号时，需要转义字符(\)echo &apos;文本内容&apos; 单引号，不会变量求值，原样输出</code></pre><p><strong>(2) printf 命令</strong></p><p>可使用格式化字符串(%s,%c,%d,%f等)，指定字符串宽度，左右对齐方式等，换行时需手动添加<code>\n</code></p><p><strong>(3) 特殊用法</strong></p><p>A. <strong>echo 中转义换行符</strong></p><p><em>echo -e “含转义序列的字符串”</em></p><p>B. <strong>打印彩色输出</strong></p><p><strong>字体颜色（30-37）</strong></p><p><img src="http://peiv3bs5y.bkt.clouddn.com/%E5%AD%97%E4%BD%93%E9%A2%9C%E8%89%B2.png" alt=""></p><pre><code>echo -e &quot;\e[1;31m This is red text \e[0m&quot;</code></pre><p><code>\e[1;31m</code> 将颜色设为红色；<code>\e[0m</code> 将颜色重新置回</p><p><strong>主页背景颜色(40-47)</strong></p><p><img src="http://peiv3bs5y.bkt.clouddn.com/%E8%83%8C%E6%99%AF%E9%A2%9C%E8%89%B2.png" alt=""></p><p><strong>特殊功能</strong></p><p><img src="http://peiv3bs5y.bkt.clouddn.com/%E7%89%B9%E8%89%B2%E5%8A%9F%E8%83%BD.png" alt=""></p><h3 id="3-变量与环境变量"><a href="#3-变量与环境变量" class="headerlink" title="3. 变量与环境变量"></a>3. 变量与环境变量</h3><p><strong>(1) 环境变量</strong></p><p>获取目标进程IP</p><pre><code>pgrep 目标程序名</code></pre><p>查看进程环境变量</p><pre><code>cat /proc/$PID/environ </code></pre><p>格式化换行输出</p><pre><code>cat /proc/$PID/environ | tr &apos;\0&apos; &apos;\n&apos;</code></pre><p>环境变量设置</p><pre><code>export PATH=&quot;$PATH:路径&quot;</code></pre><p><strong>(2) 变量及赋值</strong></p><p><em>赋值方式：var=value</em></p><p><em>var = value</em> 是相等操作，不同于赋值</p><p><em>变量打印：echo $var / echo ${var}</em></p><p><strong>(3) 拓展用法</strong></p><p>A. 获取字符串长度</p><pre><code>length=${#var}echo ${#var}</code></pre><p>B. 识别当前shell版本</p><pre><code>echo $SHELL / echo $0</code></pre><p>C. 检查是否是超级用户</p><pre><code>if [ $UID -ne 0 ]；thenecho Non root userelseecho &quot;Root User&quot;fi</code></pre><p>root 用户 UID 为0</p><h3 id="4-数学运算"><a href="#4-数学运算" class="headerlink" title="4. 数学运算"></a>4. 数学运算</h3><p><strong>(1) let 命令</strong></p><p>普通变量赋值方法定义数值，会被存储为字符串；let命令可执行算术操作</p><pre><code>#！/bin/basha=4b=5let result=a+becho $result</code></pre><p>A. 自加操作</p><pre><code>$ let a++</code></pre><p>B. 自减操作</p><pre><code>let b--</code></pre><p>C. 简写形式</p><pre><code>$ let a+=5</code></pre><p><strong>(2) (())或 []</strong></p><pre><code>result=$[a+b]result=$((a+b))</code></pre><p><strong>(3) 高级操作</strong></p><p>A. <strong>expr 工具</strong></p><pre><code>result=`expr 3 + 4` 反引号result=$(expr $a + 5)</code></pre><p>只能用于整数运算，不支持浮点数运算</p><p>B. <strong>bc 工具</strong></p><p>用于数学运算的高级工具，精密计算</p><p><strong>浮点数运算</strong></p><pre><code>echo &quot;2.5 * 3.68&quot; | bc</code></pre><p><strong>设置小数精度</strong></p><pre><code>echo &quot;scale=2；3/8&quot; | bc</code></pre><p><code>scale=2</code> 将小数位个数设置为2</p><p><strong>进制转换</strong></p><pre><code>#！/bin/bash# 数字转换# 十进制转为二进制no=100echo &quot;obase=2;$no&quot; | bc1100100# 二进制转为十进制no=1100100echo &quot;obase=10;ibase=2;$no&quot; | bc100</code></pre><p><strong>计算平方及平方根</strong></p><pre><code>echo &quot;sqrt(100)&quot; | bc #Square rootecho &quot;10^10&quot; | bc #Square</code></pre><h3 id="5-文件描述符-重定向"><a href="#5-文件描述符-重定向" class="headerlink" title="5. 文件描述符/重定向"></a>5. 文件描述符/重定向</h3><p><strong>(1) 文件描述符</strong></p><p>常见文件描述符：stdin—0，stdout—1，stderr—2</p><p><strong>(2) 重定向</strong></p><p><strong>将输出文本重定向至特定文件</strong></p><p>echo “This is a sample text” &gt; temp.txt</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.shellscript.sh/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Shell&lt;/a&gt;脚本，简单而强大，短短数行脚本即可完成大量工作，本文从实战角度对Linux 常用&lt;a href=&quot;http://man.linuxde.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;命令&lt;/a&gt;及&lt;a href=&quot;https://www.shellscript.sh/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Shell&lt;/a&gt;脚本编程进行总结与分析&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="0x02 安全技术" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="脚本编程" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Shell" scheme="http://yoursite.com/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>NSE脚本浅析</title>
    <link href="http://yoursite.com/2018/09/03/NSE%E8%84%9A%E6%9C%AC%E6%B5%85%E6%9E%90/"/>
    <id>http://yoursite.com/2018/09/03/NSE脚本浅析/</id>
    <published>2018-09-03T13:32:04.000Z</published>
    <updated>2018-09-03T23:33:47.225Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://nmap.org/book/nse.html" target="_blank" rel="noopener">NSE</a>(Nmap 脚本引擎)是Nmap最强大最灵活的特性之一，可以用于增强主机发现、端口扫描、版本侦测和操作系统侦测等功能，还可以用来扩展高级的功能如web扫描、漏洞发现和漏洞利用等。本文对NSE技术及Lua语言进行分析与总结</p></blockquote><a id="more"></a><hr><h2 id="0x01-NSE-基础"><a href="#0x01-NSE-基础" class="headerlink" title="0x01 NSE 基础"></a>0x01 NSE 基础</h2><h3 id="1-NSE-脚本运行"><a href="#1-NSE-脚本运行" class="headerlink" title="1. NSE 脚本运行"></a>1. NSE 脚本运行</h3><pre><code>Namp -sV -sC scanme.Nmap.org</code></pre><p>-sV：对目标系统上的服务进行检测</p><p>-sC：使用默认(default)分类中所有脚本对目标进行检测</p><p><strong>Default 分类中的脚本</strong></p><table><thead><tr><th>脚本</th><th>描述</th></tr></thead><tbody><tr><td>banner.NSE</td><td>收集目标banner信息，会连接到目标开放TCP端口，输出任何5s内收到的数据</td></tr><tr><td>broadcast-ping.NSE</td><td>使用广播ping来发现网络中的主机</td></tr><tr><td>dns-recursion.NSE</td><td>检测一个DNS服务器是否允许第三方的查询，允许此查询可导致服务器受到DNS放大攻击</td></tr><tr><td>upnp-info.NSE</td><td>尝试通过UPnP服务来提取系统信息</td></tr><tr><td>Firewalk.NSE</td><td>使用IP协议中的TTL过期机制来发现防火墙设备</td></tr></tbody></table><h3 id="2-NSE-脚本分类"><a href="#2-NSE-脚本分类" class="headerlink" title="2. NSE 脚本分类"></a>2. NSE 脚本分类</h3><table><thead><tr><th>分类</th><th>描述</th></tr></thead><tbody><tr><td>auth</td><td>负责处理鉴权证书的脚本</td></tr><tr><td>broadcast</td><td>在局域网内探查更多服务开启状况，如CHCP,DNS，SQL Server等服务</td></tr><tr><td>brute</td><td>暴力破解密码脚本</td></tr><tr><td>default</td><td>使用-sC或-A参数扫描时默认脚本，提供基本脚本扫描能力</td></tr><tr><td>discovery</td><td>网络信息收集脚本，如SMB枚举，SNMP查询</td></tr><tr><td>dos</td><td>用于发起拒绝服务攻击</td></tr><tr><td>exploit</td><td>用来完成对目标系统安全漏洞渗透</td></tr><tr><td>external</td><td>针对第三方服务的脚本</td></tr><tr><td>fuzzer</td><td>进行模糊测试的脚本，发送异常包到目标机，探测出潜在漏洞</td></tr><tr><td>instrusive</td><td>可能引起目标系统崩溃或对目标网络造成极大负担的脚本</td></tr><tr><td>malware</td><td>用于检测恶意软件</td></tr><tr><td>safe</td><td>任何情况下安全无害的脚本</td></tr><tr><td>version</td><td>负责增强服务和版本扫描</td></tr><tr><td>vuln</td><td>检查目标主机是否有常见漏洞</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://nmap.org/book/nse.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;NSE&lt;/a&gt;(Nmap 脚本引擎)是Nmap最强大最灵活的特性之一，可以用于增强主机发现、端口扫描、版本侦测和操作系统侦测等功能，还可以用来扩展高级的功能如web扫描、漏洞发现和漏洞利用等。本文对NSE技术及Lua语言进行分析与总结&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="0x02 安全技术" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="脚本编程" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="SecTools" scheme="http://yoursite.com/tags/SecTools/"/>
    
      <category term="Nmap" scheme="http://yoursite.com/tags/Nmap/"/>
    
      <category term="NSE" scheme="http://yoursite.com/tags/NSE/"/>
    
  </entry>
  
  <entry>
    <title>Nmap扫描详解</title>
    <link href="http://yoursite.com/2018/09/02/Nmap%E6%8A%80%E6%9C%AF%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2018/09/02/Nmap技术详解/</id>
    <published>2018-09-02T06:55:31.000Z</published>
    <updated>2018-09-03T14:50:26.385Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文参考<a href="http://www.tup.tsinghua.edu.cn/bookscenter/book_07230301.html" target="_blank" rel="noopener">诸神之眼</a>，由浅入深剖析Nmap进行网络安全审计技术，涉及活跃主机发现，端口扫描，远程操作系统和服务检测等技术</p></blockquote><a id="more"></a><hr><h2 id="0x01-Nmap-扫描范围"><a href="#0x01-Nmap-扫描范围" class="headerlink" title="0x01 Nmap 扫描范围"></a>0x01 Nmap 扫描范围</h2><h3 id="1-对连续范围内主机进行扫描"><a href="#1-对连续范围内主机进行扫描" class="headerlink" title="1. 对连续范围内主机进行扫描"></a>1. 对连续范围内主机进行扫描</h3><p><em>命令语法：Nmap [IP地址范围]</em></p><p>扫描范围为192.168.0.1~192.168.0.255 的主机</p><pre><code>Nmap -sn 192.168.0.1-255</code></pre><h3 id="2-对整个子网进行扫描"><a href="#2-对整个子网进行扫描" class="headerlink" title="2. 对整个子网进行扫描"></a>2. 对整个子网进行扫描</h3><p>Nmap 使用 <strong>CIDR</strong> (Classless Inter-Domain Routing，无类别域间路由)方式扫描整个子网</p><p><em>命令语法：Nmap [IP地址/掩码位数]</em></p><p>扫描范围为192.168.0.1~192.168.0.255子网范围内的主机</p><pre><code>Nmap -sn 192.168.0.1/24</code></pre><h3 id="3-对多个不连续的主机进行扫描"><a href="#3-对多个不连续的主机进行扫描" class="headerlink" title="3. 对多个不连续的主机进行扫描"></a>3. 对多个不连续的主机进行扫描</h3><p>将目标地址用空格分隔开来同时扫描选定主机</p><p><em>语法命令：Nmap [扫描目标1 扫描目标2 … 扫描目标n]</em></p><p>对192.168.0.1，192.168.2.1，192.168.128.1进行扫描</p><pre><code>Nmap -sn 192.168.0.1 192.168.2.1 192.168.128.1</code></pre><h3 id="4-排除指定目标扫描主机"><a href="#4-排除指定目标扫描主机" class="headerlink" title="4. 排除指定目标扫描主机"></a>4. 排除指定目标扫描主机</h3><p><em>命令语法：Nmap [目标] –exclude [目标]</em></p><p>扫描192.168.0.0/24 子网时，不对192.168.0.2进行扫描</p><pre><code>Nmap -sn 192.168.0.0/24 --exclude 192.168.0.2</code></pre><h3 id="5-对文本文件中的地址进行扫描"><a href="#5-对文本文件中的地址进行扫描" class="headerlink" title="5. 对文本文件中的地址进行扫描"></a>5. 对文本文件中的地址进行扫描</h3><p><em>命令语法：Nmap -iL [文本文件]</em></p><p>使用命令对 list.txt 中的地址进行扫描</p><pre><code>Nmap -sn -iL list.txt</code></pre><p><em>-sn 选项：快速扫描，仅确定目标是否是存活主机</em></p><h3 id="6-随机确定扫描目标"><a href="#6-随机确定扫描目标" class="headerlink" title="6. 随机确定扫描目标"></a>6. 随机确定扫描目标</h3><p><em>命令语法：Nmap -iR [目标数量]</em></p><p>随机在互联网上对80个IP地址进行扫描</p><pre><code>Nmap -sn -iR 80</code></pre><hr><h2 id="0x02-活跃主机发现"><a href="#0x02-活跃主机发现" class="headerlink" title="0x02 活跃主机发现"></a>0x02 活跃主机发现</h2><h3 id="1-基于APR协议"><a href="#1-基于APR协议" class="headerlink" title="1. 基于APR协议"></a>1. 基于APR协议</h3><p><strong>(1) 原理</strong></p><p>若想知道处在<strong>同一网段</strong>中IP地址为#.#.#.#的主机是否为活跃主机，先构造一个ARP请求数据包，并广播出去，如果得到回应，则说明该主机为活跃主机</p><p><strong>(2) Nmap 选项</strong></p><p><em>命令语法：Nmap -PR [目标]</em></p><p><strong>工作原理</strong></p><p>A. 将一个内容为 ‘<em>who has IP_2 tell IP_1</em>‘ 的 ARP 请求发送给目标 （Type：ARP(0x0806)；Opcode：request(1)）</p><p>B. 如果目标主机发出相应ARP回应’<em>ARP reply IP_2 is at MAC_2</em>‘ （Type：ARP(0x0806)；Opcode：reply(2)）</p><p>C. 如果迟迟得不到ARP响应数据包，可认为该IP地址所在设备不是活跃主机</p><h3 id="2-基于ICMP协议"><a href="#2-基于ICMP协议" class="headerlink" title="2. 基于ICMP协议"></a>2. 基于ICMP协议</h3><p><strong>(1) ICMP协议解析</strong></p><p>ICMP协议目的是在IP主机，路由器之间传递控制消息，发现和处理互联网的各种错误；ICMP报文可分为差错和查询两类，查询报文是用一对请求和应答定义的，可分为如下3类</p><p>A. <strong>响应请求和应答</strong></p><p>用于测试发送和接收两端链路及目标主机TCP/IP协议是否正常，只要收到就是正常，例如ping命令</p><p>B. <strong>时间戳请求和应答</strong></p><p>ICMP时间戳请求允许系统向另一个系统查询当前的时间，根据应答判断主机是否在线</p><p>C. <strong>地址掩码请求和应答</strong></p><p>ICMP地址掩码请求由源主机发送，用于无盘系统在引导过程中获取自己的子网掩码</p><p><strong>(2) 主机发现</strong></p><p>A. <strong>通过ICMP响应请求和应答进行主机发现</strong></p><p>由于ping工具的滥用，多数用于防护主机的防火墙设备都隔绝ICMP数据包通过，使用Nmap的选项-PE可实现ICMP协议的主机发现</p><p><em>命令语法：Nmap -PE [选项]</em></p><pre><code>Nmap -sn -PE 192.168.0.1</code></pre><p>主机向目标发送一个ICMP echo请求包，结果中的 <em>Type：8 (Echo (ping) request)</em>；若对方主机在线，而且没有防火墙隔离通信，将会收到目标主机但会的ICMP echo 响应数据包，<br><em>Type: 0 (Echo (ping) reply)</em></p><p>B. <strong>通过ICMP时间戳请求和应答进行主机发现</strong></p><p><em>命令语法：Nmap -PP [选项]</em></p><pre><code>Nmap -sn -PP 192.168.0.1</code></pre><p>发送的数据包Type字段为 <em>Type：13 (Timestamp request)</em>；目标主机在获得这个数据包之后，返回 <em>Type：14 (Timestamp reply)</em> 的响应数据包</p><p>C. 通过ICMP地址掩码请求和应答进行主机发现</p><p><em>命令语法：Nmap -PM [目标]</em></p><p>发送的数据包 Type 字段为 <em>Type：17(Address mask request)</em> ，实际中多用于无盘系统</p><h3 id="3-基于TCP协议"><a href="#3-基于TCP协议" class="headerlink" title="3. 基于TCP协议"></a>3. 基于TCP协议</h3><p><strong>(1)TCP协议解析</strong></p><p>TCP 是一种面向连接，可靠的，基于字节流的传输控制协议，使用三次握手协议建立连接。当主动方发出 SYN 连接请求后，等待对方回答TCP的三次握手 SYN+ACK ，并最终对对方的SYN执行ACK确认</p><p><strong>TCP三次握手过程</strong></p><pre><code>1. 客户端发送SYN(SEQ=x)报文给服务端，进入SYN_SEND状态2. 服务端接收SYN报文，回应一个SYN(SEQ=y) ACK(ACK=x+1) 报文，进入SYN_RECV状态3. 客户端收到服务器端的SYN报文，回应一个ACK(ACK=y+1)报文，进入Established状态</code></pre><p><strong>(2) 主机发现</strong></p><p>A. <strong>TCP SYN扫描</strong></p><p><em>命令语法：Nmap -PS [端口1，端口2，…] [目标]</em></p><p>使用-PS选项想目标主机发送一个设置了SYN标志的数据包，内容部分为空。默认目标端口为80端口</p><p>目标主机收到Nmap发送的SYN数据包之后，认为其要和自己的一个端口建立连接，如果端口开放，目标主机会按照三次握手规定，返回一个SYN/ACK数据包，表示同意连接</p><p>如果端口关闭，目标主机会拒绝此次连接，向Nmap所在主机发送一个RST数据包</p><p>主机发现阶段，只要收到数据包，无论是SYN/ACK数据包还是RST数据包，意味目标主机活跃</p><p>B. <strong>TCP ACK扫描</strong></p><p>Nmap发送的数据包中使用TCP/ACK标志位，不是SYN标志位</p><p><em>命令语法：Nmap -PA [目标]</em></p><h3 id="4-基于UDP协议"><a href="#4-基于UDP协议" class="headerlink" title="4. 基于UDP协议"></a>4. 基于UDP协议</h3><p><strong>(1) UDP 协议解析</strong></p><p>UDP协议面向非连接，端口扫描可靠性不高；当一个UDP端口收到一个UDP数据包时，如果它是<strong>关闭</strong>的，会给源端返回一个<strong>ICMP端口不可达数据包</strong>；如果它是开放的，就会忽略此数据包，将其丢弃不反悔任何信息(可能是传输过程中数据包丢失，扫描时间超过限制)</p><p><strong>(2) 主机发现</strong></p><p><em>命令语法：Nmap -PU [目标]</em></p><p>UDP需要扫描的是目标主机关闭的端口，扫描过程需要避开常用UDP协议端口，选用比较大的端口</p><h3 id="5-基于SCTP协议"><a href="#5-基于SCTP协议" class="headerlink" title="5. 基于SCTP协议"></a>5. 基于SCTP协议</h3><p><strong>(1) SCTP协议解析</strong></p><p>SCTP与TCP同为传输层上的协议，完成任务相同，差别对别如下</p><p>A. TCP协议一般用于单地址连接，SCTP可用于多地址连接</p><p>B. TCP协议基于字节流，支持一个流；SCTP协议基于消息流，可支持多个流</p><p>C. TCP连接的建立通过三次握手实现，SCTP连接建立通过四次握手机制实现，可有效避免攻击</p><p>在STCP中，客户端使用一个<code>INIT</code>报文发起连接，服务器端使用<code>INIT-ACK</code>报文进行应答，其中包括<code>cookie</code>(连接的唯一标识)。然后客户端使用一个<code>COOKIE-ECHO</code>报文进行响应，其中包含服务气短所发送的cookie。服务器端要为这个链接分配资源，并通过向客户端发送一个<code>COOKIE-ACK</code>报文对其进行响应</p><p><strong>(2) 主机发现</strong></p><p><em>命令语法：Nmap -PY [端口1，端口2，…] [目标]</em></p><p>多数目标主机不支持SCTP协议，此方法作为备用手段</p><h3 id="6-基于IP协议"><a href="#6-基于IP协议" class="headerlink" title="6. 基于IP协议"></a>6. 基于IP协议</h3><p>Nmap中允许想目标主机发送IP数据包来检测目标主机是否活跃，可用<code>-PO</code>选项制定协议编号进行扫描，默认为ICMP-1，IGMP-2，IP-in-IP-4，TCP-6，UDP-17，GRE-47，ESP-50</p><p><em>命令语法：Nmap -sP -PO 协议编号 [目标]</em></p><p>此情形数据包内容为空，容易被检测，可使用–data-length参数来发送添加了随机数据的数据包</p><pre><code>Nmap --data-length 25 192.168.0.1</code></pre><h3 id="7-基于DNS协议"><a href="#7-基于DNS协议" class="headerlink" title="7. 基于DNS协议"></a>7. 基于DNS协议</h3><p>将所有目标IP(无论是否活跃)对应的域名列出</p><p><em>命令语法：Nmap -R [目标IP]</em></p><p>取消域名转换，适用于大规模网络扫描</p><p><em>命令语法：Nmap -n [目标IP]</em></p><hr><h2 id="0x03-端口扫描技术"><a href="#0x03-端口扫描技术" class="headerlink" title="0x03 端口扫描技术"></a>0x03 端口扫描技术</h2><h3 id="1-SYN-扫描"><a href="#1-SYN-扫描" class="headerlink" title="1. SYN 扫描"></a>1. SYN 扫描</h3><p>Nmap 默认扫描方式，扫描速度快，不易被网络安全设备发现</p><pre><code>1. Nmap想目标主机的一个端口发送请求连接的SYN数据包2. 目标计算机在接收这个SYN数据包之后会以SYN/ACK进行应答3. Nmap在收到SYN/ACK后发送RST包请求断开连接而不是ACK应答</code></pre><p>三四握手没有完成，无法建立正常的TCP连接，扫描不会被记录到系统日志中</p><p><em>扫描语法：nmap -sS [target]</em></p><h3 id="2-Connect扫描"><a href="#2-Connect扫描" class="headerlink" title="2. Connect扫描"></a>2. Connect扫描</h3><p><em>语法：nmap -sT [target]</em></p><p>这种扫描方式完成了TCP三次握手，无需rooy/administrator 权限</p><h3 id="3-UDP-扫描"><a href="#3-UDP-扫描" class="headerlink" title="3. UDP 扫描"></a>3. UDP 扫描</h3><p><em>语法：nmap -sU [target]</em></p><p>UDP 扫描速度较慢，UDP程序不会对Nmap所发送的空数据包做出回应</p><h3 id="4-TCP-FIN-扫描"><a href="#4-TCP-FIN-扫描" class="headerlink" title="4. TCP FIN 扫描"></a>4. TCP FIN 扫描</h3><p><em>语法：nmap -sF [target]</em></p><p>TCP FIN 扫描方法向目标端口发送一个FIN数据包，对于关闭的端口，目标系统返回RST标志</p><h3 id="5-NULL-扫描"><a href="#5-NULL-扫描" class="headerlink" title="5. NULL 扫描"></a>5. NULL 扫描</h3><p><em>语法：nmap -sN [target]</em></p><p>TCP NULL 扫描方法向目标端口发送一个不包含任何标志的数据包，对于关闭的端口，目标系统返回RST标志</p><h3 id="6-Xmas-Tree-扫描"><a href="#6-Xmas-Tree-扫描" class="headerlink" title="6. Xmas Tree 扫描"></a>6. Xmas Tree 扫描</h3><p><em>语法：nmap -sX [target]</em></p><p>TCP Xmas Tree 扫描方法是向目标端口发送一个含有FIN,URG,PUSH 标志的数据包，对于关闭的端口，目标系统返回RST标志</p><h3 id="7-idle-扫描"><a href="#7-idle-扫描" class="headerlink" title="7. idle 扫描"></a>7. idle 扫描</h3><p>伪造一个源地址为第三方的数据包，可以帮助使用者隐藏自己的身份，目标主机日志中记录下来的是第三方地址</p><p>可以绕开网络中的一些安全机制，如路由器中的访问控制列表(ACL)</p><p><strong>扫描原理</strong></p><pre><code>1. 检测第三方的IP ID 值并记录下来2. 在本机上伪造一个源地址为第三方主机的数据包，将其发送给目标主机端口，根据端口状态的不同，目标主机可能会导致第三方主机IP ID值增加3. 再回来检查第三方主机的IP ID值，比较两次值</code></pre><p>如果第三方IP ID值增加了1，说明在此期间没有向外发送数据包，则目标主机端口关闭；如果增加了2，说明再次期间第三方主机向外发送了数据包，则目标主机端口开放</p><pre><code>Nmap -Pn -p- -sI A B</code></pre><p>使用sI参数指定A作为第三方主机，然后对B进行扫描</p><h3 id="8-指定扫描端口"><a href="#8-指定扫描端口" class="headerlink" title="8. 指定扫描端口"></a>8. 指定扫描端口</h3><pre><code>1. 扫描常见的100个端口    nmap -F [target]2. 指定某一个端口    nmap -p [port] [target]3. 使用名字来指定扫描端口    nmap -p [port name(s)] [target]4. 使用协议指定扫描端口    nmap -p U:[UDP ports]，T:[TCP ports] [target]5. 扫描所有端口    nmap -p * [target]6. 扫描常用端口    nmap --top-ports [number] [target]</code></pre><hr><h2 id="0x04-系统与服务检测"><a href="#0x04-系统与服务检测" class="headerlink" title="0x04 系统与服务检测"></a>0x04 系统与服务检测</h2><h3 id="1-操作系统判断"><a href="#1-操作系统判断" class="headerlink" title="1. 操作系统判断"></a>1. 操作系统判断</h3><p>通过向目标发送探针，然后根据目标的回应来猜测系统，进行识别的探针和响应对应的关系保存在Nmap-os-db文件中</p><p><em>nmap -O [target]</em></p><p>猜测最接近目标的匹配操作系统类型</p><pre><code>nmap -sV -F --fuzzy --oscan-guess 目标IP</code></pre><h3 id="2-服务及版本发现"><a href="#2-服务及版本发现" class="headerlink" title="2. 服务及版本发现"></a>2. 服务及版本发现</h3><p>版本检测程序会将探测结果与<code>Nmap-service-probes</code>数据库中的内容进行比较，如果匹配成功，就可以确认目标端口运行的具体服务</p><pre><code>-sV(版本探测)--allports(不为版本探测排除任何端口)--version-intensity &lt;intensity&gt; (设置版本扫描强度)--version-light(打开轻量级模式，扫描速度加快)--version-all(尝试每个探测)--version-trace(跟踪版本扫描活动)-sR(RPC扫描)</code></pre><hr><h2 id="0x05-高级技术及防御"><a href="#0x05-高级技术及防御" class="headerlink" title="0x05 高级技术及防御"></a>0x05 高级技术及防御</h2><h3 id="1-Nmap-伪装技术"><a href="#1-Nmap-伪装技术" class="headerlink" title="1. Nmap 伪装技术"></a>1. Nmap 伪装技术</h3><p><strong>(1) Nmap -f 目标</strong></p><p>对 Nmap 发送的探测数据包进行<strong>分段</strong>(数据包含有 <code>Fragmentedd IP protocol</code>标识)，使目标网络防御机制例如包过滤，防火墙等在对数据包进行检测时更加困难</p><p><strong>(2) -mtu (使用制定的MTU)</strong></p><pre><code>Nmap --mtu 目标</code></pre><p><strong>(3) -D (decoy1[,decoy2][,ME],…)</strong></p><p>使用诱饵主机隐蔽扫描，逗号分隔每个诱饵IP地址，自己的IP地址可以用ME选项</p><p><strong>(4) –source-port (portnumber)；-g (portnumber) </strong></p><p>源端口欺骗，Nmap可以利用被目标检测机制遗忘的端口发送数据</p><p><strong>(5) –data-length [number]</strong></p><p>发送报文时附加随机数据，避免内容为空的报文被目标网络检测机制发现</p><p><strong>(6) –ttl [value]</strong></p><p>设置IP time-to-live域，指定特定的ttl</p><p><strong>(7) –spoof-mac [mac address，prefix，or vendor name]</strong></p><p>人为指定Nmap在扫描时发送以太网帧的MAC地址</p><h3 id="2-系统扫描防范"><a href="#2-系统扫描防范" class="headerlink" title="2. 系统扫描防范"></a>2. 系统扫描防范</h3><p>补丁，安装更新，防火墙，蜜罐技术等网络安全防护</p><p><strong>(1) Morph</strong></p><p>可将操作系统模拟为其他类型的操作系统，改变原来操作系统对TCP,UDP,ICMP数据包的响应</p><p><strong>(2) IP Personality</strong></p><p>利用iptables来处理TCP和UDP的请求，隐藏操作系统</p><h3 id="3-格式化输出"><a href="#3-格式化输出" class="headerlink" title="3. 格式化输出"></a>3. 格式化输出</h3><p><strong>(1) 文本文件</strong></p><p><em>语法：nmap -oN [#.txt] [target]</em></p><p><strong>(2) xml 格式</strong></p><p><em>语法：nmap -oX [#.xml] [target]</em></p><p><strong>(3) grep 文件</strong></p><p><em>语法：nmap -oX [#.grep] [target]</em></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文参考&lt;a href=&quot;http://www.tup.tsinghua.edu.cn/bookscenter/book_07230301.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;诸神之眼&lt;/a&gt;，由浅入深剖析Nmap进行网络安全审计技术，涉及活跃主机发现，端口扫描，远程操作系统和服务检测等技术&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="0x02 安全技术" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="安全工具" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="SecTools" scheme="http://yoursite.com/tags/SecTools/"/>
    
      <category term="Nmap" scheme="http://yoursite.com/tags/Nmap/"/>
    
  </entry>
  
  <entry>
    <title>Metasploit渗透笔记</title>
    <link href="http://yoursite.com/2018/08/29/Metasploit%E6%B8%97%E9%80%8F%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2018/08/29/Metasploit渗透笔记/</id>
    <published>2018-08-29T03:46:11.000Z</published>
    <updated>2018-09-03T13:28:29.347Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://www.metasploit.com/" target="_blank" rel="noopener">Metasploit</a>—世界上最新流行的渗透测试框架之一，本文参考<a href="https://www.offensive-security.com/metasploit-unleashed/" target="_blank" rel="noopener">Offensive-Security-metasploit</a> 及 <a href="https://github.com/Urinx/Books/blob/master/metasploit/Metasploit%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%8C%87%E5%8D%97.pdf" target="_blank" rel="noopener">The Penetration Tester’s Guide</a>对Metasploit框架相关技术及渗透测试流程进行分析总结，然后通过实践体验Metasploit的魅力</p></blockquote><a id="more"></a><hr><h2 id="0x01-Metasploit基础"><a href="#0x01-Metasploit基础" class="headerlink" title="0x01 Metasploit基础"></a>0x01 Metasploit基础</h2><h3 id="1-专业术语"><a href="#1-专业术语" class="headerlink" title="1. 专业术语"></a>1. 专业术语</h3><p><strong>(1) 渗透攻击(Exploit)</strong></p><p>由攻击者或渗透测试者利用一个系统，应用或服务中的安全漏洞，所进行的攻击行为</p><p><strong>(2) 攻击载荷(Payload)</strong></p><p>目标系统被渗透攻击之后期望去执行的代码，在MSF中可以自由选择，传送和植入</p><p><strong>(3) Shellcode</strong></p><p>在渗透攻击时作为攻击载荷运行的一组机器指令，常用汇编语言编写</p><p><strong>(4) 模块(Moudle)</strong></p><p>指Metasploit框架中所使用的一段软件代码组件</p><p><strong>(5) 监听器(Listener)</strong></p><p>Metasploit中用来等待连入网络连接的组件</p><h3 id="2-用户接口"><a href="#2-用户接口" class="headerlink" title="2. 用户接口"></a>2. 用户接口</h3><p><strong>(1) MSF终端</strong></p><p>一种用户友好的模式提供交互方式，用于访问软件所有的功能特性</p><pre><code>msfconsole</code></pre><p><strong>(2) MSF命令行 </strong></p><p><code>msfcli</code>考虑用脚本处理和玉其他命令行工具的互操作性，新版本不再支持，使用<code>msfconsole -x</code>代替</p><p><strong>(3) Armitage</strong></p><p><code>armitage</code>组件是一个完全交互式的图形化用户接口</p><pre><code>armitage</code></pre><h3 id="3-功能程序"><a href="#3-功能程序" class="headerlink" title="3. 功能程序"></a>3. 功能程序</h3><p><strong>(1) MSF攻击载荷生成器</strong></p><p>能够生成<code>shellcode</code>，可执行代码，可以在框架软件之外的渗透代码中进行使用，<code>msfpayload</code>已弃用，由<code>msfvenom</code>工具代替</p><p><strong>(2) MSF编码器</strong></p><p>通过对原始攻击载荷进行编码，来避免坏字符，以及逃避杀毒软件和IDS的检测，<code>msfencode</code>由<code>msfvenom</code>取代</p><p><strong>(3) Nasm Shell</strong></p><p><code>nasm_shell.rb</code>功能程序可对给定的汇编命令找出其opcode操作码</p><hr><h2 id="0x02-情报收集"><a href="#0x02-情报收集" class="headerlink" title="0x02 情报收集"></a>0x02 情报收集</h2><h3 id="1-被动信息收集"><a href="#1-被动信息收集" class="headerlink" title="1. 被动信息收集"></a>1. 被动信息收集</h3><p>在不接触目标系统的情况下挖掘目标信息，<strong>公开情报渠道(OSINT)</strong>是一类对公开和已知信息来检索和筛选就可以获取到的目标情报集合</p><p><strong>(1) whois 查询</strong></p><pre><code>msf &gt; whois 域名</code></pre><p><strong>(2) Netcraft</strong></p><p><a href="https://searchdns.netcraft.com/" target="_blank" rel="noopener">Netcraft</a>一个网页界面的工具，可以发现承载某个特定网站的服务器IP地址</p><pre><code>msf &gt; whois IP</code></pre><p><strong>(3) NSLookup</strong></p><p>可以用于获取关于服务器的附加信息</p><pre><code>root@kali:~# nslookup&gt; 域名</code></pre><h3 id="2-主动信息收集"><a href="#2-主动信息收集" class="headerlink" title="2. 主动信息收集"></a>2. 主动信息收集</h3><p>与目标系统直接交互，从而对其进行更深入的了解；注意可能被IDS或IPS发现</p><p><strong>(1) Nmap 端口扫描</strong></p><pre><code>root@kali:~# nmap -sS -Pn IP</code></pre><p><code>-sS</code>选项用于执行一次隐秘的TCP扫描，以确定某个特定的TCP端口是否开放；</p><p><code>-Pn</code>选项告诉nmap不使用ping命令预先判断主机是否存活，默认所有主机处于存活状态，大多数网络不允许ping命令的ICMP通行，避免漏掉许多实际存活的主机</p><p><strong>(2) 在Metasploit中使用数据库</strong></p><p>Metasploit 支持 MySQL，PostgreSQL 和 SQLite3 数据库</p><p>使用init.d脚本启动数据库子系统</p><pre><code>root@kali~# /etc/init.d/postgresql start</code></pre><p>Metasploit 框架连接数据库实例</p><pre><code>msf &gt; db_connect postgres:toor@127.0.0.1/msfbook</code></pre><p>PostgreSQL默认用户名为postgres，口令为toor，使用msfbook作为数据库名</p><p>数据库连接状态查看</p><pre><code>msf &gt; db_status</code></pre><p>A. <strong> 将Nmap输出的结果导入Metasploit</strong></p><p>使用<code>-oX</code>选项进行扫描，生成名为<code>subnet.xml</code>的文件</p><pre><code>nmap -Pn -sS -A -oX submet 192.168.1.0/24</code></pre><p>使用<code>db_import</code>命令将文件导入到数据库中；完毕后，可使用<code>db_hosts</code>命令合适导入的结果(显示数据库中所有已保存的主机信息)</p><pre><code>msf &gt; db_connect postgres:passwd@127.0.0.1/msf3msf &gt; db_import sbumet.xmlmsf &gt; hosts -c address</code></pre><p>B. <strong>高级 Nmap 技巧: TCP 空闲扫描</strong></p><p>TCP 空闲扫描：冒充网络上另一台主机的IP地址，对目标进行隐秘的扫描；可使用Meatsploit框架中的<em>scanner/ip/ipidseq</em>模块，寻找满足TCP空闲扫描要求的空闲主机</p><pre><code>msf &gt; use auxiliary/scanner/ip/ipidseqmsf auxiliary(ipidseq) &gt; show options</code></pre><p>列表显示了执行<em>ipidseq</em>扫描所需的所有参数；<code>RHOST</code>-此参数可使用IP地址段，CIDR地址快，逗号分隔的多个CIDR地址块；<code>THREAD</code>-此参数设定扫描线程数，默认为1，增加参数值可提高扫描速度，降低参数值可减少网络上的数据流量</p><p>设定好参数并执行扫描模块</p><pre><code>msf auxiliary(ipidseq) &gt; set RHOSTS 192.168.1.0/24RHOSTS =&gt; 192.168.1.0/24msf auxiliary(ipidseq) &gt; set THREADS 50THREADS =&gt; 50msf auxiliary(ipidseq) &gt; run</code></pre><p>尝试在nmap中使用-sI选项指定特定IP作为空闲主机(<code>Incremental</code>)对目标主机进行扫描</p><pre><code>msf auxiliary(ipidseq) &gt; nmap -PN -sI 空闲IP 目标IP</code></pre><p>C. <strong> 在 MSF 终端中运行 Nmap</strong></p><p>连接到数据库</p><pre><code>msf &gt; db_connect postgres:passwd@127.0.0.1/msf3</code></pre><p>输入<code>db_nmap</code>命令，在MSF终端中运行nmap，并自动将nmap结果存储在数据库中</p><pre><code>msf &gt; db_nmap -sS -A 192.168.1.0/24</code></pre><p>执行 <code>db_services</code> 命令查看数据库中的关于系统上运行服务的扫描结果</p><pre><code>msf &gt; services</code></pre><p><strong>(3) 使用Metasploit进行端口扫描</strong></p><p>查看Metasploit框架中提供的端口扫描工具</p><pre><code>msf &gt; search portscan</code></pre><p>使用Metasploit的SYN端口扫描器对单个主机进行一次简单扫描</p><pre><code>msf &gt; use scanner/portscan/synmsf auxiliary(syn) &gt; set RHOSTS IPRHOSTS =&gt; IPmsf auxiliary(syn) &gt; set THREADS 50THREADS =&gt; 50</code></pre><h3 id="3-针对性扫描"><a href="#3-针对性扫描" class="headerlink" title="3. 针对性扫描"></a>3. 针对性扫描</h3><p><strong>(1) 服务器消息块协议扫描</strong></p><p>利用<code>smb_version</code>模块遍历一个网络，获取Windows系统的版本号</p><pre><code>msf &gt; use scanner/smb/smb_versionmsf auxiliary(scanner/smb/smb_version) &gt; show optionsModule options (auxiliary/scanner/smb/smb_version):   Name       Current Setting  Required  Description   -----------------------------------------------------------------------------------   RHOSTS                      yes       The target address range or CIDR identifier   SMBDomain  .                no        The Windows domain to use for authentication   SMBPass                     no        The password for the specified username   SMBUser                     no        The username to authenticate as   THREADS    1                yes       The number of concurrent threadsmsf auxiliary(scanner/smb/smb_version) &gt; set RHOSTS IPRHOSTS =&gt; IPmsf auxiliary(scanner/smb/smb_version) &gt; run</code></pre><p>可使用 <code>hosts</code> 命令查看数据库中保存的结果</p><pre><code>msf auxiliary(scanner/smb/smb_version) &gt; hosts</code></pre><p><strong>(2) 搜寻配置不当的Microsoft SQL Server</strong></p><p>配置不当的MS SQL通常为进入目标系统的第一个后门，容易被忽略；使用<code>mssql_ping</code>对UDP端口1434进行查询，获取随机的TCP端口(1433)</p><pre><code>msf &gt; use scanner/mssql/mssql_pingmsf auxiliary(scanner/mssql/mssql_ping) &gt; show optionsModule options (auxiliary/scanner/mssql/mssql_ping):   Name                 Current Setting  Required  Description   ----                 ---------------  --------  -----------   PASSWORD                              no        The password for the specified username   RHOSTS                                yes       The target address range or CIDR identifier   TDSENCRYPTION        false            yes       Use TLS/SSL for TDS data &quot;Force Encryption&quot;   THREADS              1                yes       The number of concurrent threads   USERNAME             sa               no        The username to authenticate as   USE_WINDOWS_AUTHENT  false            yes       Use windows authentification (requires DOMAIN option set)msf auxiliary(scanner/mssql/mssql_ping) &gt; set RHOSTS 192.168.1.0/24RHOSTS =&gt; 192.168.1.0/24msf auxiliary(scanner/mssql/mssql_ping) &gt; set THREADS 255THREADS =&gt; 255msf auxiliary(scanner/mssql/mssql_ping) &gt; run</code></pre><p><strong>(3) SSH 服务器扫描</strong></p><p>许多SSH实现版本中均被发现了安全漏洞，使用Metasploit框架的 <code>ssh_version</code> 模块来识别目标服务器上运行的SSH版本</p><pre><code>msf &gt; use scanner/ssh/ssh_versionmsf auxiliary(scanner/ssh/ssh_version) &gt; set THREADS 50THREADS =&gt; 50msf auxiliary(scanner/ssh/ssh_version) &gt; run </code></pre><p><strong>(4) FTP 扫描</strong></p><p>FTP服务器是进入一个目标网络最便捷的途径，使用Metasploit框架中<code>ftp_version</code>模块可以对 windows 虚拟机FTP服务器进行扫描</p><pre><code>msf &gt; use scanner/ftp/ftp_versionmsf auxiliary(scanner/ftp/ftp_version) &gt; show optionsModule options (auxiliary/scanner/ftp/ftp_version):   Name     Current Setting      Required  Description   ----     ---------------      --------  -----------   FTPPASS  mozilla@example.com  no        The password for the specified username   FTPUSER  anonymous            no        The username to authenticate as   RHOSTS                        yes       The target address range or CIDR identifier   RPORT    21                   yes       The target port (TCP)   THREADS  1                    yes       The number of concurrent threadsmsf auxiliary(scanner/ftp/ftp_version) &gt; set RHOSTS ipRHOSTS =&gt; ipmsf auxiliary(scanner/ftp/ftp_version) &gt; set THREADS 50THREADS =&gt; 50msf auxiliary(scanner/ftp/ftp_version) &gt; run</code></pre><p>若成功识别出FTP服务器，可用scanner/ftp/anonymous模块检查FTP服务器是否允许匿名登录</p><pre><code>msf &gt; use auxiliary/scanner/ftp/anonymousmsf auxiliary(scanner/ftp/anonymous) &gt; set RHOSTS 192.168.1.0/24RHOSTS =&gt; 192.168.1.0/24msf auxiliary(scanner/ftp/anonymous) &gt; set THREADS 50THREADS =&gt; 50msf auxiliary(scanner/ftp/anonymous) &gt; run</code></pre><p><strong>(5) SNMP 扫描</strong></p><p>SNMP通常用于网络设备中，用来报告带宽利用率，冲突率等，也可包含在OS中，用来提供类似CPU利用率，空闲内存以及系统状态信息等</p><p>Metasploit 框架中包含内置辅助模块<code>scanner/snmp/snmp_enum</code>，为SNMP扫描专门设计；利用<code>scanner/snmp/snmp_login</code>模块可尝试对一个IP或一组IP使用字典猜解SNMP团体字符串</p><pre><code>msf &gt; use scanner/snmp/snmp_loginmsf auxiliary(scanner/snmp/snmp_login) &gt; set RHOSTS 192.168.1.0/24RHOSTS =&gt; 192.168.139.0/24msf auxiliary(scanner/snmp/snmp_login) &gt; set THREADS 50THREADS =&gt; 50msf auxiliary(scanner/snmp/snmp_login) &gt; run</code></pre><hr><h2 id="0x03-漏洞扫描"><a href="#0x03-漏洞扫描" class="headerlink" title="0x03 漏洞扫描"></a>0x03 漏洞扫描</h2><h3 id="1-基本漏洞扫描"><a href="#1-基本漏洞扫描" class="headerlink" title="1. 基本漏洞扫描"></a>1. 基本漏洞扫描</h3><p><strong>旗标攫取：</strong>连接到一个远程网络服务，并读取该服务独特的标识</p><p>使用<code>netcat</code>获取目标IP的旗标</p><pre><code>root@kali:~# nc IP port</code></pre><h3 id="2-使用-NeXpose-进行扫描"><a href="#2-使用-NeXpose-进行扫描" class="headerlink" title="2. 使用 NeXpose 进行扫描"></a>2. 使用 NeXpose 进行扫描</h3><p>通过对网络进行扫描，查找出网络上正在运行的设备，最终识别出操作系统和应用程序上的安全漏洞</p><h3 id="3-使用-Nessus-进行扫描"><a href="#3-使用-Nessus-进行扫描" class="headerlink" title="3. 使用 Nessus 进行扫描"></a>3. 使用 Nessus 进行扫描</h3><p>Nessus 漏洞扫描器是世界上使用最广泛的漏洞扫描器之一</p><h3 id="4-专用漏洞扫描器"><a href="#4-专用漏洞扫描器" class="headerlink" title="4. 专用漏洞扫描器"></a>4. 专用漏洞扫描器</h3><p><strong>(1) 验证 SMB 登录</strong></p><p><strong>(2) 扫描开放的 VNC 空口令</strong></p><p><strong>(3) 扫描开放的 X11 服务器</strong></p><h3 id="5-自动化攻击"><a href="#5-自动化攻击" class="headerlink" title="5. 自动化攻击"></a>5. 自动化攻击</h3><hr><h2 id="0x04-渗透攻击"><a href="#0x04-渗透攻击" class="headerlink" title="0x04 渗透攻击"></a>0x04 渗透攻击</h2><h3 id="1-渗透攻击基础"><a href="#1-渗透攻击基础" class="headerlink" title="1. 渗透攻击基础"></a>1. 渗透攻击基础</h3><p><strong>(1) msf &gt; show exploits</strong></p><p>显示 Metasploit 框架中所有可用的<strong>渗透攻击模块</strong>，在 MSF终端中，针对渗透测试中发现的安全漏洞来实施相应的渗透攻击</p><p><strong>(2) msf &gt; show auxiliary</strong></p><p>显示所有的<strong>辅助模块</strong>及其用途，可以是扫描器，拒绝服务攻击工具，Fuzz测试器，以及其他类型工具</p><p><strong>(3) msf &gt; show options</strong></p><p>列出模块所需的各种参数，未选择模块时，显示所有的全局参数</p><p><strong>back 命令：</strong>返回 Metasploit 的上一个状态 </p><p><strong>search 命令：</strong>查找某个特定的渗透攻击，辅助或者攻击在和模块</p><p><strong>use 命令：</strong>加载模块，此时终端中输入的命令在此攻击模块环境中运行</p><p><strong>show options：</strong>在已选择模块的命令下，显示模块所需的参数</p><p><strong>(4) msf &gt; show payloads</strong></p><p>将与当前模块兼容的攻击载荷显示出来</p><p><strong>serach 模块 —&gt; use 模块 —&gt; show payloads —&gt; set payload 攻击载荷 —&gt; show options —&gt; payload 利用</strong></p><p><strong>(5) msf &gt; show targets</strong></p><p>渗透攻击模块可列出受到漏洞影响目标系统的类型</p><p><strong>use exploit —&gt; show targets</strong></p><p><strong>(6) info</strong></p><p><strong>exploit &gt; info / info exploit：</strong>显示模块的详细信息，参数说明以及所有可用的目标操作系统</p><p><strong>(7) set 和 unset</strong></p><p>参数状态：设置(<strong>set</strong>)或未设置(<strong>unset</strong>)，有些参数被标记为必填项(required)，使用时需经过手工设置并处于启用状态</p><p><strong>set</strong> 命令：对某个参数进行设置(同时启用该参数)；<strong>unset</strong> 命令：禁用相关参数</p><p><strong>(8) setg 和 unsetg</strong></p><p>对全局参数进行设置或清楚，对常用且很少改变的参数设置方便</p><p><strong>(9) save</strong></p><p>使用setg命令对全局参数进行设置胡，可使用save命令将当前设置值保存下来，下次启用依然使用</p><p>设置值保存在<code>/root/.msf4/config</code>，将此文件删除或移动，可恢复原始设置</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.metasploit.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Metasploit&lt;/a&gt;—世界上最新流行的渗透测试框架之一，本文参考&lt;a href=&quot;https://www.offensive-security.com/metasploit-unleashed/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Offensive-Security-metasploit&lt;/a&gt; 及 &lt;a href=&quot;https://github.com/Urinx/Books/blob/master/metasploit/Metasploit%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%8C%87%E5%8D%97.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;The Penetration Tester’s Guide&lt;/a&gt;对Metasploit框架相关技术及渗透测试流程进行分析总结，然后通过实践体验Metasploit的魅力&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="0x02 安全技术" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="渗透测试" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="Pentest" scheme="http://yoursite.com/tags/Pentest/"/>
    
      <category term="Metasploit" scheme="http://yoursite.com/tags/Metasploit/"/>
    
  </entry>
  
  <entry>
    <title>安全与计算机工具导航</title>
    <link href="http://yoursite.com/2018/08/24/%E5%AE%89%E5%85%A8%E4%B8%8E%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%B7%A5%E5%85%B7%E5%AF%BC%E8%88%AA/"/>
    <id>http://yoursite.com/2018/08/24/安全与计算机工具导航/</id>
    <published>2018-08-24T03:16:55.000Z</published>
    <updated>2018-08-24T14:46:13.549Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>参考网络上的资源，整理的一些安全与计算机类<a href="https://firehacker.top/tools/" target="_blank" rel="noopener">Tools</a>，SecTools 涉及渗透平台及框架，漏洞扫描与利用，信息收集，网络分析，密码攻击，逆向工程，安全防御等；计算机类工具包括主流代码编辑器/编译器，问答社区，开源社区，博客平台，分布式系统，深度学习框架等</p></blockquote><a id="more"></a><hr><h2 id="SecTools"><a href="#SecTools" class="headerlink" title="SecTools"></a>SecTools</h2><h3 id="系统平台"><a href="#系统平台" class="headerlink" title="系统平台"></a>系统平台</h3><ul><li><p><a href="https://www.kali.org/" target="_blank" rel="noopener">Kali</a> <em>基于Debian的Linux发行版，专业的数字取证与渗透测试平台</em></p></li><li><p><a href="https://backbox.org/linux" target="_blank" rel="noopener">BackBox</a> <em>基于Ubuntu的Linux发行版的渗透测试和安全评估平台</em></p></li><li><p><a href="https://www.pentoo.ch/" target="_blank" rel="noopener">Pentoo</a> <em>一个为Live CD与Live USB设计的进行渗透测试与安全评估的Linux发行版</em></p></li><li><p><a href="https://archstrike.org/" target="_blank" rel="noopener">ArchStrike</a> <em>适用于安全专业人员和爱好者的Arch Linux存储库</em></p></li><li><p><a href="https://blackarch.org/" target="_blank" rel="noopener">BlackArch</a> <em>一款基于Arch的Linux发行版，用于系统渗透测试及安全研究的平台</em></p></li><li><p><a href="https://pentestbox.org/zh/" target="_blank" rel="noopener">PentestBox</a> <em>一款Windows平台下预配置的便携式开源渗透测试环境</em></p></li></ul><h3 id="漏洞扫描"><a href="#漏洞扫描" class="headerlink" title="漏洞扫描"></a>漏洞扫描</h3><ul><li><p><a href="https://www.tenable.com/products/nessus/nessus-professional" target="_blank" rel="noopener">Nessus</a> <em>世界上最流行的漏洞扫描程序之一</em></p></li><li><p><a href="http://www.openvas.org/" target="_blank" rel="noopener">OpenVAS</a> <em>一个提供漏洞扫描和漏洞管理的多种服务和工具的软件框架</em></p></li><li><p><a href="https://www.rapid7.com/products/nexpose/" target="_blank" rel="noopener">Nexpose</a> <em>一款漏洞扫描程序，支持漏洞发现，检测，验证，风险分类，影响分析，报告和缓解</em></p></li></ul><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><ul><li><p><a href="https://www.metasploit.com/" target="_blank" rel="noopener">Metasploit</a> <em>世界上最常用的渗透测试框架之一</em></p></li><li><p><a href="http://exploitpack.com/" target="_blank" rel="noopener">ExploitPack</a> <em>一个用于执行专业渗透测试的集成环境</em></p></li><li><p><a href="https://www.offensive-security.com/metasploit-unleashed/armitage/" target="_blank" rel="noopener">Armitage</a> <em>Metasploit Project的图形网络攻击管理工具，可以对目标进行可视化并推荐漏洞利用</em></p></li><li><p><a href="https://beefproject.com/" target="_blank" rel="noopener">BeEF</a> <em>The Browser Exploitation Framework，一种专注于Web浏览器的渗透测试工具</em></p></li><li><p><a href="https://github.com/byt3bl33d3r/CrackMapExec/wiki" target="_blank" rel="noopener">CME</a> <em>CrackMapExe是一种漏洞利用工具，可帮助自动评估大型Active Directory网络的安全性</em></p></li></ul><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><ul><li><p><a href="https://nmap.org/" target="_blank" rel="noopener">Nmap</a> <em>一个免费开源的用于网络发现和安全审计的网络映射实用程序</em></p></li><li><p><a href="https://nmap.org/zenmap/" target="_blank" rel="noopener">Zenmap</a> <em>官方的Nmap Security Scanner GUI，一个多平台免费和开源应用程序</em></p></li><li><p><a href="https://www.paterva.com/web7/buy/maltego-clients/maltego-ce.php" target="_blank" rel="noopener">Maltego</a> <em>一种交互式数据挖掘工具，可以为链接分析提供有向图，用于在线调查</em></p></li><li><p><a href="http://lcamtuf.coredump.cx/p0f3/#" target="_blank" rel="noopener">P0f</a> <em>一个多功能工具，用于被动式获取操作系统指纹，以识别远程主机操作系统</em></p></li><li><p><a href="https://tools.kali.org/information-gathering/dmitry" target="_blank" rel="noopener">DMitry</a> <em>Deepmagic，一款是用C编写的UNIX /（GNU）Linux命令行信息收集工具</em></p></li><li><p><a href="https://www.shodan.io/" target="_blank" rel="noopener">Shodan</a> <em>强大的搜索引擎，可使用各种过滤器连接到互联网的特定类型的互联网设备</em></p></li><li><p><a href="https://www.zoomeye.org/" target="_blank" rel="noopener">ZoomEye</a> <em>钟馗之眼，知道创宇开发的一款强大的检索网络空间节点的搜索引擎</em></p></li><li><p><a href="https://censys.io/" target="_blank" rel="noopener">Censys</a> <em>一个平台，可帮助信息安全从业者发现，监控和分析可从Internet访问的设备</em></p></li><li><p><a href="https://www.torproject.org/index.html.en" target="_blank" rel="noopener">Tor Browser</a> <em>Tor(The Onion Router)项目的旗舰产品，一款可实现匿名通信的浏览器，慎用</em></p></li></ul><h3 id="网络分析"><a href="#网络分析" class="headerlink" title="网络分析"></a>网络分析</h3><ul><li><p><a href="https://www.wireshark.org/" target="_blank" rel="noopener">Wireshark</a> <em>一款世界上最广泛使用的免费开源的网络数据包分析工具</em></p></li><li><p><a href="https://www.tcpdump.org/" target="_blank" rel="noopener">Tcpdump</a> <em>一个功能强大的命令行数据包分析器</em></p></li><li><p><a href="https://tools.kali.org/information-gathering/dnsenum" target="_blank" rel="noopener">DNSenum </a> <em>一款强大的域名信息收集工具</em></p></li><li><p><a href="https://network-tools.com/" target="_blank" rel="noopener">Net Tools</a> <em>网络工具集，包括Expres，Ping，Trace，Whois等多种工具</em></p></li><li><p><a href="https://github.com/hatRiot/zarp" target="_blank" rel="noopener">Zarp</a> <em>一种以利用本地网络为中心的网络攻击工具</em></p></li><li><p><a href="https://www.monkey.org/~dugsong/dsniff/" target="_blank" rel="noopener">Dsniff</a> <em>一系列用于网络审计和渗透测试的工具</em></p></li><li><p><a href="https://scapy.net/" target="_blank" rel="noopener">Scapy</a> <em>一个功能强大的交互式数据包操作程序</em></p></li><li><p><a href="http://netcat.sourceforge.net/" target="_blank" rel="noopener">Netcat</a> <em>一款网络实用程序，使用TCP/IP协议跨网络连接读取和写入数据</em></p></li><li><p><a href="https://github.com/nabla-c0d3/sslyze" target="_blank" rel="noopener">SSLyze</a> <em>一个Python库和一个CLI工具，可以通过连接来分析服务器的SSL配置</em></p></li><li><p><a href="https://github.com/cisco/joy" target="_blank" rel="noopener">Cisco Joy</a> <em>一款用于用于从实时网络流量或数据包捕获（pcap）文件中提取数据特征的工具</em></p></li></ul><h3 id="密码攻击"><a href="#密码攻击" class="headerlink" title="密码攻击"></a>密码攻击</h3><ul><li><p><a href="http://www.openwall.com/john/" target="_blank" rel="noopener">John the Ripper</a> <em>一款跨平台快速密码破解程序</em></p></li><li><p><a href="https://github.com/vanhauser-thc/thc-hydra" target="_blank" rel="noopener">Hydra</a> <em>一款可以支持多种协议和并行连接的密码破解工具</em></p></li><li><p><a href="https://github.com/gentilkiwi/mimikatz" target="_blank" rel="noopener">Mimikatz</a> <em>一款windows平台下密码破解与抓取的工具</em></p></li><li><p><a href="https://digi.ninja/projects/cewl.php" target="_blank" rel="noopener">Cewl</a> <em>一个ruby应用程序开发的自定义字典列表生成器</em></p></li><li><p><a href="https://sourceforge.net/projects/crunch-wordlist/" target="_blank" rel="noopener">Crunch</a> <em>一个wordlist生成器，可以在其中指定标准字符集</em></p></li><li><p><a href="https://hashcat.net/hashcat/" target="_blank" rel="noopener">Hashcat</a> <em>高级密码恢复工具，支持多种哈希算法破解</em></p></li></ul><h3 id="无线网络"><a href="#无线网络" class="headerlink" title="无线网络"></a>无线网络</h3><ul><li><p><a href="https://www.aircrack-ng.org/" target="_blank" rel="noopener">Aircrack-ng</a> <em>一款评估WiFi网络安全性的一整套工具集</em></p></li><li><p><a href="https://www.kismetwireless.net/" target="_blank" rel="noopener">Kismet</a> <em>一款无线网络探测器和入侵检测系统</em></p></li><li><p><a href="https://github.com/derv82/wifite2" target="_blank" rel="noopener">Wifite</a> <em>一种自动化无线攻击与审计工具</em></p></li><li><p><a href="https://github.com/t6x/reaver-wps-fork-t6x" target="_blank" rel="noopener">Reaver</a> <em>一款针对WPS的强大而实用的攻击工具</em></p></li><li><p><a href="https://github.com/nfc-tools/mfoc" target="_blank" rel="noopener">Mfoc</a> <em>Nthemba的“离线嵌套”攻击的开源程序</em></p></li><li><p><a href="https://wifiphisher.org/" target="_blank" rel="noopener">Wifiphisher</a> <em>一款针对WiFi的自动化钓鱼攻击工具</em></p></li></ul><h3 id="逆向工程"><a href="#逆向工程" class="headerlink" title="逆向工程"></a>逆向工程</h3><ul><li><p><a href="https://www.hex-rays.com/products/ida/" target="_blank" rel="noopener">IDA Pro</a> <em>一个支持多平台的反汇编工具和调试器</em></p></li><li><p><a href="http://www.ollydbg.de/" target="_blank" rel="noopener">OllyDbg</a> <em>一个二进制代码分析的x86调试器</em></p></li><li><p><a href="https://ibotpeaches.github.io/Apktool/" target="_blank" rel="noopener">Apktool</a> <em>一款用于逆向Android apk文件的工具</em></p></li><li><p><a href="https://www.radare.org/r/index.html" target="_blank" rel="noopener">Radare2</a> <em>开源跨平台逆向工程框架</em></p></li><li><p><a href="https://github.com/joelpx/plasma" target="_blank" rel="noopener">Plasma</a><em>针对x86/ARM/MIPS的开源交互式反汇编工具</em></p></li><li><p><a href="http://www.windbg.org/" target="_blank" rel="noopener">WinDbg</a> <em>一款Microsoft Windows上的多用途调试器</em></p></li></ul><h3 id="Web-安全"><a href="#Web-安全" class="headerlink" title="Web 安全"></a>Web 安全</h3><ul><li><p><a href="https://portswigger.net/burp/" target="_blank" rel="noopener">Burpsuite</a> <em> 用于Web应用程序安全测试的集成平台</em></p></li><li><p><a href="https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project" target="_blank" rel="noopener">OWASP ZAP</a> <em>专为Web应用程序设计的渗透测试工具集</em></p></li><li><p><a href="https://wpscan.org/" target="_blank" rel="noopener">WPscan</a> <em>WordPress的黑盒漏洞扫描器</em></p></li><li><p><a href="https://cirt.net/nikto2" target="_blank" rel="noopener">Nikto</a> <em>一款Web应用程序安全扫描器</em></p></li><li><p><a href="https://github.com/andresriancho/w3af" target="_blank" rel="noopener">W3af</a> <em>Web应用程序攻击和评估框架</em></p></li><li><p><a href="http://sqlmap.org/" target="_blank" rel="noopener">SQLmap </a><em>一个开源的自动化SQL注入工具</em></p></li><li><p><a href="https://sourceforge.net/projects/paros/" target="_blank" rel="noopener">Paros</a> <em>基于Java的HTTP / HTTPS代理，用于评估Web应用程序漏洞</em></p></li><li><p><a href="https://www.getpostman.com/" target="_blank" rel="noopener">Postman</a> <em>一款功能超级强大的用于发送HTTP请求的Chrome插件</em></p></li></ul><h3 id="权限维持"><a href="#权限维持" class="headerlink" title="权限维持"></a>权限维持</h3><ul><li><p><a href="https://github.com/epinna/weevely3" target="_blank" rel="noopener">Weevely</a> <em>一个专为后期漏洞利用而设计的Web shell</em></p></li><li><p><a href="https://deadbits.github.io/Intersect-2.5/" target="_blank" rel="noopener">Intersec</a><em>一个用Python编写的后期权限利用的框架</em></p></li></ul><h3 id="防御工具"><a href="#防御工具" class="headerlink" title="防御工具"></a>防御工具</h3><ul><li><p><a href="https://www.bro.org/" target="_blank" rel="noopener">Bro</a> <em>一个免费的开源软件网络分析框</em></p></li><li><p><a href="http://dtag-dev-sec.github.io/mediator/feature/2015/03/17/concept.html" target="_blank" rel="noopener">T-Pot</a> <em>一个功能强大的开源多蜜罐平台</em></p></li><li><p><a href="https://www.snort.org/" target="_blank" rel="noopener">Snort</a> <em>一套开源的网络入侵预防与检测软件</em></p></li><li><p><a href="https://www.ossec.net/" target="_blank" rel="noopener">OSSEC</a>  <em>一款开源的多平台的入侵检测系统</em></p></li><li><p><a href="http://www.selinuxproject.org/page/Main_Page" target="_blank" rel="noopener">SELinux</a> <em>Linux内核的安全模组，提供了访问控制安全策略机制</em></p></li><li><p><a href="https://www.netfilter.org/" target="_blank" rel="noopener">Netfilter</a> <em>Linux内核中的一个软件框架，具有NAT及防火墙功能</em></p></li><li><p><a href="https://cuckoosandbox.org/" target="_blank" rel="noopener">Cuckoo</a> <em>一款流行的开源自动恶意软件分析系统</em></p></li><li><p><a href="https://github.com/mozilla/MozDef" target="_blank" rel="noopener">MozDef</a> <em>Mozilla防御平台（MozDef），可实现安全事件处理流程的自动化</em></p></li><li><p><a href="https://www.modsecurity.org/" target="_blank" rel="noopener">ModSecurity</a> <em>一种流行的开源Web应用程序防火墙</em></p></li></ul><h3 id="工具导航"><a href="#工具导航" class="headerlink" title="工具导航"></a>工具导航</h3><ul><li><p><a href="http://sectools.org/" target="_blank" rel="noopener">SecTools</a></p></li><li><p><a href="https://tools.kali.org/" target="_blank" rel="noopener">Kali Tools</a></p></li><li><p><a href="http://seclist.us/" target="_blank" rel="noopener">SecList</a></p></li><li><p><a href="https://tools.pentestbox.org/" target="_blank" rel="noopener">Pentest Box Tools</a></p></li><li><p><a href="https://www.kitploit.com/" target="_blank" rel="noopener">KitPloit</a></p></li><li><p><a href="http://www.toolswatch.org/" target="_blank" rel="noopener">ToolsWatch</a></p></li><li><p><a href="https://blackarch.org/tools.html" target="_blank" rel="noopener">Blackarch Tools</a></p></li><li><p><a href="https://www.t00ls.net/pytools.html" target="_blank" rel="noopener">T00ls Pytools</a></p></li><li><p><a href="https://tools.pediy.com/win/cryptography.htm" target="_blank" rel="noopener">看雪工具集</a></p></li><li><p><a href="https://www.shentoushi.top/network" target="_blank" rel="noopener">渗透师在线工具集</a></p></li><li><p><a href="http://wiki.beysec.com/" target="_blank" rel="noopener">BeySec 开源工具</a></p></li><li><p><a href="https://www.anquanquan.info/#tools" target="_blank" rel="noopener">安全圈 info Tools</a></p></li></ul><hr><h2 id="计算机类"><a href="#计算机类" class="headerlink" title="计算机类"></a>计算机类</h2><h3 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h3><ul><li><p><a href="https://www.vim.org/" target="_blank" rel="noopener">Vim</a> <em>编辑器之神，多模式编辑，强大的组合功能</em></p></li><li><p><a href="https://www.gnu.org/software/emacs/" target="_blank" rel="noopener">Emacs</a> <em>神之编辑器，高度可定制，强大的可扩展性</em></p></li><li><p><a href="https://notepad-plus-plus.org/" target="_blank" rel="noopener">Notepad++</a> <em>免费而优秀，支持超过50种编程，脚本，语言等</em></p></li><li><p><a href="https://atom.io/" title="Atom" target="_blank" rel="noopener">Atom</a> <em>21世纪先进的的开源免费跨平台代码编辑器</em></p></li><li><p><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">VS Code</a> <em>一款免费开源的现代化轻量级多平台代码编辑器</em></p></li><li><p><a href="http://www.sublimetext.com/" target="_blank" rel="noopener">Sublime Text</a> <em>性能强大，特性炫酷，跨平台文本代码编辑器</em></p></li><li><p><a href="https://dillinger.io/" target="_blank" rel="noopener">DILLINGER</a> <em>m一款漂亮强大，支持云端，离线存储Markdown在线编辑器</em></p></li><li><p><a href="https://www.farbox.com/" target="_blank" rel="noopener">FarBox</a> <em>一个支持Markdown写作语法的博客平台，免费，支持多平台</em></p></li><li><p><a href="http://www.markdownpad.com/" target="_blank" rel="noopener">MarkdownPad</a> <em>一款全功能编辑器，windows 平台最好用的markdown编辑器之一</em></p></li></ul><h3 id="编译器"><a href="#编译器" class="headerlink" title="编译器"></a>编译器</h3><ul><li><p><a href="https://gcc.gnu.org/" target="_blank" rel="noopener">GCC</a> <em>Linux平台下最流行最好用的C语言开发工具，没有之一</em></p></li><li><p><a href="https://sourceforge.net/projects/orwelldevcpp/" target="_blank" rel="noopener">Dev-C++</a> <em>一款全功能的C和C++集成开发环境，基本可满足编程需求</em></p></li><li><p><a href="http://www.programarts.com/cfree_ch/" target="_blank" rel="noopener">C-Free</a> <em>一款轻量级支持多种编译器的专业化C/C++集成开发环境（IDE）</em></p></li><li><p><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">VisualStudio</a> <em>一套完整的开发工具集，调试功能强大，但比较占用空间</em></p></li><li><p><a href="http://www.codeblocks.org/" target="_blank" rel="noopener">Code::Blocks</a> <em>开源，跨平台，免费的C，C ++和Fortran IDE</em></p></li><li><p><a href="https://www.eclipse.org/" target="_blank" rel="noopener">Eclipse</a> <em>著名的跨平台开源集成开发环境（IDE）,插件丰富，支持多种语言</em></p></li><li><p><a href="https://ipython.org/" target="_blank" rel="noopener">IPython</a> <em>一款基于Python的交互式解释器，提供更为强大的编辑和交互功能</em></p></li><li><p><a href="http://www.pydev.org/" target="_blank" rel="noopener">Pydev</a> <em>一个运行于eclipse上的开源插件，功能强大，性能高效</em></p></li><li><p><a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="noopener">Pycharm</a> <em>专业的python集成开发环境，支持众多第三方web开发框架</em></p></li><li><p><a href="https://wingware.com/" target="_blank" rel="noopener">WingIDE</a> <em>高效跨平台python集成开发环境，调试功能强大，代码管理灵活(推荐)</em></p></li></ul><h3 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h3><ul><li><p><a href="http://www.sioe.cn/yingyong/yanse-rgb-16/" target="_blank" rel="noopener">颜色转换</a> <em>RGB颜色值与十六进制颜色码转换工具</em></p></li><li><p><a href="https://c.runoob.com/front-end/58" target="_blank" rel="noopener">Front-end</a> <em>在线进制转换器，支持2~36任意进制转换</em></p></li><li><p><a href="https://www.processon.com/" target="_blank" rel="noopener">ProcessOn</a>  <em>免费在线作图，支持流程图，思维导图，UML，网络拓扑图等</em></p></li><li><p><a href="https://smallpdf.com/" target="_blank" rel="noopener">Smallpdf</a> <em>解决PDF转换问题的免费在线工具(PDF，Word,JPG,PPT免费相互转换)</em></p></li><li><p><a href="https://www.onlinedoctranslator.com/zh-CN/translationform" target="_blank" rel="noopener">DocTranslator</a> <em>免费的在线文档翻译器，一键翻译，支持格式转换</em></p></li><li><p><a href="http://www.iconfont.cn/" target="_blank" rel="noopener">Iconfont</a> <em>阿里巴巴矢量图标库，功能强大，图标内容丰富</em></p></li><li><p><a href="http://fontawesome.dashgame.com/" target="_blank" rel="noopener">Font Awesome</a> <em>一套绝佳的图标字体库和CSS框架，Next默认矢量图标</em></p></li></ul><h3 id="问答社区"><a href="#问答社区" class="headerlink" title="问答社区"></a>问答社区</h3><ul><li><p><a href="https://stackexchange.com/" target="_blank" rel="noopener">StackExchange.com/</a> <em>一系列问答网站，每一个网站包含不同领域的问题</em></p></li><li><p><a href="https://www.quora.com/" target="_blank" rel="noopener">Quora</a> <em>一个在线知识市场，集合许多问题和答案，容许用户协同编辑问题和答案</em></p></li><li><p><a href="https://stackoverflow.com/" target="_blank" rel="noopener">Stackoverflow</a> <em>StackExchange最活跃的一个子站，专专注于程序设计领域的问答网站</em></p></li><li><p><a href="https://segmentfault.com/" target="_blank" rel="noopener">Segmentfault</a> <em>国内领先的开发者技术社区，为编程爱好者提供一个纯粹、高质的技术交流的平台</em></p></li></ul><h3 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h3><ul><li><p><a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a> <em>一个开源的分布式版本控制系统，善于保存文本文档，可在本地提交与管理(git版本库)</em></p></li><li><p><a href="https://subversion.apache.org/" target="_blank" rel="noopener">SVN</a> <em>一种集中式文件版本管理系统，采用分支管理系统，所有的版本信息都放在服务器上</em></p></li><li><p><a href="https://www.astro.princeton.edu/~rhl/cvs/cvs.html" target="_blank" rel="noopener">CVS</a> <em>开发源码的并发版本系统，代码统一管理，跨平台，完善的冲突解决方案</em></p></li></ul><h3 id="博客平台"><a href="#博客平台" class="headerlink" title="博客平台"></a>博客平台</h3><ul><li><p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> <em>快速、简洁且高效的静态博客框架，支持Markdown语法，个人推荐</em></p></li><li><p><a href="https://jekyllrb.com/" target="_blank" rel="noopener">Jekyll</a> <em>流行的静态页面生成器，简约高效，专注于内容，Github Pages默认使用</em></p></li><li><p><a href="http://gohugo.io/" target="_blank" rel="noopener">Hugo</a> <em>世界上最快的开源静态站点生成器之一，速度惊人，灵活性强，中文资料匮乏</em></p></li><li><p><a href="https://ghost.org/" target="_blank" rel="noopener">Ghost</a> <em>精简版动态博客平台，拥有admin页面，速度一般，MD支持不是很完善</em></p></li><li><p><a href="https://cn.wordpress.org/" target="_blank" rel="noopener">Wordpress</a> <em>使用最广泛的动态博客平台，功能强大，插件丰富，可定制性强，适合大型网站</em></p></li><li><p><a href="http://typecho.org/" target="_blank" rel="noopener">typecho</a> <em>一款国产轻量级博客，轻量高效，先进稳定，专注内容，追求简洁</em></p></li><li><p><a href="https://www.emlog.net/" target="_blank" rel="noopener">emlog</a> <em>国内一款基于PHP和MySQL的功能强大的博客及CMS建站系统，小巧灵活，追求细节</em></p></li><li><p><a href="https://www.leavesongs.com/THINK/about-talkbook.html" target="_blank" rel="noopener">Talkbook</a> <em>一款来自某牛的轻量级静态博客，功能完善，性能强大，部署简易，未开源，有待研究</em></p></li></ul><h3 id="托管平台"><a href="#托管平台" class="headerlink" title="托管平台"></a>托管平台</h3><ul><li><p><a href="https://github.com/" target="_blank" rel="noopener">Github</a> <em>Git + Hub，开源项目的聚集地，程序员的另类简历，私有仓库收费</em></p></li><li><p><a href="https://link.jianshu.com/?t=https://gitlab.com" target="_blank" rel="noopener">Gitlab</a> <em>开源的版本管理系，比较适合企业使用，个人可创建免费的私有仓库</em></p></li><li><p><a href="https://sourceforge.net/" target="_blank" rel="noopener">SourceForge</a> <em>曾经辉煌的开源软件平台，为全球超过3300万用户创建，协作和分发</em></p></li><li><p><a href="https://opensource.google.com/" target="_blank" rel="noopener">Opensource</a> <em>Google 的新开源网站，汇集了 2000 多个开源项目，几千万行代码</em></p></li><li><p><a href="https://bitbucket.org/" target="_blank" rel="noopener">BitBucket</a> <em>支持Mercurial和Git的代码托管网站,提供免费帐户</em></p></li><li><p><a href="http://www.springloops.io" target="_blank" rel="noopener">Springloops</a> <em>一个带有Git和SVN的版本控制软件，支持个人与团队商业使用</em></p></li><li><p><a href="https://gitee.com/" target="_blank" rel="noopener">码云</a> <em>国内最大的开源社区 OSChina 的代码托管平台，提供团队协作开发</em></p></li><li><p><a href="https://coding.net/" target="_blank" rel="noopener">Coding</a> <em>码市,国内首个一站式云端软件服务平台，云端软件开发协作平台</em></p></li><li><p><a href="https://code.aliyun.com/explore" target="_blank" rel="noopener">阿里云 Code</a> <em>依托于阿里云，注册阿里云账号可免费托管代码，精品平台</em></p></li></ul><h3 id="语言-框架"><a href="#语言-框架" class="headerlink" title="语言/框架"></a>语言/框架</h3><ul><li><p><a href="https://golang.org/" target="_blank" rel="noopener">Go</a> <em>云时代的C语言，静态强类型、编译型、并发型，具有垃圾回收功能</em></p></li><li><p><a href="https://www.r-project.org/" target="_blank" rel="noopener">R</a> <em>一种用于统计分析、绘图、数据挖掘的自由软件编程语言与操作环境</em></p></li><li><p><a href="https://www.lua.org/" target="_blank" rel="noopener">Lua</a> <em>一种嵌入式动态语言，简洁、轻量、可扩展，配置性、可扩展性强</em></p></li><li><p><a href="https://julialang.org/" target="_blank" rel="noopener">Julia</a> <em>一个面向科学计算的高性能动态高级程序设计语言，交互式，轻量级，性能综合</em></p></li><li><p><a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">Node.js</a> <em>一个能够在服务器端运行JavaScript的开放源代码、跨平台JavaScript 运行环境</em></p></li><li><p><a href="https://www.djangoproject.com/" target="_blank" rel="noopener">Django</a> <em>最有代表性的Python框架，遵循MMVC架构模式，内置模板引擎，安装简易，社区支持良好</em></p></li><li><p><a href="http://flask.pocoo.org/" target="_blank" rel="noopener">Flask</a> <em>基于WerkzeugWSGI工具箱和jinja模板，使用BSD许可证，适合开发轻量级的Web应用</em></p></li><li><p><a href="http://www.web2py.com/" target="_blank" rel="noopener">Web2py</a> <em>开源框架，允许开发者快速创建动态交互式的网站，容易使用，安全性较好</em></p></li><li><p><a href="https://docs.spring.io/spring/docs/current/spring-framework-reference/web.html" target="_blank" rel="noopener">Spring MVC</a> <em>Java主流开发框架，提供一个用于 Web 应用程序开发的强大工具集</em></p></li><li><p><a href="https://struts.apache.org/" target="_blank" rel="noopener">Struts 2</a> <em>作为控制器(Controller)来建立模型与视图的数据交互，采用拦截器机制处理用户请求</em></p></li><li><p><a href="http://www.oracle.com/technetwork/java/javaee/javaserverfaces-139869.html" target="_blank" rel="noopener">JSF</a> <em>一种用于构建 Web 应用程序的新标准Java框架，提供以组件为中心的开发方法，简单强大</em></p></li></ul><h3 id="虚拟化-云"><a href="#虚拟化-云" class="headerlink" title="虚拟化/云"></a>虚拟化/云</h3><ul><li><p><a href="https://www.linux-kvm.org/page/Main_Page" target="_blank" rel="noopener">KVM </a> <em>集成到Linux内核的Hypervisor，Linux全虚拟化解决方案</em></p></li><li><p><a href="https://xenserver.org/" target="_blank" rel="noopener">Xen</a> <em>运行在裸机上的虚拟化管理程序(Hypervisor)，支持全虚拟化和准虚拟化</em></p></li><li><p><a href="https://www.docker.com/" target="_blank" rel="noopener">Docker</a> <em>一种容器技术，属于一种轻量级虚拟化技术</em></p></li><li><p><a href="https://www.veeam.com/blog/what-is-hyper-v-technology.html" target="_blank" rel="noopener">Hyper-V</a> <em>微软提出的一种系统管理程序虚拟化技术，能够实现桌面虚拟化</em></p></li><li><p><a href="https://www.vmware.com/" target="_blank" rel="noopener">WMware</a> <em>第一个商业化的成功的虚拟化的x86架构</em></p></li><li><p><a href="https://www.openstack.org/" target="_blank" rel="noopener">Openstack </a><em>基于linux的IaaS层解决方案(支持多种虚拟化技术）</em></p></li><li><p><a href="https://cloudstack.apache.org/" target="_blank" rel="noopener">CloudStack</a> <em>使用java开发的基于linux的IaaS层解决方案</em></p></li></ul><h3 id="类Unix系统"><a href="#类Unix系统" class="headerlink" title="类Unix系统"></a>类Unix系统</h3><ul><li><p><a href="https://www.freebsd.org/where.html" target="_blank" rel="noopener">FreeBSD</a> <em>一个自由和开放源码的类Unix操作系统，性能稳定，适合科学研究</em></p></li><li><p><a href="https://getfedora.org/zh_CN/" target="_blank" rel="noopener">Fedora</a> <em>基于Red Hat,一款由社区支持的新颖、多功能，开源自由的操作系统</em></p></li><li><p><a href="https://www.centos.org/" target="_blank" rel="noopener">CentOS</a> <em>基于Red Hat的免费Linux发行版，性能稳定高效，适合服务器</em></p></li><li><p><a href="https://www.ubuntu.com/" target="_blank" rel="noopener">Ubuntu</a> <em>一款基于Debian派生的操作系统，适合做桌面系统的Linux发行版本</em></p></li></ul><h3 id="Web服务器"><a href="#Web服务器" class="headerlink" title="Web服务器"></a>Web服务器</h3><ul><li><p><a href="http://www.apache.org/" target="_blank" rel="noopener">Apache</a> <em>源代码开放，跨平台，可移植，模块支持丰富，重量级主流Web服务器</em></p></li><li><p><a href="https://www.nginx.com/" target="_blank" rel="noopener">Nginx</a> <em>一款轻量级的Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，并发能力强</em></p></li><li><p><a href="http://tomcat.apache.org/" target="_blank" rel="noopener">Tomcat</a> <em>一个开放源代码、运行servlet和JSP Web应用软件的基于Java的W eb应用软件容器</em></p></li><li><p><a href="https://www.iis.net/" target="_blank" rel="noopener">Microsoft IIS</a> <em>一种允许在公共Intranet或Internet上发布信息的Web服务器，又称为Internet服务管理器</em></p></li><li><p><a href="https://www.lighttpd.net/" target="_blank" rel="noopener">Lighttpd</a> <em>提供一个专门针对高性能网站，安全、快速、兼容性好并且灵活的Web  Server环境，轻量级</em></p></li></ul><h3 id="分布式系统"><a href="#分布式系统" class="headerlink" title="分布式系统"></a>分布式系统</h3><ul><li><p><a href="http://hadoop.apache.org/" target="_blank" rel="noopener">Hadoop</a> <em>三大主流分布式计算系统之一，使用硬盘存储数据，适用于离线的复杂的大数据处理</em></p></li><li><p><a href="https://spark.apache.org/" target="_blank" rel="noopener">Spark</a> <em>三大主流分布式计算系统之一，使用内存来存储数据，适用于离线的快速的大数据处理</em></p></li><li><p><a href="http://storm.apache.org/" target="_blank" rel="noopener">Storm</a> <em>三大主流分布式计算系统之一，提供实时运算的特性，适用于在线实时大数据处理</em></p></li></ul><h3 id="深度学习框架"><a href="#深度学习框架" class="headerlink" title="深度学习框架"></a>深度学习框架</h3><ul><li><p><a href="https://www.tensorflow.org/" target="_blank" rel="noopener">TensorFlow</a> <em>一个使用数据流图，流行的开放源代码机器学习框架，偏重底层，代码开发要求高</em></p></li><li><p><a href="https://keras.io/" target="_blank" rel="noopener">Keras</a> <em>一个用Python编写的深度学习库，句法明晰，文档新颖，简单高效，能够快速实现实验</em></p></li><li><p><a href="http://caffe.berkeleyvision.org/" target="_blank" rel="noopener">Caffe</a> <em>老牌中的老牌，具有非常好的通用性，快速稳健，但不够灵活，可定制性差，安装依赖性强</em></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;参考网络上的资源，整理的一些安全与计算机类&lt;a href=&quot;https://firehacker.top/tools/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Tools&lt;/a&gt;，SecTools 涉及渗透平台及框架，漏洞扫描与利用，信息收集，网络分析，密码攻击，逆向工程，安全防御等；计算机类工具包括主流代码编辑器/编译器，问答社区，开源社区，博客平台，分布式系统，深度学习框架等&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="0x04 拓展梳理" scheme="http://yoursite.com/categories/0x04-%E6%8B%93%E5%B1%95%E6%A2%B3%E7%90%86/"/>
    
      <category term="资源导航" scheme="http://yoursite.com/categories/0x04-%E6%8B%93%E5%B1%95%E6%A2%B3%E7%90%86/%E8%B5%84%E6%BA%90%E5%AF%BC%E8%88%AA/"/>
    
    
  </entry>
  
  <entry>
    <title>安全站点导航</title>
    <link href="http://yoursite.com/2018/08/24/%E5%AE%89%E5%85%A8%E7%AB%99%E7%82%B9%E5%AF%BC%E8%88%AA/"/>
    <id>http://yoursite.com/2018/08/24/安全站点导航/</id>
    <published>2018-08-24T03:15:44.000Z</published>
    <updated>2018-08-24T04:16:24.579Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>参考网络上的资源，整理的一些安全<a href="https://firehacker.top/community/" target="_blank" rel="noopener">社区</a>站点，涉及常见漏洞发布平台，白帽黑客社区，安全资讯网站，以及部分新兴安全企业<br><a id="more"></a></p></blockquote><hr><h3 id="漏洞平台"><a href="#漏洞平台" class="headerlink" title="漏洞平台"></a>漏洞平台</h3><ul><li><p><a href="http://cve.mitre.org/" target="_blank" rel="noopener">CVE</a> <em>通用漏洞披露，全球漏洞列表</em></p></li><li><p><a href="http://cwe.mitre.org/" target="_blank" rel="noopener">CWE</a> <em>常见软件安全弱点列表</em></p></li><li><p><a href="https://nvd.nist.gov/" target="_blank" rel="noopener">NVD</a> <em>美国国家漏洞数据库</em></p></li></ul><ul><li><p><a href="http://www.cnnvd.org.cn/" target="_blank" rel="noopener">CNNVD</a> <em>国家信息安漏洞库</em></p></li><li><p><a href="http://www.cnvd.org.cn/" target="_blank" rel="noopener">CNVD</a> <em>国家信息安全漏洞共享平台</em></p></li><li><p><a href="https://www.exploit-db.com/" target="_blank" rel="noopener">Exploit-db</a>  <em>攻击性安全漏洞数据库</em></p></li><li><p><a href="http://www.expku.com/" target="_blank" rel="noopener">Expku</a> <em>中文漏洞利用数据库</em></p></li><li><p><a href="https://www.securityfocus.com/" target="_blank" rel="noopener">SecurityFocus</a> <em>专注安全焦点与漏洞</em></p></li><li><p><a href="https://seebug.org" target="_blank" rel="noopener">Seebug</a>  <em>洞悉漏洞，知道创宇漏洞平台</em></p></li><li><p><a href="http://www.0daybank.org/" target="_blank" rel="noopener">0dayBank</a> <em>全球互联网漏洞公开发布网站</em></p></li><li><p><a href="http://wooyun.shentoushi.top/index.php" target="_blank" rel="noopener">WooYun</a> <em>前乌云历史漏洞列表</em></p></li><li><p><a href="https://butian.360.cn/" target="_blank" rel="noopener">补天漏洞</a> <em>漏洞检测与响应平台</em></p></li><li><p><a href="https://www.vulbox.com/" target="_blank" rel="noopener">漏洞盒子</a> <em>互联网安全测试众测平台</em></p></li></ul><h3 id="白帽社区"><a href="#白帽社区" class="headerlink" title="白帽社区"></a>白帽社区</h3><ul><li><p><a href="http://www.blackhat.com/" target="_blank" rel="noopener">Blackhat</a> <em>黑帽大会，汇集全球顶级黑客</em></p></li><li><p><a href="https://www.defcon.org/" target="_blank" rel="noopener">Defcon</a> <em>全球最大计算机安全会议之一</em></p></li><li><p><a href="https://xz.aliyun.com/" target="_blank" rel="noopener">先知社区</a> <em>全球互联网前沿安全技术社区</em></p></li><li><p><a href="https://wiki.ioin.in/" target="_blank" rel="noopener">Sec-News</a><em>分享安全文章，共同成长的白帽平台</em></p></li><li><p><a href="https://www.t00ls.net/" title="低调专业的安全技术交流平台" target="_blank" rel="noopener">Tools</a> <em>低调专业的安全技术交流平台</em></p></li><li><p><a href="https://bbs.pediy.com/" target="_blank" rel="noopener">看雪论坛</a> <em>致力于安全研究的开发者社区</em></p></li><li><p><a href="http://zone.secbug.net/" target="_blank" rel="noopener">乌云社区</a> <em>白帽技术社区，内测版</em></p></li></ul><h3 id="安全资讯"><a href="#安全资讯" class="headerlink" title="安全资讯"></a>安全资讯</h3><ul><li><p><a href="https://securityintelligence.com/" target="_blank" rel="noopener">SecInte</a> <em>信息安全的分析与洞察</em></p></li><li><p><a href="https://securelist.com/" target="_blank" rel="noopener">Securelist</a> <em>网络威胁研究与报告</em></p></li><li><p><a href="http://www.freebuf.com/" title="Freebuf" target="_blank" rel="noopener">Freebuf</a>  <em>互联网安全新媒体</em></p></li><li><p><a href="https://www.secpulse.com/" target="_blank" rel="noopener">安全脉搏</a> <em>分享技术，悦享品质</em></p></li><li><p><a href="https://www.anquanke.com/" target="_blank" rel="noopener">安全客</a> <em>有思想的安全资讯平台</em></p></li><li><p><a href="https://www.aqniu.com/" target="_blank" rel="noopener">安全牛</a> <em>全面的安全信息网</em></p></li><li><p><a href="https://www.secrss.com/" target="_blank" rel="noopener">安全内参</a> <em>网络安全首席知识官</em></p></li><li><p><a href="https://www.sec-wiki.com/index.php" target="_blank" rel="noopener">SecWiki</a> <em>国内外安全资讯及技术汇聚地</em></p></li></ul><h3 id="安全博客"><a href="#安全博客" class="headerlink" title="安全博客"></a>安全博客</h3><ul><li><p><a href="http://blog.nsfocus.net/" target="_blank" rel="noopener">Nsfocus</a> <em>绿盟科技博客，巨人背后的安全专家</em></p></li><li><p><a href="http://blogs.360.cn/" title="360技术博客" target="_blank" rel="noopener">360-Blogs</a> <em>分享360技术，与安全的互联网共同成长</em></p></li><li><p><a href="http://blog.knownsec.com/" target="_blank" rel="noopener">KnownSec</a> <em>知道创宇博客，做更好更安全的互联网</em></p></li><li><p><a href="https://blog.chaitin.cn/" target="_blank" rel="noopener">CHAITIN</a> <em>长亭科技博客，专注于下一代应用安全</em></p></li><li><p><a href="http://blog.topsec.com.cn/" target="_blank" rel="noopener">Topsec</a> <em>天融信阿尔法实验室，可信网络安全世界</em></p></li><li><p><a href="http://www.polaris-lab.com/" target="_blank" rel="noopener">Polaris-lab</a> <em>勾陈之象 实名麒麟 位居中央 权司戊日</em></p></li><li><p><a href="https://paper.seebug.org/" target="_blank" rel="noopener">Paper</a> <em>汇聚黑客智慧，包罗安全技术精粹</em></p></li><li><p><a href="http://liehu.tass.com.cn/" target="_blank" rel="noopener">猎户攻防</a> <em>猎户攻防实验室，专注于安全攻防技术研究</em></p></li><li><p><a href="https://ipot.sec-wiki.com/" target="_blank" rel="noopener">蜜罐小组</a> <em>一个专注于蜜罐技术研究与交流的小站</em></p></li></ul><h3 id="新兴企业"><a href="#新兴企业" class="headerlink" title="新兴企业"></a>新兴企业</h3><ul><li><p><a href="https://qingteng.cn/" target="_blank" rel="noopener">青藤云</a> <em>以不变应万变，专注自适应安全架构(ASA)</em></p></li><li><p><a href="http://www.hansight.com/" target="_blank" rel="noopener">瀚思科技</a> <em>专注于大数据安全分析，引领”AI+安全”</em></p></li><li><p><a href="http://www.lanysec.com/" target="_blank" rel="noopener">兰云科技</a> <em>主推SOAPA架构，专注于大数据安全</em></p></li><li><p><a href="https://www.geetest.com/" target="_blank" rel="noopener">极验验证</a> <em>专注于智能人机验证的初创公司</em></p></li><li><p><a href="http://www.dynarose.com/" target="_blank" rel="noopener">蔷薇灵动</a> <em>专注于微隔离技术的初创公司</em></p></li><li><p><a href="http://www.trusfort.com/" target="_blank" rel="noopener">芯盾时代</a> <em>专注于生物识别与行为认证技术</em></p></li><li><p><a href="https://www.moresec.cn/index.html" target="_blank" rel="noopener">默安科技</a> <em>专注于云安全，首推欺骗防御理念</em></p></li><li><p><a href="http://www.peersafe.com/" target="_blank" rel="noopener">众享比特</a> <em>专注于分布式网络与区块链安全</em></p></li><li><p><a href="http://shuziguanxing.com/" target="_blank" rel="noopener">数字观星</a> <em>基于威胁情报的SaaS化安全运营平台</em></p></li><li><p><a href="https://www.bangcle.com/" target="_blank" rel="noopener">梆梆安全</a> <em>专注于移动安全，保护智能生活</em></p></li><li><p><a href="https://www.hillstonenet.com.cn/" target="_blank" rel="noopener">山石网科</a> <em>专注下一代网络边界安全防御</em></p></li></ul><h3 id="站点导航"><a href="#站点导航" class="headerlink" title="站点导航"></a>站点导航</h3><ul><li><p><a href="https://www.anquanquan.info/" target="_blank" rel="noopener">安全圈</a> <em>做接地气的信息安全导航</em></p></li><li><p><a href="https://www.t00ls.net/navi.html" target="_blank" rel="noopener">T00ls</a> <em>比较全面的安全站点导航</em></p></li><li><p><a href="https://www.shentoushi.top/" target="_blank" rel="noopener">渗透师</a> <em>网络安全从业者安全导航</em></p></li><li><p><a href="https://navisec.it/" target="_blank" rel="noopener">NaviSec</a> <em>纳威，网络安全上网导航</em></p></li><li><p><a href="http://www.hackjie.com/" target="_blank" rel="noopener">黑客街</a> <em>网络安全爱好者的安全导航</em></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;参考网络上的资源，整理的一些安全&lt;a href=&quot;https://firehacker.top/community/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;社区&lt;/a&gt;站点，涉及常见漏洞发布平台，白帽黑客社区，安全资讯网站，以及部分新兴安全企业&lt;br&gt;
    
    </summary>
    
      <category term="0x04 拓展梳理" scheme="http://yoursite.com/categories/0x04-%E6%8B%93%E5%B1%95%E6%A2%B3%E7%90%86/"/>
    
      <category term="资源导航" scheme="http://yoursite.com/categories/0x04-%E6%8B%93%E5%B1%95%E6%A2%B3%E7%90%86/%E8%B5%84%E6%BA%90%E5%AF%BC%E8%88%AA/"/>
    
    
  </entry>
  
  <entry>
    <title>大数据+AI+云+IOT技术浅析</title>
    <link href="http://yoursite.com/2018/08/18/%E5%A4%A7%E6%95%B0%E6%8D%AE-AI-%E4%BA%91-IOT%E5%85%B3%E7%B3%BB%E6%B5%85%E6%9E%90/"/>
    <id>http://yoursite.com/2018/08/18/大数据-AI-云-IOT关系浅析/</id>
    <published>2018-08-18T04:50:04.000Z</published>
    <updated>2018-08-18T09:22:15.043Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>近几年，随着互联网技术的发展与计算能力的提升，大数据，云计算，物联网，人工智能等概念越来与火热，那么这概念的诞生，发展，技术背景，以及这些“新技术”之间的关系又怎样？本文对网络上的相关资料(国内的版权意识及环境较差，部分文章出处难以考证)梳理一二，便于查阅与理解<br><a id="more"></a></p></blockquote><hr><h2 id="0x01-物联网-IOT"><a href="#0x01-物联网-IOT" class="headerlink" title="0x01 物联网 (IOT)"></a>0x01 物联网 (IOT)</h2><h3 id="1-IOT概念"><a href="#1-IOT概念" class="headerlink" title="1. IOT概念"></a>1. IOT概念</h3><p><strong>(1) 早期</strong></p><p>通过射频识别（RFID）、红外线感应器、全球定位系统、激光扫描器、气体感应器等信息传感设备按约定的协议把任何物品与互联网连接起来进行信息交换，以实现智能化识别、定位、跟踪、监控和管理的一种网络，简言之物联网就是“<strong>物物相连</strong>的互联网”</p><p><strong>（2）现今</strong></p><p>当下几乎所有技术与计算机、互联网技术的结合，实现物体与物体之间：环境以及状态信息实时的实时共享以及智能化的收集、传递、处理、执行。广义上说，当下涉及的信息技术的应用，都可以纳入物联网的范畴，所谓的“<strong>万物智联</strong>”- Internet of things</p><h3 id="2-关键技术"><a href="#2-关键技术" class="headerlink" title="2. 关键技术"></a>2. 关键技术</h3><p><strong>（1）传感器技术</strong></p><p>这也是计算机应用中的关键技术。到目前为止绝大部分计算机处理的都是数字信号。自从有计算机以来就需要<strong>传感器</strong>把<strong>模拟信号</strong>转换成<strong>数字信号</strong>计算机才能处理</p><p><strong>（2）RFID标签</strong></p><p>一种传感器技术，RFID技术是融合了<strong>无线射频</strong>技术和<strong>嵌入式</strong>技术为一体的综合技术，RFID在自动识别、物品物流管理有着广阔的应用前景</p><p><strong>（3）嵌入式系统技术</strong></p><p>综合了计算机软硬件、传感器技术、集成电路技术、电子应用技术为一体的复杂技术。经过几十年的演变，以嵌入式系统为特征的智能终端产品随处可见。如果把物联网用人体做一个简单比喻，<strong>传感器</strong>相当于人的眼睛、鼻子、皮肤等<strong>感官</strong>，<strong>网络</strong>就是神经系统用来<strong>传递信息</strong>，<strong>嵌入式系</strong>统则是人的大脑，在接收到信息后要进行<strong>分析处理</strong></p><h3 id="3-体系架构"><a href="#3-体系架构" class="headerlink" title="3. 体系架构"></a>3. 体系架构</h3><p><img src="http://pdn6x28ho.bkt.clouddn.com/IOT%E6%9E%B6%E6%9E%84.png" alt=""></p><p><strong>（1）元素层</strong></p><p>信息科学中的自然现象和效应，是各种基础信息科学的集合，是构建器件层的基础(物联网最基本的技术元素)。包括电学、电磁感应、微波原理、电路理论等等</p><p><strong>（2）器件层</strong></p><p>信息产业中的基本元器件，主要是各类电子元器件、电路模组和功能板件，包括芯片、电路板卡、电源、存储器、信号输出输入设备，传感器和执行器。在这一层，“软件”除了包括电路设计外，还包括嵌入式开发的程序，在电子器件出厂前，其内部的“软件”就基本固定了</p><p><strong>（3）终端和节点层</strong></p><p><strong>物理实体</strong></p><p><strong>A、物联网的终端：</strong>包括非智能终端(也称“哑终端”，一般没有数据处理的能力，只能通过网络上报传感数据，或接受操控数据)、智能终端设备(例如工业机器人)、用户智能终端(手机、笔记本)。</p><p><strong>B、专用的信息处理节点</strong>：网络设备、计算设备、存储设备。虽然这些节点都具备网络接口、计算和存储器件，但是它们通常都提供某一种专用的信息能力。就比如：运营商IP承载网中的路由器(网络)、云计算中的刀片服务器(计算)</p><p><strong>该层“软件”</strong></p><p>主要为各种终端程序，包括嵌入式程序、操作系统、中间件、通用或定制的应用软件等</p><p><strong>（4）资源汇聚层</strong></p><p><strong>信息资源</strong></p><p>主要包括三种核心的信息处理的资源和能力：<strong>网络</strong>(无线网络覆盖、IP骨干网络、互联网及运营商网络的互联)、<strong>计算</strong>(云计算、大数据、机器学习)和<strong>存储</strong>(云存储、数据库)</p><p><strong>该层的“软件”</strong></p><p>除了终端中运行的各种程序以外，还包括各类信息互通的协议标准、流程规范、服务接口等等。在这一层，信息化能力已经具有了语义化的特征，具备了一定的开放性，并持续朝着更加开放、灵活、模块化的方向发展</p><p><strong>（5）平台服务层</strong></p><p><strong>语义化</strong></p><p>在该层，不仅信息技术被语义化地定义，其它行业技术和实体也实现了<strong>语义化</strong></p><p>为了承载各行业领域的数字化转型，物联网所包含的各类信息技术自身就必须做到语义化。在物联网技术领域之外，各行业的资源和能力，也在此处被模块化封装，通过标准化的信息接口向外界提供服务，应用的开发和运营者可以随取随用</p><p><strong>词汇集</strong></p><p>该层也提供软件开发、运营的工具，便于各类行业系统对技术和设施的使用、组合、评测、维护。在平台服务层，形成了物联网应用的词典(词汇集)，各类物联网的资源(设施)是“名词”、各种信息处理功能是“动词”，开发人员将可以将主要精力放置在构建“语句”和“段落”(应用的逻辑功能)上，并最终书写出完整篇章(应用系统、商业体系)</p><p><strong>“软件”及语言</strong></p><p>在这一层中，“软件”包括了物联网服务平台的架构、中间件、接口标准、信息服务规范等等，也融合了各行业中的一些基础性的技术服务(比如平台可以提供气象预测的服务)</p><p>在这一层，各行业的一些已经模块化的技术，能够通过信息产业的(程序化)封装，向外界提供开放式的服务，以形成各行业在物联网中的公共性语言(词汇)</p><p>不过，这种语言并不是服务于“人”的语言，而是“物”与“物”，即设备、系统之间用以信息交流的语言工具。只要掌握了某种物联网应用的“语言”，那么任何设备都可以理解该应用数据的涵义，使用此应用的物联网服务，操作远端设备并获得反馈</p><p><strong>（6）应用层</strong></p><p>对物联网行业应用的<strong>设计、搭建、运营</strong>。开发者和运营者在应用层，选取所需的资源和功能(包括信息技术和行业技术)，通过对下层服务的调用，构建自己的行业应用。在物联网技术层级的体系中，应用层之下的五层，都可以理解为应用层的“硬件”；“软件”则是应用开发者自己编写的应用逻辑</p><p>如果应用软件承载于SAAS(软件即服务)之上，系统底层设备由云计算服务商提供，那么在应用中可能就看不到任何物理实体的“硬件”，取而代之的，是下层模块化、标准化的信息服务和行业功能</p><h3 id="4-IOT两个域"><a href="#4-IOT两个域" class="headerlink" title="4. IOT两个域"></a>4. IOT两个域</h3><p>信息流“接入”和“汇聚”的两种需求，将物联网的技术自然地分成了“<strong>边缘</strong>”和“<strong>云端</strong>”两个“域”</p><p><strong>（1）边缘域</strong></p><p>无数设备需要联网，接近<strong>物理实体</strong>现场的“边缘域”，应用和功能更倾向于需要实时性的反馈操作；<strong>边缘网络</strong>中有各类终端配备传感器——用以感知物理世界，部署各种类型的网络协议，包括了有线网络和无线网络、“对等网络协议”和“非对等网络</p><p><strong>（2）云端域</strong></p><p>远离现实物件，但<strong>信息集中</strong>汇聚的“云端域”，应用更倾向于抽象化的预测分析、海量数据检索等等；<strong>云端网络</strong>中的设备则只有标准的信号输出输入接口，云端域”只有<strong>对等网络</strong>协议，例如IPv4、IPv6</p><hr><h2 id="0x02-云计算"><a href="#0x02-云计算" class="headerlink" title="0x02 云计算"></a>0x02 云计算</h2><h3 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1. 基本概念"></a>1. 基本概念</h3><p><strong>DIS版：</strong>云计算是一种将可伸缩、弹性、共享的物理和虚拟资源池以按需自服务的方式供应和管理，并提供网络访问的模式。云计算模式由关键特征、云计算角色和活动、云能力类型和云服务分类、云部署模型、云计算共同关注点组成</p><p><strong>NIST版：</strong>云计算是一种按使用量付费的模式，这种模式提供可用的、便捷的、按需的网络访问， 进入可配置的计算资源共享池（资源包括网络，服务器，存储，应用软件，服务），这些资源能够被快速提供，只需投入很少的管理工作，或与服务供应商进行很少的交互</p><h3 id="2-部署模式"><a href="#2-部署模式" class="headerlink" title="2. 部署模式"></a>2. 部署模式</h3><p><strong>（1）公有云</strong></p><p>云基础设施对公众或某个很大的业界群组提供云服务</p><p><strong>（2）私有云</strong></p><p>云基础设施特定为某个组织运行服务，可以是该组织或某个第三方负责管理，可以是场内服务（on-premises），也可以是场外服务（off-premises）</p><p><strong>（3）社区云</strong></p><p>云基础设施由若干个组织分享，以支持某个特定的社区。社区是指有共同诉求和追求的团体（，和私有云类似，社区云可以是该组织或某个第三方负责管理，可以是场内服务，也可以是场外服务</p><p><strong>（4）混合云</strong></p><p>云基础设施由两个或多个云（私有云、社区云或公有云）组成，独立存在，但是通过标准的或私有的技术绑定在一起，这些技术可促成数据和应用的可移植性</p><h3 id="3-服务类型"><a href="#3-服务类型" class="headerlink" title="3. 服务类型"></a>3. 服务类型</h3><p><img src="http://pdn6x28ho.bkt.clouddn.com/%E4%BA%91%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84.png" alt=""></p><p><strong>（1）Iaas (基础设施即服务)</strong></p><p>根据用户的需求提供计算资源,将硬件设备等有形的<strong>基础设施资源</strong>进行封装,作为服务提供给用户使用。laaS为用户提供了处理、存储、网络等功能和计算资源,用户可以在上面随意运行任何软件。云还提供了弹性的服务资源和动态要求服务质量和能力的功能,因此用户能够根据需求随时动态请求资源服务。laaS为用户提供资源抽象、资源监控、资源部署、负载管理、安全管理、数据管理和计费管理七个功能。laaS主要是为用户提供虚拟机或者其它资源等服务,其主要用户是<strong>系统管理员</strong></p><p><strong>（2）Paas (平台即服务)</strong></p><p>根据用户需求提供基于互联网的应用开发环境和存储服务，主要是将为用户提供一个<strong>开发平台</strong>,方便编写和测试程序,其主要用户是程序<strong>开发人员</strong></p><p><strong>（3）Saas (软件即服务)</strong></p><p>以服务访问的形式访问网络上的软件,为用户提供运行在云基础设施上的<strong>应用软件</strong>，主要为用户提供各种应用,其面对的主要是<strong>普通用户</strong></p><h3 id="4-参考架构-CCRA"><a href="#4-参考架构-CCRA" class="headerlink" title="4. 参考架构 (CCRA)"></a>4. 参考架构 (CCRA)</h3><p><img src="http://pdn6x28ho.bkt.clouddn.com/CCRA%E6%9E%B6%E6%9E%84.png" alt=""></p><h3 id="5-支撑技术"><a href="#5-支撑技术" class="headerlink" title="5. 支撑技术"></a>5. 支撑技术</h3><p><strong>（1）系统虚拟化</strong></p><p>系统虚拟化是指将一台物理计算机系统虚拟化为一台或多台虚拟计算机系统。每个虚拟计算机系统（简称虚拟机）都拥有自己的虚拟硬件（如 CPU、内存和设备等），来提供一个独立的虚拟机执行环境。通过虚拟化层的模拟，虚拟机中的操作系统认为自己仍然是独占一个系统在运行。每个虚拟机中的操作系统可以完全不同，并且它们的执行环境是完全独立的。这个虚拟化层被称为虚拟机监控器（Virtual Machine Monitor，简称 VMM）</p><p><img src="http://pdn6x28ho.bkt.clouddn.com/%E7%B3%BB%E7%BB%9F%E8%99%9A%E6%8B%9F%E5%8C%96.png" alt=""></p><p>VMM 对物理资源的虚拟可以归结为三个主要任务：CPU 虚拟化、内存虚拟化和 I/O 虚拟化。CPU 虚拟化是 VMM 中最核心的部分，决定了内存虚拟化和 I/O虚拟化的正确实现。<strong>CPU 虚拟化</strong>包括指令的模拟、中断和异常的模拟及注入和对称多处理器技术的模拟。<strong>内存虚拟化</strong>一方面解决了 VMM 和客户机操作系统对物理内存认识上的差异，另一方面在虚拟机之间、虚拟机和 VMM 之间进行隔离，防止某个虚拟机内部的活动影响到其他的虚拟机甚至是 VMM 本身，从而造成安全上的漏洞。<strong>I/O 虚拟化</strong>主要是为了满足多个客户机操作系统对外围设备的访问需求，通过访问截获、设备模拟和设备共享等方式复用外设</p><p><strong>（2）虚拟化资源管理</strong></p><p>虚拟化资源是云计算中最重要的组成部分之一，对虚拟化资源的管理水平直接影响云计算的可用性、可靠性和安全性。虚拟化资源管理主要包括对虚拟化资源的监控、分配和调度，在虚拟化资源管理调度接口方面，表述性状态转移（Representational State Transfer，简称 <strong>REST</strong>）有能力成为虚拟化资源管理强有力的支撑</p><p>云资源池中应用的需求不断改变，在线服务的请求经常不可预测，这种动态的环境要求云计算的数据中心或计算中心能够对各类资源进行灵活、快速、动态的按需调度</p><p><strong>（3）分布式数据存储</strong></p><p>分布式数据存储技术包含非结构化数据存储和结构化数据存储。其中，非结构化数据存储主要采用文件存储和对象存储技术，而结构化数据存储主要采用分布式数据库技术，特别是 NoSQL 数据库</p><p>A. <strong>分布式文件系统</strong></p><p>为了存储和管理云计算中的海量数据，Google 提出分布式文件系统 <strong>GFS</strong>（Google File System），Apache Hadoop项目的 HDFS 实现了 GFS 的开源版本。GFS/HDFS 非常适于进行以<strong>大文件形式</strong>存储的海量数据的并行处理，但是，当文件系统的文件数量持续上升时，元数据服务器的可扩展性面临极限</p><p>B. <strong>分布式对象存储系统</strong></p><p>与分布式文件系统不同，分布式对象存储系统不包含树状名称空间（Namespace），因此在<strong>数量增长</strong>时可以更有效地将元数据平衡地分布到多个结点上，提供理论上无限的可扩展性</p><p>C. <strong>分布式数据库管理系统</strong></p><p>传统的单机数据库采用“<strong>向上扩展</strong>”的思路来解决计算能力和存储能力的问题，即增加 CPU 处理能力、内存和磁盘数量。这种系统目前最大能够支持几个 TB 数据的存储和处理，远不能满足实际需求。采用<strong>集群设计</strong>的分布式数据库逐步成为主流</p><p><strong>（4）并行计算模式</strong></p><p>并行计算模型是<strong>提高海量数据处理效率</strong>的常用方法。常用的并行计算模型主要包括两类：一类是面向高性能计算的，如 MPI(Message Passing Interface)模型；另一类是面向互联网数据密集型应用的并行编程模型，如 Google 的MapReduce 模型、微软的 Dryad 模型</p><p><strong>（5）用户交互技术</strong></p><p>云计算的逐步普及，浏览器已经不仅仅是一个客户端的软件，而逐步演变为承载着互联网的平台。浏览器与云计算的整合技术主要体现在两个方面：浏览器<strong>网络化</strong>与浏览器<strong>云服务</strong></p><p>目前的浏览器云服务主要体现在 <strong>P2P 下载、视频加速</strong>等单独的客户端软件中，主要的应用研究方向包括：基于浏览器的 P2P 下载、视频加速、分布式计算、多任务协同工作等。在多任务协同工作方面,<strong>AJAX</strong>（Asynchronous JavaScript and XML，异步 JavaScript 和 XML)是一种创建交互式网页应用的网页开发技术，改变了传统网页的交互方式，改进了交互体验</p><p><strong>（6）安全管理</strong></p><p>云计算的多租户、分布性、对网络和服务提供者的依赖性，为安全问题带来新的挑战，数据安全问题及风险(数据存储及访问控制，数据传输保护，数据隐私及敏感信息保护，数据可用性，依从性管理)依旧严峻，相应安全管理技术(数据保护及隐私（Data Protection and Privacy），身份及访问管理（Identity and Access Management,简称 IAM），数据传输（Data Transportation），可用性管理（Availability Management），日志管理（Log Management），审计管理（Audit Management），依从性管理(Compliance Management))的发展为其提供保障</p><hr><h2 id="0x03-大数据-Bigdata"><a href="#0x03-大数据-Bigdata" class="headerlink" title="0x03 大数据 (Bigdata )"></a>0x03 大数据 (Bigdata )</h2><h3 id="1-概念定义"><a href="#1-概念定义" class="headerlink" title="1. 概念定义"></a>1. 概念定义</h3><p>无法在一定时间范围内用常规软件工具进行捕捉、管理和处理的数据集合，是需要新处理模式才能具有更强的决策力、洞察发现力和流程优化能力的海量、高增长率和多样化的信息资产，大数据的主要特点为<strong>数据量大</strong>（Volume），<strong>数据类别复杂</strong>（Variety），<strong>数据处理速度快</strong>（Velocity）和<strong>数据真实性高</strong>（Veracity），合起来被称为4V</p><h3 id="2-大数据分析技术"><a href="#2-大数据分析技术" class="headerlink" title="2. 大数据分析技术"></a>2. 大数据分析技术</h3><p><strong>（1）可视化分析（Analytic Visualization）</strong></p><p>普通消费者常常<strong>可以见到</strong>的一种大数据分析结果的表现形式，可视化分析将大量复杂的数据自动转化成<strong>直观形象</strong>的图表，使其能够更加容易的被普通消费者所接受和理解</p><p><strong>（2）数据挖掘算法（Date Mining Algorithms）</strong></p><p>大数据分析的理论核心，其本质是一组根据<strong>算法</strong>事先定义好的<strong>数学公式</strong>，将收集到的数据作为参数变量带入其中，从而能够从大量复杂的数据中<strong>提取</strong>到有价值的信息。亚马逊的推荐引擎和谷歌的广告系统都大量使用了数据挖掘算法</p><p><strong>（3）预测性分析能力（Predictive Analytic Capabilities）</strong></p><p>大数据分析最重要的应用领域，从大量复杂的数据中挖掘出规律，建立起科学的事件模型，通过将新的数据带入模型，就可以预测未来的事件走向。预测性分析能力常常被应用在金融分析和科学研究领域，用于股票预测或气象预测等</p><p><strong>（4）语义引擎（Semantic Engines）</strong></p><p>通过对大量复杂的数据进行分析，让计算机从中自我学习，可以使计算机能够尽量精确的了解用户输入内容的意思，从而把握住用户的需求，提供更好的用户体验</p><p><strong>（5）数据质量管理（Data Quality Management）</strong></p><p>为了保证大数据分析结果的准确性，需要将大数据中不真实的数据剔除掉，保留最准确的数据。这就需要建立有效的数据质量管理系统，分析收集到的大量复杂的数据，挑选出真实有效的数据</p><h3 id="3-技术基础"><a href="#3-技术基础" class="headerlink" title="3. 技术基础"></a>3. 技术基础</h3><p><strong>（1）分布式计算（Distributed Computing）</strong></p><p><strong>基本概念</strong></p><p>把一组计算机通过网络相互连接组成<strong>分散系统</strong>，然后将需要处理的大量数据分散成多个部分，交由分散系统内的计算机组同时计算，最后将这些计算结果合并得到最终的结果</p><p><strong>模型(Google)</strong></p><p>MapReduce是分布式<strong>计算框架</strong>，GFS（Google File System）是分布式<strong>文件系统</strong>，BigTable是基于Google File System的<strong>数据存储系统</strong></p><p><strong>主流分布式计算系统</strong></p><p>A. <strong>Hadoop</strong></p><p>Apache基金会的开源项目，采用MapReduce分布式计算框架，并根据GFS开发了HDFS分布式文件系统，根据BigTable开发了HBase数据存储系统，常用于<strong>离线</strong>的<strong>复杂</strong>的大数据处理</p><p>B. <strong>Spark</strong></p><p>Apache基金会的开源项目，它由加州大学伯克利分校的实验室开发，在Hadoop的基础上进行了一些架构上的改良。<strong>Hadoop</strong>使用<strong>硬盘</strong>来存储数据，而<strong>Spark</strong>使用<strong>内存</strong>来存储数据，因此Spark可以提供超过Hadoop100倍的运算速度，但是，由于内存断电后会丢失数据，Spark不能用于处理需要长期保存的数据，常用于<strong>离线</strong>的<strong>快速</strong>的大数据处理</p><p>C. <strong>Storm</strong></p><p>Twitter主推的分布式计算系统，它由BackType团队开发，是Apache基金会的孵化项目。它在Hadoop的基础上提供了<strong>实时运算</strong>的特性，可以实时的处理大数据流。不同于Hadoop和Spark，Storm不进行数据的收集和存储工作，它直接通过网络实时的接受数据并且实时的处理数据，然后直接通过网络实时的传回结果。常用于<strong>在线</strong>的<strong>实时</strong>的大数据处理</p><p><strong>（2）服务器集群（Server Cluster）</strong></p><p>服务器集群是一种提升服务器整体计算能力的解决方案。它是由互相连接在一起的服务器群所组成的一个并行式或分布式系统。服务器集群中的服务器运行同一个计算任务。因此，从外部看，这群服务器表现为一台虚拟的服务器，对外提供统一的服务</p><hr><h2 id="0x04-人工智能-AI"><a href="#0x04-人工智能-AI" class="headerlink" title="0x04 人工智能(AI)"></a>0x04 人工智能(AI)</h2><h3 id="1-发展史"><a href="#1-发展史" class="headerlink" title="1. 发展史"></a>1. 发展史</h3><p><img src="http://pdn6x28ho.bkt.clouddn.com/AI%E5%8F%91%E5%B1%95%E5%8F%B2.png" alt=""></p><h3 id="2-概念定义"><a href="#2-概念定义" class="headerlink" title="2. 概念定义"></a>2. 概念定义</h3><p><strong>维基百科版</strong></p><p>“人工智能就是机器展现出的智能”，即只要是某种机器，具有某种或某些“智能”的特征或表现，都应该算作“人工智能”</p><p><strong>百度百科版</strong></p><p>人工智能是“研究、开发用于模拟、延伸和扩展人的智能的理论、方法、技术及应用系统的一门新的技术科学”，将其视为计算机科学的一个分支，指出其研究包括机器人、语言识别、图像识别、自然语言处理和专家系统等</p><h3 id="3-分类"><a href="#3-分类" class="headerlink" title="3. 分类"></a>3. 分类</h3><p><strong>（1）弱人工智能</strong></p><p>不能真正实现推理和解决问题的智能机器，<strong>无自主意识</strong>。迄今为止的人工智能系统都还是实现特定功能的专用智能，而不是像人类智能那样能够不断适应复杂的新环境并不断涌现出新的功能，因此都还是弱人工智能。目前的主流研究仍然集中于弱人工智能，并取得了显著进步，如语音识别、图像处理和物体分割、机器翻译等方面取得了重大突破，甚至可以接近或超越人类水平</p><p><strong>（2）强人工智能</strong></p><p>指真正<strong>能思维</strong>的智能机器，并且认为这样的机器是有<strong>知觉</strong>的和<strong>自我意识</strong>的，这类机器可分为类人（机器的思考和推理类似人的思维）与非类人（机器产生了和人完全不一样的知觉和意识，使用和人完全不一样的推理方式）两大类。从一般意义来说，达到人类水平的、能够自适应地应对外界环境挑战的、具有自我意识的人工智能称为“通用人工智能”、“强人工智能”或“类人智能”</p><p><strong>仿真主义</strong></p><ul><li><p>仿真主义可以说是符号主义、连接主义、行为主义和统计主义之后的第五个流派。这条新路线通过制造先进的大脑探测工具从结构上解析大脑，再利用工程技术手段构造出模仿大脑神经网络基元及结构的仿脑装置，最后通过环境刺激和交互训练仿真大脑实现类人智能，简言之，“<strong>先结构，后功能</strong>”</p></li><li><p><strong>经典计算机</strong>是数理逻辑的开关电路实现，采用<strong>冯•诺依曼体系结构</strong>，可以作为逻辑推理等专用智能的实现载体。但要靠经典计算机不可能实现强人工智能。要按仿真主义的路线“仿脑”，就必须设计制造全新的软硬件系统，这就是“<strong>类脑计算机</strong>”，或者更准确地称为“<strong>仿脑机</strong>”。“仿脑机”是“仿真工程”的标志性成果，也是“仿脑工程”通向强人工智能之路的重要里程碑</p></li></ul><h3 id="4-参考框架"><a href="#4-参考框架" class="headerlink" title="4. 参考框架"></a>4. 参考框架</h3><p><img src="http://pdn6x28ho.bkt.clouddn.com/AI%E6%A1%86%E6%9E%B6.png" alt=""></p><p>提供了基于<strong>“角色—活动—功能”</strong>的层级分类体系，从“智能信息链”（水平轴）和“IT 价值链”（垂直轴）两个维度阐述了人工智能系统框架。<strong>“智能信息链”</strong>反映从智能信息感知、智能信息表示与形成、智能推理、智能决策、智能执行与输出的一般过程。在这个过程中，智能信息是流动的载体，经历了“数据—信息—知识—智慧”的凝练过程。<strong>“IT 价值链”</strong>从人工智能的底层基础设施、信息（提供和处理技术实现）到系统的产业生态过程，反映人工智能为信息技术产业带来的价值</p><h3 id="5-关键技术"><a href="#5-关键技术" class="headerlink" title="5. 关键技术"></a>5. 关键技术</h3><p><strong>（1）机器学习（Machine Learning）</strong></p><p>研究计算机怎样模拟或实现人类的学习行为，以获取新的知识或技能，重新组织已有的知识结构使之不断改善自身的性能的学科技术。基于数据的机器学习是现代智能技术中的重要方法之一，研究从观测数据（样本）出发寻找规律，利用这些规律对未来数据或无法观测的数据进行预测</p><p><strong>分类-根据学习模式</strong></p><p>A. <strong>监督学习</strong></p><p>利用<strong>已标记</strong>的有限训练数据集，通过某种学习策略/方法建立一个模型，实现对新数据/实例的标记（分类）/映射，最典型的监督学习算法包括<strong>回归</strong>和<strong>分类</strong>。监督学习要求训练样本的分类标签已知，分类标签精确度越高，样本越具有代表性，学习模型的准确度越高。监督学习在自然语言处理、信息检索、文本挖掘、手写体辨识、垃圾邮件侦测等领域获得了广泛应用</p><p>B. <strong>无监督学习</strong></p><p>利用<strong>无标记</strong>的有限数据描述隐藏在未标记数据中的结构/规律，最典型的非监督学习算法包括<strong>单类密度估计、单类数据降维、聚类</strong>等。无监督学习不需要训练样本和人工标注数据，便于压缩数据存储、减少计算量、提升算法速度，还可以避免正、负样本偏移引起的分类错误问题。主要用于经济预测、异常检测、数据挖掘、图像处理、模式识别等领域</p><p>C. <strong>强化学习</strong></p><p>智能系统<strong>从环境到行为映射</strong>的学习，以使强化信号函数值最大。强化学习的目标是学习从环境状态到行为的映射，使得智能体选择的行为能够获得环境最大的奖赏，使得外部环境对学习系统在某种意义下的评价为最佳。其在机器人控制、无人驾驶、下棋、工业控制等领域获得成功应用</p><p><strong>分类-根据学习方法</strong></p><p>A. <strong>传统机器学习</strong></p><p>从一些观测（训练）样本出发，试图发现不能通过原理分析获得的规律，实现对未来数据行为或趋势的准确预测。相关算法包括<strong>逻辑回归、隐马尔科夫方法、支持向量机方法、K 近邻方法、三层人工神经网络方法、Adaboost算法</strong>、<strong>贝叶斯方法</strong>以及<strong>决策树方法</strong>等</p><p>传统机器学习平衡了学习结果的<strong>有效性</strong>与学习模型的<strong>可解释性</strong>，为解决有限样本的学习问题提供了一种框架，主要用于<strong>有限样本</strong>情况下的<strong>模式分类、回归分析、概率密度估计</strong>等。传统机器学习方法共同的重要理论基础之一是<strong>统计学</strong>，在自然语言处理、语音识别、图像识别、信息检索和生物信息等许多计算机领域获得了广泛应用</p><p>B. <strong>深度学习</strong></p><p>深度学习是建立<strong>深层结构模型</strong>的学习方法，典型的深度学习算法包括<strong>深度置信网络、卷积神经网络、受限玻尔兹曼机</strong>和<strong>循环神经网络</strong>等</p><p>深度学习又称为深度神经网络（指层数<strong>超过3 层</strong>的神经网络）。深度学习源于<strong>多层神经网络</strong>，其实质是给出了一种将<strong>特征表示和学习合二为一</strong>的方式。深度学习的特点是放弃了可解释性，单纯追求学习的有效性</p><p>经过多年的摸索尝试和研究，已经产生了诸多深度神经网络的模型，其中<strong>卷积神经网络、循环神经网络</strong>是两类典型的模型。卷积神经网络常被应用于空间性分布数据；循环神经网络在神经网络中引入了记忆和反馈，常被应用于时间性分布数据</p><p><strong>深度学习框架</strong>是进行深度学习的基础底层框架，一般包含主流的神经网络算法模型，提供稳定的深度学习 API，支持训练模型在服务器和 GPU、TPU 间的分布式学习，部分框架还具备在包括移动设备、13云平台在内的多种平台上运行的移植能力，从而为深度学习算法带来前所未有的运行速度和实用性。目前主流的开源算法框架有 <strong>TensorFlow、Caffe/Caffe2、CNTK、MXNet、Paddle-paddle、Torch/PyTorch、Theano</strong> 等</p><p><strong>（2）知识图谱</strong></p><p>本质上是<strong>结构化</strong>的<strong>语义知识库</strong>，是一种由节点和边组成的<strong>图</strong>数据结构，以符号形式描述物理世界中的概念及其相互关系，其基本组成单位是<strong>“实体—关系—实体”</strong>三元组，以及实体及其相关“属性—值”对。不同实体之间通过关系相互联结，构成网状的知识结构。在知识图谱中，每个节点表示现实世界的“实体”，每条边为实体与实体之间的“关系”</p><p>知识图谱可用于<strong>反欺诈、不一致性验证、组团欺诈</strong>等公共安全保障领域，需要用到异常分析、静态分析、动态分析等数据挖掘方法</p><p><strong>（3）自然语言处理</strong></p><p>研究能实现人与计算机之间用自然语言进行有效通信的各种理论和方法，涉及的领域较多，主要包括<strong>机器翻译、机器阅读理解</strong>和<strong>问答系统</strong>等</p><p><strong>（4）人机交互</strong></p><p>主要研究人和计算机之间的<strong>信息交</strong>换，主要包括人到计算机和计算机到人的两部分信息交换，是人工智能领域的重要的外围技术。人机交互是与认知心理学、人机工程学、多媒体技术、虚拟现实技术等密切相关的综合学科。人机交互技术除了传统的基本交互和图形交互外，还包括<strong>语音交互、情感交互、体感交互</strong>及<strong>脑机交互</strong>等技术</p><p><strong>（5）计算机视觉</strong></p><p>计算机视觉是使用计算机<strong>模仿人类视觉系统</strong>的科学，让计算机拥有类似人类提取、处理、理解和分析图像以及图像序列的能力。自动驾驶、机器人、智能医疗等领域均需要通过计算机视觉技术从视觉信号中提取并处理信息。近来随着深度学习的发展，预处理、特征提取与算法处理渐渐融合，形成<strong>端到端</strong>的人工智能算法技术。根据解决的问题，计算机视觉可分为<strong>计算成像学、图像理解、三维视觉、动态视觉</strong>和<strong>视频编解码</strong>五大类</p><p><strong>（6）生物特征识别</strong></p><p>生物特征识别技术是指通过个体<strong>生理特征</strong>或<strong>行为特征</strong>对个体身份进行识别<strong>认证</strong>的技术</p><p>从应用流程看，生物特征识别通常分为<strong>注册</strong>和<strong>识别</strong>两个阶段。<strong>注册阶段</strong>通过传感器对人体的生物表征信息进行采集，如利用图像传感器对指纹和人脸等光学信息、麦克风对说话声等声学信息进行采集，利用数据预处理以及特征提取技术对采集的数据进行处理，得到相应的特征进行存储。<strong>识别过程</strong>采用与注册过程一致的信息采集方式对待识别人进行信息采集、数据预处理和特征提取，然后将提取的特征与存储的特征进行比对分析，完成识别。从应用任务看，生物特征识别一般分为辨认与确认两种任务，辨认是指从存储库中确定待识别人身份的过程，是一对多的问题；确认是指将待识别人信息与存储库中特定单人信息进行比对，确定身份的过程，是一对一的问题</p><p>生物特征识别技术涉及的内容十分广泛，包括<strong>指纹、掌纹、人脸、虹膜、指静脉、声纹、步态</strong>等多种生物特征，其识别过程涉及到图像处理、计算机视觉、语音识别、机器学习等多项技术</p><p><strong>（7）虚拟现实/增强现实</strong></p><p>虚拟现实（VR）/增强现实（AR）是以计算机为核心的新型视听技术。结合相关科学技术，在一定范围内生成与真实环境在视觉、听觉、触感等方面高度近似的数字化环境。用户借助必要的装备与数字化环境中的对象进行交互，相互影响，获得近似真实环境的感受和体验，通过显示设备、跟踪定位设备、触力觉交互设备、数据获取设备、专用芯片等实现</p><hr><h2 id="0x05-相互关系"><a href="#0x05-相互关系" class="headerlink" title="0x05 相互关系"></a>0x05 相互关系</h2><ol><li><p><strong>物联网</strong>本质上是互联网大脑的感觉神经系统和运动神经系统，传感器和通过AI控制的智能设备通过互联网线路连接到互联网中枢神经系统供云端的群体智慧和云AI使用(<strong>数据产生和收集器</strong>)</p></li><li><p><strong>云计算</strong>本质上是互联网大脑的中枢神经系统，它通过服务器，网络操作系统，神经元网络（大社交网络），大数据和基于大数据的人工智能算法对互联网大脑的其他组成部分进行控制(<strong>数据存储平台</strong>)</p></li><li><p><strong>大数据</strong>本质上是互联网大脑各神经系统在运转过程中传输和积累的<strong>有价值信息</strong>。因为在过去50年随着互联网的快速进化而急速膨胀，体量极其巨大。是互联网大脑产生智慧智能的基础(<strong>有价值的数据</strong>)</p></li><li><p><strong>人工智能</strong>本质是互联网大脑产生产生智慧智能的动力源泉，人工智能不仅仅通过算法如深度学习，机器学习与大数据结合，也运用到互联网大脑的神经末梢，神经网络和智能终端中。使得互联网大脑各个神经系统同时提升能力（<strong>智能化数据分析</strong>）</p></li></ol><hr><h2 id="0xFF-参考资源"><a href="#0xFF-参考资源" class="headerlink" title="0xFF 参考资源"></a>0xFF 参考资源</h2><ul><li><p><a href="http://imgtec.eetrend.com/blog/10926" target="_blank" rel="noopener">物联网技术矩阵图</a></p></li><li><p><a href="http://www.cac.gov.cn/files/pdf/baipishu/CloudStandardization.pdf" target="_blank" rel="noopener">云计算标准化白皮书 </a></p></li><li><p><a href="http://www.cesi.cn/images/editor/20180124/20180124135528742.pdf" target="_blank" rel="noopener">人工智能标准化白皮书</a></p></li></ul><ul><li><p><a href="https://github.com/mindpin/docs/wiki/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86" target="_blank" rel="noopener">https://github.com/mindpin/docs/wiki/Bigdata</a></p></li><li><p><a href="https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/artificial intelligence</a></p></li><li><p><a href="http://www.duozhishidai.com/article-1858-1.html" target="_blank" rel="noopener">http://www.duozhishidai.com/article-1858-1.html</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;近几年，随着互联网技术的发展与计算能力的提升，大数据，云计算，物联网，人工智能等概念越来与火热，那么这概念的诞生，发展，技术背景，以及这些“新技术”之间的关系又怎样？本文对网络上的相关资料(国内的版权意识及环境较差，部分文章出处难以考证)梳理一二，便于查阅与理解&lt;br&gt;
    
    </summary>
    
      <category term="0X01 思维视角" scheme="http://yoursite.com/categories/0X01-%E6%80%9D%E7%BB%B4%E8%A7%86%E8%A7%92/"/>
    
      <category term="新兴科技" scheme="http://yoursite.com/categories/0X01-%E6%80%9D%E7%BB%B4%E8%A7%86%E8%A7%92/%E6%96%B0%E5%85%B4%E7%A7%91%E6%8A%80/"/>
    
    
  </entry>
  
  <entry>
    <title>IDS技术简析</title>
    <link href="http://yoursite.com/2018/08/15/IDS%E6%8A%80%E6%9C%AF%E7%AE%80%E6%9E%90/"/>
    <id>http://yoursite.com/2018/08/15/IDS技术简析/</id>
    <published>2018-08-15T00:00:52.000Z</published>
    <updated>2018-08-18T03:57:01.849Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>入侵检测系统（Intrusion-detection system，缩写IDS）是一种网络安全设备或应用软件，可以监控网络传输或者系统，检查是否有可疑活动或者违反企业的政策。侦测到时发出警报或者采取主动反应措施，IDS是一种积极主动的安全防护技术。本文对IDS原理，CIDF模型，Snort，NIDS脆弱性及反NIDS技术进行简要分析与总结</p></blockquote><a id="more"></a><hr><h2 id="0x01-IDS概述"><a href="#0x01-IDS概述" class="headerlink" title="0x01 IDS概述"></a>0x01 IDS概述</h2><h3 id="1-IDS概念及模型"><a href="#1-IDS概念及模型" class="headerlink" title="1. IDS概念及模型"></a>1. IDS概念及模型</h3><p><strong>(1) 入侵及方式</strong></p><p>入侵就是试图破坏网络及信息系统<strong>机密性、完整性</strong>和<strong>可用性</strong>(CIA)的行为</p><p><strong>入侵方式</strong></p><ol><li><p>未授权的用户访问系统资源</p></li><li><p>已授权的用户企图获得更高权限，或者是已授权的用户滥用所给定的权限等</p></li></ol><p><strong>(2) 常见定义</strong></p><ol><li><p>检测对计算机系统的非授权访问</p></li><li><p>对系统的运行状态进行监视，发现各种攻击企图、攻击行为或攻击结果，以保证系统资源的保密性、完整性和可用性</p></li><li><p>识别针对计算机系统和网络系统、或广义上的信息系统的非法攻击，包括检测外部非法入侵者的恶意攻击或探测，以及内部合法用户越权使用系统资源的非法行为</p></li></ol><p><strong>(3) IDS(入侵检测系统) </strong></p><p><strong>定义：</strong>所有能够<strong>执行入侵检测任务</strong>和实现<strong>入侵检测功能</strong>的系统都可称为入侵检测系统(IDS，IntrusionDetection System)，其中包括软件系统或软/硬件结合的系统</p><p><strong>功能：</strong>入侵检测系统<strong>自动监视</strong>出现在计算机或网络系统中的事件，并<strong>分析</strong>这些事件，以判断是否有入侵事件的发生</p><p><strong>部署位置：</strong>入侵检测系统一般位于<strong>内部网的入口</strong>处，安装在<strong>防火墙的后面</strong>，用于检测外部入侵者的入侵和内部用户的非法活动</p><p><strong>(4) IDS 模型</strong></p><p><img src="http://par628i4r.bkt.clouddn.com/IDS%E6%A8%A1%E5%9E%8B.png" alt=""></p><ol><li><p><strong>数据收集器：</strong>又称探测器，主要负责<strong>收集数据</strong>。收集器的输入数据包括任何可能包含入侵行为线索的数据，如各种网络协议数据包、系统日志文件和系统调用记录等。探测器将这些数据收集起来，然后再发送到检测器进行处理</p></li><li><p><strong>检测器：</strong>又称分析器或检测引擎，负责<strong>分析和检测</strong>入侵的任务，并向控制器发出警报信号</p></li><li><p><strong>知识库：</strong>为检测器和控制器提供必需的<strong>信息支持</strong>。这些信息包括：用户或系统的历史活动档案或检测规则集合等</p></li><li><p><strong>控制器：</strong>也称为响应器，根据从检测器发来的警报信号，人工或自动地对入侵行为做出<strong>响应</strong></p></li></ol><p>此外，大多数入侵检测系统都会包含一个<strong>用户接口</strong>组件，用于观察系统的运行状态和输出信号，并对系统的行为进行控制</p><h3 id="2-IDS-任务"><a href="#2-IDS-任务" class="headerlink" title="2. IDS 任务"></a>2. IDS 任务</h3><p><strong>(1) 信息收集</strong></p><p>IDS所收集的信息包括用户(合法/非法用户)在网络、系统、数据库及应用程序活动的<strong>状态和行为</strong>。为了准确地收集用户的信息活动，需要在信息系统中的若干个<strong>关键点</strong>(包括不同网段、不同主机、不同数据库服务器、不同的应用服务器等处)设置<strong>信息探测点</strong></p><p><strong>IDS可利用的信息来源</strong></p><p>A. 系统和网络的<strong>日志文件</strong></p><ul><li>日志文件中包含发生在系统和网络上异常活动的<strong>证据</strong>，通过查看日志文件，能够发现黑客的入侵行为</li></ul><p>B. <strong>目录和文件</strong>中的<strong>异常</strong>改变</p><ul><li>信息系统中的目录和文件中的异常改变(包括修改、创建和删除)，特别是那些限制访问的重要文件和数据的改变，很可能就是一种入侵行为</li></ul><p>C. <strong>程序执行</strong>中的<strong>异常</strong>行为</p><ul><li>每个进程在具有不同权限的环境中执行，这种环境控制着进程可访问的系统资源、程序和数据文件等</li></ul><p>D. <strong>网络活动</strong>信息</p><ul><li>远程攻击主要通过网络发送<strong>异常数据包</strong>而实现，为此IDS需要收集TCP连接的状态信息以及网络上传输的实时数据(如果收集到大量的<strong>TCP半开连接</strong>，则可能是<strong>拒绝服务攻击</strong>的开始。如果在短时间内有大量的到<strong>不同TCP（或UDP）端口</strong>的连接，则很可能说明有人在对己方的网络进行<strong>端口扫描</strong>)</li></ul><p><strong>(2) 信息分析</strong></p><p>对收集到的网络、系统、数据及用户活动的状态和行为信息等进行<strong>模式匹配</strong>、<strong>统计分析</strong>和<strong>完整性分析</strong>，得到实时检测所必需的信息</p><p>A. <strong>模式匹配</strong></p><ul><li>将收集到的信息与已知的网络入侵模式的<strong>特征数据库</strong>进行比较，从而发现违背安全策略的行为。(模式匹配的关键是<strong>如何表达入侵模式</strong>，把入侵行为与正常行为<strong>区分</strong>开来。模式匹配的优点是<strong>误报率小</strong>，其局限性是<strong>只能发现已知攻击</strong>，而对未知攻击无能为力)</li></ul><p>B. <strong>统计分析</strong></p><ul><li>统计分析是入侵检测常用的<strong>异常发现</strong>方法。统计分析方法就是先<strong>创建</strong>系统对象(如用户、文件、目录和设备等)的<strong>统计属性</strong>(如访问次数、操作失败次数、访问地点、访问时间、访问延时等)，再将信息系统的<strong>实际行为</strong>与统计属性进行<strong>比较</strong>。当观察值在正常值范围之外时，则认为有入侵行为发生</li></ul><p>C. <strong>完整性分析</strong></p><ul><li>完整性分析<strong>检测</strong>某个文件或对象是否被<strong>更改</strong>。完整性分析常利用<strong>消息杂凑函数</strong>(如MD5和SHA)，能识别目标的微小变化。该方法的优点是某个文件或对象发生的任何一点改变都能够被发现</li></ul><p><strong>(3) 安全响应</strong></p><p>IDS在发现入侵行为后必然及时做出响应，包括<strong>终止网络服务</strong>、<strong>记录事件日志</strong>、<strong>报警和阻断</strong>等</p><p><strong>响应类型</strong></p><p>A. <strong>主动响应</strong></p><p>由<strong>用户驱动</strong>或<strong>系统本身自动执行</strong>，可对入侵行为采取终止网络连接、改变系统环境(如修改防火墙的安全策略)等</p><p>B. <strong>被动响应</strong></p><p>包括发出告警信息和通知等</p><p><strong>常用响应方式</strong></p><p>记录日志、实时显示、E-mail报警、声音报警、SNMP报警、实时TCP阻断、防火墙联动、手机短信报警等</p><h3 id="3-IDS-主要功能"><a href="#3-IDS-主要功能" class="headerlink" title="3. IDS 主要功能"></a>3. IDS 主要功能</h3><p><strong>(1) 网络流量的跟踪与分析功能</strong></p><p>跟踪用户进出网络的所有活动，实时检测并分析用户在系统中的活动状态；实时统计网络流量，检测拒绝服务攻击等异常行为</p><p><strong>(2) 已知攻击特征的识别功能</strong></p><p>识别特定类型的攻击，并向控制台报警，为网络防护提供依据。根据定制的条件过滤重复告警事件，减轻传输与响应的压力</p><p><strong>(3) 异常行为的分析、统计与响应功能</strong></p><p>分析系统的异常行为模式，统计异常行为，并对异常行为做出响应</p><p><strong>(4) 特征库的在线和离线升级功能</strong></p><p>提供入侵检测规则的在线和离线升级，实时更新入侵特征库，不断提高IDS的入侵检测能力</p><p><strong>(5) 数据文件的完整性检查功能</strong></p><p>检查关键数据文件的完整性，识别并报告数据文件的改动情况</p><p><strong>(6) 自定义的响应功能</strong></p><p>定制实时响应策略；根据用户定义，经过系统过滤，对告警事件及时响应</p><p><strong>(7) 系统漏洞的预报警功能</strong></p><p>对未发现的系统漏洞特征进行预报警</p><p><strong>(8) IDS探测器集中管理功能</strong></p><p>通过控制台收集探测器的状态和告警信息，控制各个探测器的行为</p><h3 id="4-IDS-分类"><a href="#4-IDS-分类" class="headerlink" title="4. IDS 分类"></a>4. IDS 分类</h3><p><strong>(1) 基于网络的入侵检测系统 (NIDS，NetworkIntrusion Detection System)</strong></p><p><img src="http://pdeise3e3.bkt.clouddn.com/%E5%9F%BA%E4%BA%8E%E7%BD%91%E7%BB%9CIDS.png" alt=""></p><ul><li><p>数据来自<strong>网络数据流</strong>。NIDS能够截获网络中的数据包，<strong>提取其特征</strong>并与知识库中已知的攻击签名相<strong>比较</strong>，从而达到检测目的</p></li><li><p>优点是<strong>检测速度快、隐蔽性好、不容易受到攻击</strong>、不消耗被保护主机的<strong>资源</strong>；缺点是有些攻击是从被保护的<strong>主机</strong>发出的，不经过网络，因而<strong>无法识别</strong></p></li></ul><p><strong>(2) 基于主机的入侵检测系统(HIDS，Host IntrusionDetection System)</strong></p><p><img src="http://pdeise3e3.bkt.clouddn.com/%E5%9F%BA%E4%BA%8E%E4%B8%BB%E6%9C%BAIDS.png" alt=""></p><ul><li><p>数据来源于<strong>主机系统</strong>，通常是<strong>系统日志</strong>和<strong>审计记录</strong>。HIDS通过对系统日志和审计记录的不断<strong>监控和分析</strong>来发现入侵</p></li><li><p>优点是针对不同操作系统<strong>捕获应用层入侵</strong>，<strong>误报少</strong>；缺点是<strong>依赖</strong>于主机及其子系统，<strong>实时性差</strong></p></li><li><p>HIDS通常<strong>安装在被保护的主机</strong>上，主要对该主机的<strong>网络实时连接</strong>及<strong>系统审计日志</strong>进行<strong>分析和检查</strong>，在发现可疑行为和安全违规事件时，向管理员报警</p></li></ul><p><strong>LIDS：基于Linux内核的入侵检测系统</strong></p><ul><li>在Linux内核中实现了<strong>参考监听模式</strong>以及<strong>命令进入控制(Mandatory Access Control)模式</strong>，可以<strong>实时监视</strong>操作状态，旨在从系统核心加强其安全性。在某种程度上可以认为它的检测数据来源于操作系统的内核操作，在这一级别上检测入侵和非法活动，因此其安全特性要高于其他两类IDS</li></ul><p><strong>(3) 分布式入侵检测系统 (DIDS，Distributed Intrusion Detection System)</strong></p><ul><li><p>采用上述两种数据来源。这种系统能够<strong>同时分析</strong>来自<strong>主机</strong>系统的<strong>审计日志</strong>和来自<strong>网络</strong>的<strong>数据流</strong>，一般为分布式结构，由多个部件组成。DIDS可以从多个主机获取数据，也可以从网络取得数据，克服了单一的HIDS和NIDS的不足</p></li><li><p>典型的DIDS采用<strong>控制台/探测器结构</strong>。NIDS和HIDS作为<strong>探测器</strong>放置在网络的<strong>关键节点</strong>，并向<strong>中央控制台</strong>汇报情况。<strong>攻击日志</strong>定时传送到<strong>控制台</strong>，并保存到<strong>中央数据库</strong>中，新的<strong>攻击特征</strong>能及时发送到各个<strong>探测器</strong>上。每个探测器能够根据所在网络的实际需要配置不同的规则集</p></li></ul><hr><h2 id="0x02-CIDF-模型"><a href="#0x02-CIDF-模型" class="headerlink" title="0x02 CIDF 模型"></a>0x02 CIDF 模型</h2><h3 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h3><p><strong>CIDF</strong> 是一种推荐的<strong>入侵检测标准架构</strong>，大多数IDS是独立开发的，不同系统之间<strong>缺乏互操作性</strong>和<strong>互用性</strong>，因此，DARPA（theDefense Advanced Research Prouects Agency，美国国防部高级研究计划局）在1997年3月开始着手通用入侵检测架构（CIDF, Common Intrusion Detection Framework）标准的制定</p><h3 id="2-CIDF-主要目的"><a href="#2-CIDF-主要目的" class="headerlink" title="2. CIDF 主要目的"></a>2. CIDF 主要目的</h3><p><strong>(1) IDS构件共享： </strong>即<strong>一个</strong>IDS系统的构件可被<strong>另一个</strong>系统使用</p><p><strong>(2) 数据共享：</strong>即通过提供<strong>标准的数据格式</strong>，使得IDS中的各类数据可以在<strong>不同的系统</strong>之间传递并共享</p><p><strong>(3)</strong> <strong>完善互用性标准</strong>，并建立一套开发接口和支持工具，以提供独立开发部分构件的能力</p><h3 id="3-CIDF-框架结构"><a href="#3-CIDF-框架结构" class="headerlink" title="3. CIDF 框架结构"></a>3. CIDF 框架结构</h3><p><strong>CIDF模型</strong>将入侵检测需要<strong>分析的数据</strong>称作<strong>事件（Event）</strong>，它可以是基于网络的入侵检测系统的数据包，也可以是基于主机的入侵检测系统从系统日志等其它途径得到的信息。模型也对各个部件之间<strong>信息传递格式</strong>、<strong>通信方法</strong>和<strong>API</strong>进行了<strong>标准化</strong></p><p><img src="http://pdeise3e3.bkt.clouddn.com/CIDF%E6%A1%86%E6%9E%B6.png" alt=""></p><p><strong>(1) 事件产生器</strong></p><p>从整个的计算机环境（也称为信息源）中<strong>获得事件</strong>，并向系统的其他部分<strong>提供该事件</strong>，这些数据源可以是网络、主机或应用系统中的信息</p><p><strong>(2) 事件分析器</strong></p><p>从事件产生器中<strong>获得数据</strong>，通过各种分析方法—一般为<strong>误用检测</strong>和<strong>异常检测</strong>方法来<strong>分析数据，</strong>决定入侵是否已经发生或者正在发生，分析方法的选择尤为重要</p><p><strong>(3) 响应单元</strong></p><p>对分析结果<strong>作出反应</strong>的<strong>功能单元</strong>。最简单的响应是<strong>报警</strong>，通知管理者入侵事件的发生，由管理者决定采取应对的措施</p><p><strong>(4) 事件数据库</strong></p><p><strong>存放</strong>各种中间和最终<strong>数据</strong>的地方的总称，它可以是复杂的数据库，也可以是简单的文本文件</p><p><strong>(5) 目录服务构件</strong></p><p>用于各构件<strong>定位</strong>其他的构件，以及<strong>控制</strong>其他构件传递的<strong>数据</strong>并认证其他构件的<strong>使用</strong>，以防止IDS系统本身受到攻击。它可以管理和发布密钥，提供构件信息和告诉用户构件的功能接口</p><h3 id="4-IDS-处理模式"><a href="#4-IDS-处理模式" class="headerlink" title="4. IDS 处理模式"></a>4. IDS 处理模式</h3><p>在目前的入侵检测系统中，经常用信息源、分析部件和响应部件来分别代替事件产生器、事件分析器和响应单元等术语。因此，人们往往将<strong>信息源、分析和响应</strong>称作入侵检测系统的<strong>处理模式</strong></p><hr><h2 id="0x03-入侵检测方法"><a href="#0x03-入侵检测方法" class="headerlink" title="0x03 入侵检测方法"></a>0x03 入侵检测方法</h2><p>事件分析器也称为<strong>分析引擎</strong>，是入侵检测系统中最重要的<strong>核心部件</strong>，IDS的分析引擎通常使用两种基本的分方法来分析事件、检测入侵行为，即<strong>误用检测</strong>(MD，Misuse Detection)和<strong>异常检测</strong>(AD，Anomaly Detection)</p><h3 id="1-误用检测-MD"><a href="#1-误用检测-MD" class="headerlink" title="1. 误用检测(MD)"></a>1. 误用检测(MD)</h3><p><strong>(1) MD 概述</strong></p><p><strong>误用检测技术</strong>又称<strong>基于知识的检测技术</strong>。它假定所有入侵行为和手段(及其变种)都能够表达为一种<strong>模式</strong>或<strong>特征</strong>，并对已知的入侵行为和手段进行分析，提取入侵特征，构建攻击模式或攻击签名，通过系统当前状态与攻击模式或攻击签名的<strong>匹配</strong>判断入侵行为。误用检测是最<strong>成熟</strong>、应用最<strong>广泛</strong>的技术</p><p><strong>(2) 优点及缺陷</strong></p><p>误用检测技术的<strong>优点</strong>在于可以准确地检测<strong>已知</strong>的入侵行为，<strong>缺点</strong>是不能检测<strong>未知</strong>的入侵行为。误用检测的<strong>关键</strong>在于如何表达入侵行为，即<strong>攻击模型的构建</strong>，把真正的入侵与正常行为区分开来</p><p><strong>(3) MD 模型</strong></p><p><img src="http://pdeise3e3.bkt.clouddn.com/MD%E6%A8%A1%E5%9E%8B.png" alt=""></p><h3 id="2-异常检测-AD"><a href="#2-异常检测-AD" class="headerlink" title="2. 异常检测(AD)"></a>2. 异常检测(AD)</h3><p><strong>(1) AD 概述</strong></p><p>异常检测技术又称为<strong>基于行为</strong>的入侵检测技术，用来<strong>检测</strong>系统（主机或网络）中的<strong>异常行为</strong>。其基本设想是入侵行为与正常的(合法的)活动有明显的差异，即正常行为与异常行为有明显的差异</p><p><strong>(2) AD 工作原理</strong></p><p>A. 首先<strong>收集</strong>一段时间系统活动的历史<strong>数据</strong></p><p>B. 再<strong>建立</strong>代表主机、用户或网络连接的正常行为<strong>描述</strong></p><p>C. 然后收集事件数据并使用一些不同的方法来<strong>决定</strong>所检测到的事件活动是否<strong>偏离</strong>了正常行为模式</p><p>D. 最终判断是否发生了入侵</p><p><strong>(3) AD 常用方法</strong></p><pre><code>A. 统计异常检测方法B. 特征选择异常检测方法C. 基于贝叶斯推理异常检测方法D. 基于贝叶斯网络异常检测方法E. 基于模式预测异常检测方法</code></pre><p>比较成熟的方法是<strong>统计异常检测</strong>方法和<strong>特征选择异常检测</strong>方法</p><hr><h2 id="0x04-Snort及IDS部署"><a href="#0x04-Snort及IDS部署" class="headerlink" title="0x04 Snort及IDS部署"></a>0x04 Snort及IDS部署</h2><h3 id="1-Snort-简述"><a href="#1-Snort-简述" class="headerlink" title="1. Snort 简述"></a>1. Snort 简述</h3><p><strong>Snort</strong>是一个是一个基于<code>libpcap</code>的<strong>轻量级网络入侵检测系统</strong>，所谓轻量级入侵检测系统，是指它能够方便地安装和配置在网络中任何一个节点上，而且不会对网络产生太大的影响。它对系统的配置要求比较低，可支持多种操作平台，包括Linux、Windows、Solaris和FreeBSD等。在各种NIDS产品中，Snort是其中最好的之一，它是用C语言编写的开源软件，官方站点<a href="https:/www.snort.org/" target="_blank" rel="noopener">www.snort.org</a></p><h3 id="2-Snort-功能"><a href="#2-Snort-功能" class="headerlink" title="2. Snort 功能"></a>2. Snort 功能</h3><pre><code>(1) 基于规则的检测引擎(2) 良好的可扩展性。可以使用预处理器和输出插件来对Snort的功能进行扩展(3) 灵活简单的规则描述语言。掌握了基本的TCP、IP知识，就可以编写自己的规则(4) 除了用作入侵检测系统，还可以用作嗅探器和包记录器</code></pre><h3 id="3-Snort-组成结构"><a href="#3-Snort-组成结构" class="headerlink" title="3. Snort 组成结构"></a>3. Snort 组成结构</h3><p><img src="http://pdeise3e3.bkt.clouddn.com/Snort%E7%BB%84%E6%88%90.png" alt=""></p><p><strong>(1) 解码器</strong></p><p>负责从网络接口上<strong>获取数据包</strong>。在编程实现上，解码器用一个<strong>结构体</strong>来表示单个数据包，该结构记录了与各层协议有关的信息和其他检测引擎需要用到的信息。获取的信息将被送往检测引擎或者预处理器中。解码器支持多种类型的网络接口，包括Ethernet、SLIP、PPP等</p><p><strong>(2) 检测引擎</strong></p><p>该子系统是Snort工作在入侵检测模式下的<strong>核心部分</strong>，它使用基于<strong>规则匹配</strong>的方式来检测每个数据包。一旦发现数据包的特征符合某个规则定义，则触发相应的处理操作</p><p><strong>(3) 日志/警报子系统</strong></p><p>规则中定义了数据包的处理方式，包括alter(报警)、log(日志记录)和pass(忽略)等，但具体的<strong>alter</strong>和<strong>log操作</strong>则是由日志/警报子系统完成的。<strong>日志子系统</strong>将解码得到的信息以ASCII码的格式或以tcpdump的格式<strong>记录</strong>下来，<strong>警报子系统</strong>将报警信息<strong>发送</strong>到syslog、socket或数据库中</p><p><strong>(4) 预处理器</strong></p><p>额外的检测机制在Snort中是通过预处理器来实现的，它工作在检测引擎之前，解码器之后</p><p><strong>预处理器类型</strong></p><pre><code>A. 包重组：这类预处理器的代表有stream4和frag2，它们将多个数据包中的数据进行组合，构成一个新的待检测包，然后将这个包交给检测引擎或其他预处理器B. 协议解码：为了方便检测引擎方便地处理数据，这类预处理器对Telnet，HTTP和RPC等协议进行解析，并使用统一规范的格式对其进行表述C. 异常检测：用来检测无法用一般规则发现的攻击和协议异常。与前面两种预处理器相比，异常检测预处理器更侧重于报警功能</code></pre><p><strong>(5) 输出插件</strong></p><p>输出插件用来<strong>格式化警报信息</strong>，使得管理员可以按照公司环境来配置容易理解、使用和查看的报警和日志方法。Snort有大量的插件来支持不同的格式，包括<strong>数据库、XML、Syslog</strong>等格式</p><h3 id="4-Snort工作流程"><a href="#4-Snort工作流程" class="headerlink" title="4. Snort工作流程"></a>4. Snort工作流程</h3><p><img src="http://pdeise3e3.bkt.clouddn.com/Snort%E7%BB%84%E6%88%90.png" alt=""></p><pre><code>(1) 首先，Snort利用libpcap进行抓包(2) 之后，由解码器将捕获的数据包信息填入包结构体，并将其送到各式各样的预处理器中(3) 对于那些用于检测入侵的预处理器来说，一旦发现了入侵行为，将直接调用输出插件或者日志、警报子系统进行输出(4) 对于那些用于包重组和协议解码的预处理器来说，它们会将处理后的信息送往检测引擎，由检测引擎对数据包的特征及内容进行检查，一旦检测到与已知规则匹配的数据包，或者利用输出插件进行输出，或者利用日志、警报子系统进行报警和记录</code></pre><hr><h2 id="0x05-IDS-发展方向"><a href="#0x05-IDS-发展方向" class="headerlink" title="0x05 IDS 发展方向"></a>0x05 IDS 发展方向</h2><pre><code>(1) 宽带高速实时检测技术(2) 大规模分布式的检测技术(3) 数据挖掘技术(4) 更先进的检测算法(5) 入侵响应技术</code></pre><hr><h2 id="0x06-NIDS脆弱性及规避技术"><a href="#0x06-NIDS脆弱性及规避技术" class="headerlink" title="0x06 NIDS脆弱性及规避技术"></a>0x06 NIDS脆弱性及规避技术</h2><h3 id="1-NIDS面临的问题"><a href="#1-NIDS面临的问题" class="headerlink" title="1. NIDS面临的问题"></a>1. NIDS面临的问题</h3><p><strong>(1) 检测的工作量很大</strong></p><ul><li><p>NIDS需要高效的检测方法和大量的系统资源</p></li><li><p>NIDS的检测是资源密集型的</p></li></ul><p><strong>(2) 检测方法的局限性</strong></p><ul><li><p>复杂的、智能化方法的作用十分有限，而AD方法(误用检测方法)受限于某些资源的请求使用在数据传输过程中的模糊性与隐含性</p></li><li><p>特征匹配作为一种轻量级的检测方法有其固有的缺陷，缺乏弹性（尤其是字符串匹配）</p></li></ul><p><strong>(3) 网络协议的多样性与复杂性</strong></p><ul><li><p>TCP/IP协议族本身十分庞杂，各种协议不下几十种，呈现横向跨越和纵向深入的两维分布</p></li><li><p>NIDS将难于理解应用层的意图，更无法模拟或理解某些应用提供的功能作用于具体环境下所产生的效果</p></li></ul><p><strong>(4) 系统实现的差异</strong></p><ul><li><p>– 具体实现时，各种系统不完全按RFC，对那些建议值和可选功能，会有自己的偏好，很难做到与目标系统的一致性处理</p></li><li><p>某些系统（如Unix）出于操作的自由性和应用的方便性，允许用户对网络底层进行直接操作</p></li></ul><h3 id="2-规避NIDS技术"><a href="#2-规避NIDS技术" class="headerlink" title="2. 规避NIDS技术"></a>2. 规避NIDS技术</h3><p><strong>(1) Insertion技术</strong></p><p><strong>Insertion</strong>是指<strong>诱使</strong>NIDS接受一些目标系统<strong>无法接收</strong>或是<strong>拒绝接受</strong>的数据包</p><p><strong>影响方面</strong></p><p>A. 针对<strong>非单特征点</strong>的入侵特征进行<strong>插入操作</strong>，将导致特征失效</p><p><img src="http://pdeise3e3.bkt.clouddn.com/NIDS%E5%8D%95%E7%82%B9.png" alt=""></p><ul><li><p>假设<strong>“INFO”</strong>作为入侵的一个<strong>特征串</strong>，入侵者分四个数据包发出该特征串，并在发送第二个特征点“N”之后插入一个迷惑数据包“X”，该数据包对于目标系统来说是无法接收或拒绝接受的，但NIDS却错误地接受了，于是目标系统与NIDS得到不同的“特征串”。从目标系统来看入侵显然发生了，但对于NIDS来说它将无法检测到“INFO”，因此也不会据此判断入侵的发生</p></li><li><p>对于这种情况而言，入侵特征是非单特征点的，因为单特征点是无法Insertion的，而且需要特征的<strong>分割传输</strong>，并在传输中间插入可以导致NIDS错误接受的迷惑性数据包</p></li></ul><p>B. 失去状态同步</p><p>NIDS错误地接受了目标系统无法接收或是拒绝接受的数据包，那么两者之间的状态就会产生不一致，我们称之为“失去状态同步”</p><p><img src="http://pdeise3e3.bkt.clouddn.com/NIDS%E7%8A%B6%E6%80%81.png" alt=""></p><ul><li><p>假设目标系统处于状态A，NIDS跟踪连接也保持为这一状态。现在入侵者发送一个携带状态B的数据包，因为某种原因目标系统没有接收(或接受)数据包，而NIDS却接受了该数据包并更新状态为B，于是与目标系统失去状态同步。在NIDS找回状态同步之前，对后继数据包接受与处理上可能会与目标系统产生不一致。更为严重的是，NIDS可能会在错误接受的数据包的误导下复位或终止相应的状态跟踪，以至放弃或失去对目标系统连接的跟踪</p></li><li><p>这种影响并不基于特征匹配，但它只适用于需要维护状态信息的或<strong>面向连接</strong>的情况</p></li></ul><p><strong>(2) Evasion 技术</strong></p><p>这一次是<strong>NIDS错误地拒绝了本应接受的数据包</strong>，从而导致NIDS比目标系统“少”看到了东西，这种非一致性同样可能产生问题</p><p><strong>影响方面</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;入侵检测系统（Intrusion-detection system，缩写IDS）是一种网络安全设备或应用软件，可以监控网络传输或者系统，检查是否有可疑活动或者违反企业的政策。侦测到时发出警报或者采取主动反应措施，IDS是一种积极主动的安全防护技术。本文对IDS原理，CIDF模型，Snort，NIDS脆弱性及反NIDS技术进行简要分析与总结&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="0x02 安全技术" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="IDS" scheme="http://yoursite.com/tags/IDS/"/>
    
      <category term="Snort" scheme="http://yoursite.com/tags/Snort/"/>
    
      <category term="NIDS" scheme="http://yoursite.com/tags/NIDS/"/>
    
  </entry>
  
  <entry>
    <title>VPN技术浅析</title>
    <link href="http://yoursite.com/2018/08/14/VPN%E6%8A%80%E6%9C%AF%E6%B5%85%E6%9E%90/"/>
    <id>http://yoursite.com/2018/08/14/VPN技术浅析/</id>
    <published>2018-08-14T12:48:07.000Z</published>
    <updated>2018-08-18T03:56:20.738Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>VPN（Virtual Private Network）即“虚拟专用网络”，是企业网在因特网(或其他公共网络)上的扩展，VPN在因特网上开辟一条安全的隧道，以保证两个端点（或两个局域网）之间的安全通信。本文对网络边界安全技术-VPN进行简要分析与总结<br><a id="more"></a></p></blockquote><hr><h2 id="0x01-VPN概述"><a href="#0x01-VPN概述" class="headerlink" title="0x01 VPN概述"></a>0x01 VPN概述</h2><h3 id="1-功能和原理"><a href="#1-功能和原理" class="headerlink" title="1. 功能和原理"></a>1. 功能和原理</h3><p><strong>(1) VPN 功能</strong></p><p>将因特网虚拟成路由器，将物理位置分散的局域网和主机<strong>虚拟</strong>成一个统一的虚拟企业网。VPN综合利用了隧道技术、加密技术、鉴别技术和密钥管理等技术，在公共网络之上建立一个虚拟的安全通道，实现两个网络或两台主机之间的安全连接</p><p><strong>(2) VPN 典型模式</strong></p><ol><li>远程用户访问企业内网</li></ol><p><img src="http://pcdbq4c2i.bkt.clouddn.com/VPN%E6%A8%A1%E5%BC%8F%E4%B8%80.png" alt=""></p><ol start="2"><li>企业分支机构之间的局域网互联</li></ol><p><img src="http://pcdbq4c2i.bkt.clouddn.com/VPN%E6%A8%A1%E5%BC%8F%E4%BA%8C.png" alt=""></p><h3 id="2-VPN-分类"><a href="#2-VPN-分类" class="headerlink" title="2. VPN 分类"></a>2. VPN 分类</h3><p><strong>(1) 从应用角度分类</strong></p><p><strong>1 远程访问 VPN</strong></p><p>它是为企业员工从外地访问企业内网而提供的VPN解决方案，当公司的员工出差到外地需要访问企业内网的机密信息时，为了避免信息传输过程中的泄密，他们的主机首先以VPN客户端的方式连接到企业的远程访问VPN服务器，此后远程主机到内网主机的通信将加密，从而保证了通信的安全性</p><p><strong>2 网关—网关 VPN</strong></p><p>通过不安全的因特网实现两个或多个局域网的安全互联。在每个局域网的出口处设置VPN服务器，当局域网之间需要交换信息时，两个VPN服务器之间建立一条安全的隧道，保证其中的通信安全。这种方式适合企业各分支机构、商业合作伙伴之间的网络互联</p><p><strong>(2) 按隧道协议分类</strong></p><p><strong>隧道协议（Tunneling Protocol）</strong>是一个网络协议的载体。使用隧道的原因是在不兼容的网络上传输数据，或在不安全网络上提供一个安全路径。隧道协议可能使用<strong>数据加密</strong>技术来保护所传输的数据</p><p><strong>1 第2层隧道协议</strong></p><p>主要包括点到点隧道协议(<strong>PPTP</strong>)、第二层转发协议(<strong>L2F</strong>)、第2层隧道协议(<strong>L2TP</strong>)。主要用于实现远程访问VPN</p><p><strong>2 第3层隧道协议</strong></p><p>主要是IP安全(<strong>IPSec</strong>)，用于在<strong>网络层</strong>实现数据包的安全封装。IPSec主要用于实现网关—网关VPN，也可以实现主机—主机的安全连接</p><p><strong>3 第4层隧道协议(SSL)</strong></p><p>在<strong>传输层</strong>上实现数据的安全封装，主要用于保护两台主机的两个进程间的安全通信。安全的Web、安全的电子邮件等均使用了第4层隧道协议</p><p><strong>4 基于第2、3层隧道协议</strong></p><p>也称为2.5层隧道协议，是利用<strong>MPLS路由器</strong>的标签特性实现的VPN</p><p><img src="http://pcdbq4c2i.bkt.clouddn.com/%E9%9A%A7%E9%81%93%E5%8D%8F%E8%AE%AE.png" alt=""></p><hr><h2 id="0x02-PPTP-L2TP-VPN"><a href="#0x02-PPTP-L2TP-VPN" class="headerlink" title="0x02 PPTP/L2TP VPN"></a>0x02 PPTP/L2TP VPN</h2><h3 id="1-PPTP协议"><a href="#1-PPTP协议" class="headerlink" title="1. PPTP协议"></a>1. PPTP协议</h3><p>(1) 点对点隧道协议（Point to Point Tunneling Protocol ，缩写为 PPTP ）是实现虚拟专用网（VPN）的方式之一</p><p>(2) PPTP使用传输控制协议（TCP）创建控制通道来传送控制命令，以及利用通用路由封装（GRE）通道来封装点对点协议（PPP）数据包以传送数据</p><p>(3) PPTP的协议规范本身并未描述加密或身份验证的部份，它依靠点对点协议（PPP）来实现这些安全性功能</p><p>(4) PPTP以通用路由封装（GRE）协议向对方作一般的点对点传输。通过TCP 1723端口来发起和管理GRE状态</p><h3 id="2-PPTP帧的封装格式"><a href="#2-PPTP帧的封装格式" class="headerlink" title="2. PPTP帧的封装格式"></a>2. PPTP帧的封装格式</h3><p><img src="http://pcdbq4c2i.bkt.clouddn.com/PPTP%E6%A0%BC%E5%BC%8F.png" alt=""></p><h3 id="3-L2TP-VPN"><a href="#3-L2TP-VPN" class="headerlink" title="3.  L2TP VPN"></a>3.  L2TP VPN</h3><p>(1) 第二层隧道协议（ Layer Two Tunneling Protocol，缩写为L2TP) 是一种由RFC 2661定义的数据链路层隧道协议，是一种虚拟隧道协议，通常用于虚拟专用网络</p><p>(2) L2TP协议自身不提供加密与可靠性验证的功能，可以和安全协议搭配使用，从而实现数据的加密传输。经常与L2TP协议搭配的加密协议是IPsec，当这两个协议搭配使用时，通常合称L2TP/IPsec</p><p>(3) L2TP支持包括IP、ATM、帧中继、X.25在内的多种网络。在IP网络中，L2TP协议使用了UDP 1701端口</p><hr><h2 id="0x03-IPSec-VPN"><a href="#0x03-IPSec-VPN" class="headerlink" title="0x03 IPSec VPN"></a>0x03 IPSec VPN</h2><h3 id="1-IPSec-概述"><a href="#1-IPSec-概述" class="headerlink" title="1. IPSec 概述"></a>1. IPSec 概述</h3><p>(1) 互联网安全协议（Internet Protocol Security，缩写为 IPsec），是通过对IP协议（互联网协议）的分组进行加密和认证来保护IP协议的网络传输协议族</p><p>(2) IPsec协议工作在OSI 模型的第三层（网络层或TCP/IP模型的IP层），使其在单独使用时适于保护基于TCP或UDP的协议。与传输层或更高层的协议相比，IPsec协议必须处理可靠性和分片的问题，这同时也增加了它的复杂性和处理开销</p><h3 id="2-IPSec-组成"><a href="#2-IPSec-组成" class="headerlink" title="2. IPSec 组成"></a>2. IPSec 组成</h3><p>IPSec是一个开放的标准，由一序列的协议组成，其中最重要的协议有三个 ：认证头 <strong>AH</strong>(Authentication Headers)、封装安全有效载荷<strong>ESP</strong>(Encapsulating Security Payloads)和安全联盟<strong>SA</strong>(Security Associations)</p><p><strong>(1) 认证头AH (Authentication Headers)</strong></p><p>AH为IP数据报实现无连接的完整性和数据源认证功能，并能抵抗重放攻击</p><p><strong>(2) 封装安全有效载荷ESP(EncapsulatingSecurity Payloads)</strong></p><p>ESP实现保密性、数据源认证、无连接的完整性、抵抗重放攻击的服务(一种形式的部分序列完整性)和有限的网络流的保密性</p><p><strong>(3) 安全联盟SA (Security Associations)</strong></p><p>SA给出算法和数据的集合，以向AH或ESP的操作提供必须的参数。安全联盟和密钥管理协议ISAKMP(Internet Security Association and Key ManagementProtocol)提供了认证和密钥交换的框架</p><h3 id="3-IPSec工作模式"><a href="#3-IPSec工作模式" class="headerlink" title="3. IPSec工作模式"></a>3. IPSec工作模式</h3><p><strong>(1) 传输模式：</strong>用于两台主机之间的连接，在IP层封装主机—主机的分组</p><p><strong>(2) 隧道模式：</strong>用于两个网关之间的连接，在IP层封装网关—网关的分组，可穿过公共网络（如Internet）实现局域网之间的互联</p><h3 id="4-认证协议AH"><a href="#4-认证协议AH" class="headerlink" title="4. 认证协议AH"></a>4. 认证协议AH</h3><p><strong>(1) 概述</strong></p><ol><li><p>IP认证头AH（IP Authentication Header）定义在RFC4302中，实现IP数据报的认证、完整性和抗重放攻击</p></li><li><p>AH数据报直接封装在IP数据报中，如果IP数据包的协议字段为51，表明IP头之后是一个AH头</p></li><li><p>AH和ESP同时保护数据时，在顺序上，AH头在ESP头之后</p></li></ol><p><strong>(2) AH 传输模式</strong></p><p><img src="http://pcdbq4c2i.bkt.clouddn.com/AH%E4%BC%A0%E8%BE%93.png" alt=""></p><p><strong>(3) AH 隧道模式</strong></p><p><img src="http://pcdbq4c2i.bkt.clouddn.com/AH%E9%9A%A7%E9%81%93.png" alt=""></p><p><strong>(4) AH 头格式</strong></p><p><img src="http://pcdbq4c2i.bkt.clouddn.com/AH%E5%A4%B4%E6%A0%BC%E5%BC%8F.png" alt=""></p><pre><code>1. 下一个头(Next Header)：8-bits，标识AH头后的载荷（协议）类型。在传输模式下可为6(TCP)或17 (UDP);在隧道模式下将是4(IPv4)或41(IPv6)2. 载荷长度(Payload Length)：8-bits，表示AH头本身的长度，以32-bits为单位3. 保留(Reserved)：16-bits，保留字段，未使用时必须设为04. 安全参数索引SPI(Security Parameters Index)：32-bits，接收方用于标识对应的安全关联(SA)5. 序列号(Sequence Number)：32-bits，是一个单向递增的计数器，提供抗重播功能（anti-replay）6. 完整性验证数据ICV（Integrity Check Value）：这是一个可变长度（必须是32比特的整数倍）的域，长度由具体的验证算法决定。完整性验证数据ICV验证IP数据包的完整性，因此ICV的计算包含了整个IP数据包</code></pre><h3 id="5-封装安全载荷ESP"><a href="#5-封装安全载荷ESP" class="headerlink" title="5. 封装安全载荷ESP"></a>5. 封装安全载荷ESP</h3><p><strong>(1) 概述</strong></p><ol><li><p>IP封装安全载荷ESP （IP Encapsulating SecurityPayload）定义在RFC 4303中，实现IP数据报的认证、完整性、抗重放攻击和加密</p></li><li><p>与AH协议一样，ESP的数据报也直接封装在IP数据报中，如果IP数据包的协议字段为50，表明IP头之后是一个ESP数据报。ESP数据报由四部分组成，分别是：头部、加密数据（包括ESP尾）和ESP验证数据</p></li></ol><p><strong>(2) 传输模式 ESP</strong></p><p><img src="http://pcdbq4c2i.bkt.clouddn.com/%E4%BC%A0%E8%BE%93ESP.png" alt=""></p><p><strong>(3) 隧道模式 ESP</strong></p><p><img src="http://pcdbq4c2i.bkt.clouddn.com/%E9%9A%A7%E9%81%93ESP.png" alt=""></p><p><strong>(4) ESP 数据报格式</strong></p><p><img src="http://pcdbq4c2i.bkt.clouddn.com/ESP%E6%95%B0%E6%8D%AE%E6%8A%A5.png" alt=""></p><pre><code>1. 安全参数索引SPI(32-bits)：在IKE交换过中由目标主机选定，与IP头之前的目标地址以及协议结合在一起，用来标识用于处理数据包的特定的那个安全关联。SPI经过验证，但并未加密2. 序列号(32-bits)：它是一个唯一的单向递增的计数器，与AH类似，提供抵抗重播攻击的能力3. 填充项(0～255 bytes)：由具体的加密算法决定4. 填充长度(8-bits)：接收端可以据此恢复载荷数据的真实长度5. 下一头部(8-bits)：标识受ESP保护的载荷的（协议）类型。在传输模式下拷贝自原IP数据报头中的协议值；在隧道模式下可为4(IPv4)或41 (IPv6)6. 验证数据(完整性校验值ICV)：一个经过密钥处理的散列值，验证范围包括ESP头部、被保护的数据以及ESP尾部。其长度与具体的验证算法有关，但必须是32bits的整数倍</code></pre><h3 id="6-安全关联与安全策略"><a href="#6-安全关联与安全策略" class="headerlink" title="6. 安全关联与安全策略"></a>6. 安全关联与安全策略</h3><p><strong>(1) 安全关联与安全关联数据库</strong></p><ol><li><p>安全关联(SA) 是两个通信实体协商建立起来的一种安全协定</p></li><li><p>SA是通过IKE密钥管理协议在通信双方之间来协商的，协商完成后，通信双方都会在它们的安全关联数据库( SAD)中存储该SA参数</p></li></ol><p><strong>(2) 安全关联确定参数</strong></p><ol><li><p><strong>安全参数索引号(SPI)</strong>：一个与SA相关的位串，由AH和ESP携带，使得接收方能选择合适的SA处理数据包</p></li><li><p><strong>IP目的地址</strong>：目前只允许使用单一地址，表示SA的目的地址</p></li><li><p><strong>安全协议标识</strong>：标识该SA是AH安全关联或ESP安全关联</p></li></ol><p><strong>(3) SA 其他参数</strong></p><pre><code>1. 序列号计数器：一个32位的值，用于生成AH或ESP头中的序号字段，在数据包的“外出”处理时使用2. 序列号溢出：用于输出包处理，并在序列号溢出的时候加以设置，安全策略决定了一个SA是否仍可用来处理其余的包3. 抗重放窗口：用于确定一个入栈的AH或ESP包是否是重放4. AH信息：AH认证算法、密钥、密钥生存期和其他AH的相关参数5. ESP信息：ESP认证和加密算法、密钥、初始值、密钥生存期和其他ESP的相关参数6. SA的生存期：一个SA最长能存在的时间。到时间后，一个SA必须用一个新的 SA替换或终止7. IPSec协议模式：隧道、传输、通配符（隧道模式、传输模式均可）8. 路径MTU：在隧道模式下使用IPSec时，必须维持正确的PMTU信息，以便对这个数据包进行相应的分段</code></pre><p><strong>(4) 安全策略和安全策略数据库SPD</strong></p><ol><li><p>安全策略决定了为一个数据包提供的安全服务，它保存在安全策略数据库SPD中。SPD中的每一个安全策略条目由一组IP和上层协议字段值组成，即下面提到的选择符</p></li><li><p>安全策略数据库(SPD)记录了对IP数据流（根据源IP、目的IP、上层协议以及流入还是流出）采取的安全策略。每一安全策略条目可能对应零条或多条SA条目，通过使用一个或多个选择符来确定某一个SA条目</p></li></ol><p><strong>(5) IPSec允许的选择符</strong></p><pre><code>1. 目的IP地址：可以是主机地址、地址范围或者通配符2. 源IP地址：可以是主机地址、地址范围或者通配符3. 源/目的端口4. 用户ID：操作系统中的用户标识5. 数据敏感级别6. 传输层协议7. IPSec协议(AH，ESP，AH/ESP)8. 服务类型(TOS)</code></pre><hr><h2 id="0XFF-参考资源"><a href="#0XFF-参考资源" class="headerlink" title="0XFF 参考资源"></a>0XFF 参考资源</h2><ul><li><p><a href="https://en.wikipedia.org/wiki/Virtual_private_network" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Virtual_private_network</a></p></li><li><p><a href="https://baike.baidu.com/item/%E8%99%9A%E6%8B%9F%E4%B8%93%E7%94%A8%E7%BD%91%E7%BB%9C/8747869?fromtitle=VPN%E6%8A%80%E6%9C%AF&amp;fromid=1897662" target="_blank" rel="noopener">https://baike.baidu.com/item/Virtual_private_network</a></p></li><li><p><a href="http://staff.ustc.edu.cn/~billzeng/ns/ns04.pdf" target="_blank" rel="noopener">http://staff.ustc.edu.cn/~billzeng/ns/ns04.pdf</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;VPN（Virtual Private Network）即“虚拟专用网络”，是企业网在因特网(或其他公共网络)上的扩展，VPN在因特网上开辟一条安全的隧道，以保证两个端点（或两个局域网）之间的安全通信。本文对网络边界安全技术-VPN进行简要分析与总结&lt;br&gt;
    
    </summary>
    
      <category term="0x02 安全技术" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="VPN" scheme="http://yoursite.com/tags/VPN/"/>
    
      <category term="IPSec" scheme="http://yoursite.com/tags/IPSec/"/>
    
  </entry>
  
  <entry>
    <title>Firewall技术浅析</title>
    <link href="http://yoursite.com/2018/08/13/Firewall%E6%8A%80%E6%9C%AF%E6%B5%85%E6%9E%90/"/>
    <id>http://yoursite.com/2018/08/13/Firewall技术浅析/</id>
    <published>2018-08-13T10:16:00.000Z</published>
    <updated>2018-08-21T11:41:03.502Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>防火墙(firewall)是一种保护计算机网络安全的技术性措施，它通过在网络边界上建立相应的网络通信监控系统来隔离内部和外部网络，以阻挡来自外部的网络入侵。本文对防火墙技术及其发展进行简要分析与总结</p></blockquote><a id="more"></a><hr><h2 id="0x01-概述"><a href="#0x01-概述" class="headerlink" title="0x01 概述"></a>0x01 概述</h2><p><strong>(1) 定义</strong></p><p>防火墙是位于两个(或多个)网络之间执行<strong>访问控制</strong>的软件和硬件系统，它根据访问控制规则对进出网络的数据流进行<strong>过滤</strong></p><p><strong>(2) 示意图</strong></p><p><img src="http://pdeise3e3.bkt.clouddn.com/%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt=""></p><p>防火墙在逻辑上是一个<strong>分离器</strong>，一个<strong>限制器</strong>，也是一个<strong>分析器</strong>。它有效地监控了内部网和外部网之间的任何网络活动，保证了内部网络的安全</p><p><strong>(3) 数据流处理方式</strong></p><ol><li><p>允许数据流通过</p></li><li><p>拒绝数据流通过：通知发送方</p></li><li><p>将这些数据流丢弃：不通知发送方</p></li></ol><p><strong>(4) firewall 实质</strong></p><p>防火墙就是一种能够<strong>限制网络访问</strong>的设备或软件，许多<strong>网络设备</strong>均含有简单的防火墙功能，如路由器、调制解调器、无线基站、IP交换机等；现代<strong>操作系统</strong>中也含有软件防火墙：Windows 系统和Linux系统均自带了软件防火墙，可以通过策略(或规则)定制相关的功能</p><hr><h2 id="0x02-功能及分类"><a href="#0x02-功能及分类" class="headerlink" title="0x02 功能及分类"></a>0x02 功能及分类</h2><h3 id="1-firewall-功能"><a href="#1-firewall-功能" class="headerlink" title="1. firewall 功能"></a>1. firewall 功能</h3><p><strong>(1) 过滤进、出网络的数据</strong></p><p>检查所有进、出数据的细节，并根据事先定义好的策略允许或禁止这些数据进行通信</p><p><strong>(2) 管理进、出网络的访问行为</strong></p><p>通过将动态的、应用层的过滤能力和认证相结合，实现WWW、FTP和Telnet等广泛的服务的安全支持</p><p><strong>(3) 封堵某些禁止的业务</strong></p><p>禁止存在安全脆弱性的服务进出网络</p><p><strong>(4) 记录通过防火墙的信息内容和活动</strong></p><p>审计并记录所有通过防火墙的重要信息，以发现试图的入侵行为</p><p><strong>(5) 对网络攻击的检测和告警</strong></p><h3 id="2-fierwall-分类"><a href="#2-fierwall-分类" class="headerlink" title="2. fierwall 分类"></a>2. fierwall 分类</h3><p><strong>(1) 按发展历史分类</strong></p><p><img src="http://pdeise3e3.bkt.clouddn.com/%E9%98%B2%E7%81%AB%E5%A2%99%E5%8F%91%E5%B1%95.png" alt=""></p><p><strong>(2) 根据网络协议栈中的过滤层次</strong></p><ol><li><p>包过滤防火墙</p></li><li><p>电路级网关防火墙</p></li><li><p>应用级网关防火墙</p></li></ol><p><img src="http://pdeise3e3.bkt.clouddn.com/%E5%85%B3%E7%B3%BB.png" alt=""></p><p>防火墙工作于OSI模型的<strong>层次越高</strong>，其检查数据包中的<strong>信息就越多</strong>，防火墙所消耗的处理器<strong>工作周期就越长</strong>；防火墙检查的数据包<strong>越靠近OSI模型的上层</strong>，该防火墙结构所提供的<strong>安全保护等级就越高</strong></p><hr><h2 id="0x03-包过滤防火墙"><a href="#0x03-包过滤防火墙" class="headerlink" title="0x03 包过滤防火墙"></a>0x03 包过滤防火墙</h2><h3 id="1-静态包过滤防火墙"><a href="#1-静态包过滤防火墙" class="headerlink" title="1. 静态包过滤防火墙"></a>1. 静态包过滤防火墙</h3><p>静态包过滤防火墙可以采用<strong>路由器上的过滤模块</strong>来实现</p><p><strong>(1) 工作原理</strong></p><p>采用一组<strong>过滤规则</strong>对每个数据包进行<strong>检查</strong>，然后根据检查结果确定是<strong>转发</strong>还是<strong>丢弃</strong>该数据包</p><p><strong>(2) 包过滤处理过程</strong></p><ol><li><p><strong>接收</strong>每个到达的数据包</p></li><li><p>对数据包<strong>采用过滤规则</strong>，对数据包的IP头和传输字段内容进行<strong>检查</strong>。如果数据包的头信息与一组规则匹配，则根据该规则确定是转发还是丢弃该数据包</p></li><li><p>如果没有规则与数据包头信息匹配，则对数据包施加<strong>默认规则</strong> (通常，防火墙首先默认丢弃所有数据包，然后再逐个执行过滤规则，以加强对数据包的过滤)</p></li></ol><p><strong>(3) 网络位置</strong></p><p><img src="http://pdeise3e3.bkt.clouddn.com/%E9%9D%99%E6%80%81.png" alt=""></p><ol><li><p>静态数据包过滤发生在<strong>网络层</strong>上，也就是OSI模型的第三层上</p></li><li><p>决定接收还是拒绝一个数据包，取决于对数据包中IP头和协议头等<strong>特定域的检查和判定</strong>。这些特定域包括：①源地址；②目的地址；③应用或协议；④源端口号；⑤目的端口号</p></li></ol><p><strong>(4) ACL (访问控制表单)</strong></p><p>在每个包过滤器上，安全管理员要根据企业的安全策略定义一个表单；该规则库包含许多规则，用来指示防火墙应该拒绝还是接收该数据包。在向前转发某个数据包之前，包过滤器防火墙将IP头和TCP头中的<strong>特定域</strong>与规则库中的<strong>规则</strong>逐条进行<strong>比较</strong>。防火墙按照一定的次序<strong>扫描规则库</strong>，直到包过滤器发现一个特定域满足包过滤规则的<strong>特定要求</strong>时，才对数据包做出“接收”或“丢弃”的判决。如果包过滤器<strong>没有发现</strong>有一个规则与该数据包匹配，那么它将对其施加一个<strong>默认规则</strong>。该默认规则在防火墙的规则库中有明确的定义，一般情况下防火墙将不满足规则的数据包丢弃</p><p><strong>(5) 安全性分析</strong></p><p>决定<strong>包过滤规则的先后次序</strong>是一项很<strong>困难</strong>的事情，包过滤器仅检查数据的IP头和TCP头，它<strong>不能区分真实的IP地址和伪造的IP地址</strong>，若一个伪造的 IP地址满足包过滤规则，并同时满足其他规则的要求，则该数据包将被允许通过</p><p><strong>(6) 优缺点</strong></p><p><strong>优点</strong></p><ol><li><p>对网络性能的影响较小 (只是简单地根据地址、协议和端口进行访问控制)</p></li><li><p>成本较低 (路由器通常集成了简单包过滤的功能)</p></li></ol><p><strong>缺点</strong></p><ol><li><p>安全性较低 （包过滤防火墙仅工作于网络层，不能对数据包进行更高层的分析和过滤）</p></li><li><p>缺少状态感知能力 (一些需要动态分配端口的服务需要防火墙打开许多端口，增大了网络的安全风险)</p></li><li><p>容易遭受IP欺骗攻击 (简单的包过滤功能没有对协议的细节进行分析，可能遭受IP欺骗攻击)</p></li><li><p>创建访问控制规则比较困难 (须严格区分访问控制规则的先后次序)</p></li></ol><h3 id="2-动态包过滤防火墙"><a href="#2-动态包过滤防火墙" class="headerlink" title="2. 动态包过滤防火墙"></a>2. 动态包过滤防火墙</h3><p>动态包过滤器是最<strong>普遍使用</strong>的一种防火墙技术，既具有很高的<strong>安全性</strong>，又具有完全的<strong>透明性</strong>,可根据网络当前的状态检查数据包，即根据当前所交换的信息<strong>动态调整</strong>过滤规则表</p><p><strong>(1) 工作原理</strong></p><ol><li><p>动态(状态)包过滤器是在静态包过滤防火墙的基础上发展而来，它具有<strong>“状态感知”</strong>的能力</p></li><li><p><strong>典型</strong>的动态包过滤防火墙工作在<strong>网络层</strong>，，更<strong>先进</strong>的动态包过滤防火墙可以在OSI的<strong>传输层</strong>(第四层)上工作，可以收集更多的状态信息，从而增加过滤的深度</p></li><li><p>如果数据包满足规则，如数据包的端口号或IP地址是可接受的，则被允许通过。但与普通的包过滤防火墙相比，还有一个不同点：它首先对外出的<strong>数据包身份进行记录</strong>，此后若有相同连接的数据包进入防火墙，它就直接允许这些数据包通过</p></li><li><p>动态包过滤防火墙直接<strong>对“连接”进行处理</strong>，而不是仅对数据包头信息进行检查，可以用来处理UDP和TCP协议</p></li><li><p>动态包过滤防火墙需要对已建连接和规则表进行<strong>动态维护</strong>，因此它是动态的和有状态的</p></li><li><p>典型的动态包过滤防火墙能够感觉到新建连接与已建连接之间的差别。一旦连接建立，它就会将该连接的状态记于RAM中的一个表单中，后续的数据包与RAM表单中的状态信息进行比较</p></li></ol><p><img src="http://pdeise3e3.bkt.clouddn.com/%E5%8A%A8%E6%80%81.png" alt=""></p><p><strong>(2) 优缺点归纳</strong></p><p><strong>动态包过滤防火墙的优点</strong></p><ol><li><p>动态包过滤防火墙的安全性优于静态包过滤防火墙</p></li><li><p>动态包过滤防火墙的“状态感知”能力也使其性能得到了显著提高</p></li><li><p>如果不考虑所采用的操作系统的成本，动态包过滤防火墙的成本也很低</p></li></ol><p><strong>动态包过滤防火墙的缺点</strong></p><ol><li><p>由于没有对数据包的净荷部分进行过滤，因此仍然只具有较低的安全性</p></li><li><p>工作在网络层，仅检查IP头和TCP头，容易遭受伪装IP地址欺骗攻击</p></li><li><p>难于创建规则，管理员创建规则时必须要考虑规则的先后次序</p></li><li><p>动态包过滤防火墙无法抵抗半开连接攻击，在连接建立时仅使用两次握手，可导致在DoS/DDoS攻击时因耗尽所有资源而停止响应</p></li></ol><hr><h2 id="0x04-电路级网关"><a href="#0x04-电路级网关" class="headerlink" title="0x04 电路级网关"></a>0x04 电路级网关</h2><h3 id="1-工作原理"><a href="#1-工作原理" class="headerlink" title="1. 工作原理"></a>1. 工作原理</h3><p><img src="http://pdeise3e3.bkt.clouddn.com/%E7%94%B5%E8%B7%AF%E7%BA%A7.png" alt=""></p><ol><li><p>电路级网关又称做线路级网关，当两个主机首次建立TCP连接时，电路级网关在两个主机之间建立一道屏障，电路级网关的作用就好像一台中继计算机，用来在两个连接之间来回地复制数据，也可以记录或缓存数据</p></li><li><p>采用C/S结构，网关充当了服务器的角色，而内部网络中的主机充当了客户机的角色。当一个客户机希望连接到某个目标服务器时，它首先要连接到中继主机上；然后，中继主机再连接到目标服务器上。对目标服务器来说，该客户机的名称和IP地址是不可见的</p></li><li><p>当有来自Internet的请求进入时，它作为服务器接收外来请求，并转发请求；当有内部主机请求访问Internet时，它则担当代理服务器的角色。它监视两主机建立连接时的握手信息，如Syn、Ack和序列号等是否合乎逻辑，判定该会话请求是否合法。在有效会话连接建立后，电路级网关仅复制、传递数据，而不进行过滤</p></li></ol><h3 id="2-网络位置"><a href="#2-网络位置" class="headerlink" title="2. 网络位置"></a>2. 网络位置</h3><p><img src="http://pdeise3e3.bkt.clouddn.com/%E7%94%B5%E8%B7%AF%E7%BA%A7%E4%BD%8D%E7%BD%AE.png" alt=""></p><ol><li><p>电路级网关工作于会话层，即OSI模型的第五层</p></li><li><p>电路级网关是包过滤防火墙的一种扩展，它除了进行基本的包过滤检查之外，还要增加对连接建立过程中的握手信息及序列号合法性的验证</p></li><li><p>在打开一条通过防火墙的连接或电路之前，电路级网关要检查和确认TCP及UDP协议会话。因此，电路级网关所检查的数据比静态包过滤防火墙或动态包过滤防火墙所检查的数据更多，安全性也更高</p></li><li><p>判断是接收还是丢弃一个数据包，取决于对数据包的IP头和TCP头的检查。电路级网关检查的数据包括：①源地址；②目的地址；③应用或协议；④源端口号；⑤目的端口号；⑥握手信息及序列号</p></li><li><p>与包过滤防火墙类似，电路级网关在转发一数据包之前，首先将数据包的IP头和 TCP头与由管理员定义的规则表相比较，以确定防火墙是将数据包丢弃还是让数据包通过。在可信客户机与不可信主机之间进行TCP握手通信时，仅当SYN标志、ACK标志及序列号符合逻辑时，电路级网关才判定该会话是合法的</p></li><li><p>如果会话是合法的，包过滤器就开始对规则进行逐条扫描，直到发现其中一条规则与数据包中的有关信息一致。如果包过滤器没有发现适合该数据包的规则，它就会对该数据包施加一条默认规则。在防火墙的规则表中，这条默认规则有明确的定义，通常是指示防火墙将不满足规则的数据包丢弃</p></li></ol><h3 id="3-安全性分析"><a href="#3-安全性分析" class="headerlink" title="3. 安全性分析"></a>3. 安全性分析</h3><ol><li><p>电路级网关它与包过滤防火墙一样，工作于OSI模型的低层上，对网络性能的影响较小</p></li><li><p>一旦电路级网关建立一个连接，任何应用均可以通过该连接运行，电路级网关不能对可信网络与不可信网络之间中继的数据包内容进行检查</p></li></ol><h3 id="4-优缺点归纳"><a href="#4-优缺点归纳" class="headerlink" title="4. 优缺点归纳"></a>4. 优缺点归纳</h3><p><strong>电路级网关优点</strong></p><p>(1) 对网络性能有一定程度的影响</p><p>(2) 切断了外部网络到防火墙后的服务器直接连接</p><p>(3)  比静态或动态包过滤防火墙具有更高的安全性</p><p><strong>电路级网关缺点</strong></p><p>(1) 不能对数据净荷进行检测，无法抵御应用层的攻击等</p><p>(2) 在设计理论上存在局限性，工作层次决定了它无法提供最高的安全性</p><p>(3) 当增加新的内部程序或资源时，往往需要对许多电路级网关的代码进行修改</p><hr><h2 id="0x05-应用级别网关"><a href="#0x05-应用级别网关" class="headerlink" title="0x05 应用级别网关"></a>0x05 应用级别网关</h2><h3 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h3><p>应用级网关则只能对<strong>特定服务的数据流</strong>进行过滤；应用级网关必须为特定的应用服务编写特定的代理程序，这些程序被称为<strong>“服务代理”</strong>，在网关内部分别扮演客户机代理和服务器代理的角色，当各种类型的应用服务通过网关时，它们必须经过客户机代理和服务器代理的过滤</p><h3 id="2-逻辑结构"><a href="#2-逻辑结构" class="headerlink" title="2. 逻辑结构"></a>2. 逻辑结构</h3><p><img src="http://pdeise3e3.bkt.clouddn.com/%E5%BA%94%E7%94%A8%E9%80%BB%E8%BE%91.png" alt=""></p><h3 id="3-工作原理"><a href="#3-工作原理" class="headerlink" title="3. 工作原理"></a>3. 工作原理</h3><p>与电路级网关一样，应用级网关截获进出网络的数据包，运行代理程序来回复制和传递通过网关的信息，起着<strong>代理服务器</strong>的作用。它可以避免内网中的可信服务器或客户机与外网中某个不可信主机之间的直接连接</p><p><strong>二者区别</strong></p><p>(1) 代理是<strong>针对应用</strong>的</p><p>(2) 代理对<strong>整个数据包</strong>进行检查，因此能在OSI模型的应用层上对数据包进行过滤</p><p><strong>工作层次</strong></p><p><img src="http://pcdbq4c2i.bkt.clouddn.com/%E5%BA%94%E7%94%A8%E5%B1%82%E6%AC%A1.png" alt=""></p><p>(1) 应用级网关必须针对每个<strong>特定的服务</strong>运行一个特定的代理，它只能对特定服务所生成的数据包进行传递和过滤，如，HTTP代理只能复制、传递和过滤HTTP业务流</p><p>(2) 如果一个网络使用了应用级网关防火墙，而且网关上没有运行某些应用服务的代理，那么这些服务的数据包都不能进出网络。例如，如果应用级网关防火墙上运行了FTP和HTTP代理，那么只有这两种服务的数据包才能通过防火墙，所有其他服务的数据包均被禁止 </p><p>(3) 应用级网关防火墙上运行的代理程序对数据包进行<strong>逐个检查和过滤</strong>，而不是简单地复制数据让数据包轻易地通过网关</p><p>(4) 特定的应用代理检查通过网关的每个数据包，在OSI模型的应用层上验证数据包内容。这些代理可以对应用协议中的特定信息或命令进行过滤，这就是所谓的<strong>关键词过滤或命令字过滤</strong></p><p>(5) 应用级网关防火墙所采用的技术叫做<strong>“强应用代理”</strong>。强应用代理不是对用户的整个数据包进行复制，而是在防火墙内部创建一个全新的空数据包。强应用代理将那些可接收的命令或数据，从防火墙外部的原始数据报中复制到防火墙内新创建的数据包中。然后，强应用代理将此新数据包发送给防火墙后面受保护的服务器</p><p>(6) 由于应用级网关防火墙对<strong>整个数据包</strong>进行检查，因此它是当前已有的最安全的防火墙结构之一。但是它有一个固有的缺点，那就是<strong>缺乏透明性</strong>，此外，缺乏对新应用、新协议的支持</p><h3 id="4-安全性讨论"><a href="#4-安全性讨论" class="headerlink" title="4. 安全性讨论"></a>4. 安全性讨论</h3><p><strong>应用级网关的优点</strong></p><p>(1) 在已有的安全模型中<strong>安全性较高</strong> (可以对<strong>服务</strong>(如HTTP、FTP等)的命令字过滤，也可以实现<strong>内容过滤</strong>，甚至可以进行<strong>病毒的过滤</strong>)</p><p>(2) 具有<strong>强大的认证功能</strong>。由于应用级网关在<strong>应用层实现认证</strong>，因此它可以实现的认证方式比电路级网关要丰富得多</p><p>(3) 具有超强的<strong>日志功能</strong>。<strong>包过滤防火墙</strong>的日志仅能记录<strong>时间、地址、协议、端口</strong>，而应用级网关的日志要明确得多。(例如，应用级网关可以记录用户通过HTTP访问了哪些网站页面、通过FTP上传或下载了什么文件、通过SMTP给谁发送了邮件，甚至邮件的主题、附件等信息，都可以作为日志的内容)</p><p>(4) 应用级网关防火墙的<strong>规则配置比较简单</strong>。关注的重点是应用服务，而不必像配置包过滤防火墙还要考虑规则顺序的问题</p><p><strong>应用级网关的缺点</strong></p><p>(1) 灵活性很差，对每一种应用都需要设置一个代理</p><p>(2) 配置烦琐，增加了管理员的工作量</p><p>(3) 性能不高,一旦超负荷，就有可能发生停机,从而导致整个网络中断</p><hr><h2 id="0x06-状态检测防火墙"><a href="#0x06-状态检测防火墙" class="headerlink" title="0x06 状态检测防火墙"></a>0x06 状态检测防火墙</h2><h3 id="1-概述-1"><a href="#1-概述-1" class="headerlink" title="1. 概述"></a>1. 概述</h3><p>状态检测技术是防火墙近几年才应用的新技术，状态检测技术采用的是一种<strong>基于连接的状态检测机制</strong>，将属于同一连接的所有包作为一个数据流的整体看待，构成连接状态表，通过<strong>规则表</strong>与<strong>状态表</strong>的共同配合，对表中的各个连接状态因素加以识别。这里动态连接状态表中的记录可以是<strong>以前的通信信息</strong>，也可以是其他相关<strong>应用程序的信息</strong></p><h3 id="2-工作原理"><a href="#2-工作原理" class="headerlink" title="2. 工作原理"></a>2. 工作原理</h3><p>先进的状态检测防火墙读取、分析和利用了全面的<strong>网络通信信息和状态</strong></p><p><strong>(1) 通信信息：即所有7层协议的当前信息</strong> </p><p>防火墙的检测模块位于操作系统的<strong>内核</strong>，在网络层之下，能在数据包到达网关操作系统之前对它们进行分析。防火墙先在<strong>低协议层</strong>上<strong>检查</strong>数据包是否满足企业的安全策略，对于满足的数据包，再从更<strong>高协议层</strong>上进行<strong>分析</strong>)</p><p><strong>(2) 通信状态：即以前的通信信息</strong> </p><p>状态检测防火墙在<strong>状态表</strong>中保存以前的通信信息，<strong>记录</strong>从受保护网络发出的数据包的<strong>状态信息</strong>，如IP请求的服务器地址和端口，然后，防火墙根据该表内容对返回<strong>受保护</strong>网络的数据包进行分析判断，这样，只有响应受保护网络请求的数据包才被放行。对于UDP或RPC等<strong>无连接的协议</strong>，检测模块可<strong>创建虚会话信息</strong>用来进行跟踪</p><p><strong>(3) 应用状态：即其他相关应用的信息</strong> </p><p>状态检测模块能够<strong>理解并学习</strong>各种协议和应用，以支持各种最新的应用，它比代理服务器支持的协议和应用要多得多；并且，它能从应用程序中<strong>收集状态信息</strong>并存入状态表中，以供其他应用或协议做检测策略。例如，已经通过防火墙认证的用户可以通过防火墙访问其他授权的服务</p><p><strong>(4) 操作信息：即在数据包中能执行逻辑运算或数学运算的信息</strong></p><p>状态监测技术采用强大的<strong>面向对象</strong>的方法，基于通信信息、通信状态、应用状态等多方面因素，利用灵活的表达式形式，结合安全规则、应用识别知识、状态关联信息及通信数据，构造更<strong>复杂</strong>的、更<strong>灵活</strong>的、满足用户<strong>特定</strong>安全要求的策略规则</p><h3 id="3-安全性讨论"><a href="#3-安全性讨论" class="headerlink" title="3. 安全性讨论"></a>3. 安全性讨论</h3><p><strong>状态检测防火墙优点</strong></p><p>(1) 具备动态包过滤的所有优点，同时具有更高的安全性</p><p>(2) 没有打破客户/服务器模型</p><p>(3) 提供集成的动态(状态)包过滤功能</p><p>(4) 当以动态包过滤模式运行时，其速度很快</p><p><strong>状态检测防火墙缺陷</strong></p><p>(1) 由于状态检测引擎采用单线程进程，此设计将对防火墙的性能产生很大影响</p><p>(2) 没有打破客户/服务器结构会产生不可接受的安全风险，攻击者可以直接与受保护的服务器建立连接</p><p>(3) 如果实现方案依赖于操作系统的Inetd守护进程，其并发连接数量将受到严重限制，从而不能满足当今网络对高并发连接数量的要求</p><hr><h2 id="0x07-切换代理"><a href="#0x07-切换代理" class="headerlink" title="0x07 切换代理"></a>0x07 切换代理</h2><h3 id="1-工作原理-1"><a href="#1-工作原理-1" class="headerlink" title="1. 工作原理"></a>1. 工作原理</h3><p>切换代理(Cutoff Proxy)实际上是动态(状态)包过滤器和一个电路级代理的结合。切换代理<strong>首先起电路级代理的作用</strong>，以验证RFC建议的三步握手，然后再<strong>切换到动态包过滤</strong>的工作模式下。因此，切换代理首先工作于OSI的会话层，即第5层；当连接完成后，再切换到动态包过滤模式，即工作于OSI的第3层</p><h3 id="2-工作过程"><a href="#2-工作过程" class="headerlink" title="2. 工作过程"></a>2. 工作过程</h3><p><img src="http://pcdbq4c2i.bkt.clouddn.com/%E5%88%87%E6%8D%A2%E4%BB%A3%E7%90%86.png" alt=""></p><h3 id="3-安全性讨论-1"><a href="#3-安全性讨论-1" class="headerlink" title="3. 安全性讨论"></a>3. 安全性讨论</h3><p>(1) 切换代理与传统的电路级代理不同：电路级代理能在连接持续期间打破客户/服务器模式，而切换代理却不能。远端的客户机与防火墙后面受保护的服务器之间仍然能够建立直接的连接</p><p>(2) 如果安全策略规定需要对一些基本的服务进行认证并检查三步握手，而且不需要打破客户/服务器模式，那么切换代理就是一个非常合适的选择。切换代理绝不等同于电路级代理，因为在建立连接之后的通信期间，它并未打破客户/服务器的工作模式</p><h3 id="4-优点与缺陷"><a href="#4-优点与缺陷" class="headerlink" title="4. 优点与缺陷"></a>4. 优点与缺陷</h3><p><strong>切换代理优点</strong></p><p>(1) 与传统的电路级网关相比，它对网络性能造成的影响要小</p><p>(2) 由于对三步握手进行了验证，所以降低了IP欺骗的风险</p><p><strong>切换代理缺陷</strong></p><p>(1) 它不是一个电路级网关</p><p>(2) 仍然具有动态包过滤器遗留的许多缺陷</p><p>(3) 由于没有检查数据包的净荷部分，因此具有较低的安全性</p><p>(4) 难于创建规则(受先后次序的影响)</p><p>(5) 安全性不及传统的电路级网关</p><hr><h2 id="0x08-防火墙体系结构"><a href="#0x08-防火墙体系结构" class="headerlink" title="0x08 防火墙体系结构"></a>0x08 防火墙体系结构</h2><h3 id="1-堡垒主机-Bastion-Host"><a href="#1-堡垒主机-Bastion-Host" class="headerlink" title="1. 堡垒主机(Bastion Host)"></a>1. 堡垒主机(Bastion Host)</h3><p><strong>(1) 概念</strong></p><p>堡垒主机(Bastion Host)是一种配置了较为全面的安全防范措施的网络上的计算机，它为网络间的通信提供了一个<strong>阻塞点</strong>。通常堡垒主机可以用作应用级和电路级网关的<strong>平台</strong>，是一个组织机构网络安全的中心主机</p><p><strong>(2) 特征</strong></p><ol><li><p>堡垒主机硬件平台运行较为安全的操作系统，成为可信任的系统</p></li><li><p>只有网络管理员认为必要的服务才会安装在堡垒主机上。这些服务包含了代理服务，如Telnet，DNS，FTP，SMTP以及用户认证等</p></li><li><p>当允许一个用户访问代理服务时，堡垒主机可能会要求进行额外认证。另外，每一个代理服务都可能需要相应的鉴别机制( Authentication)</p></li><li><p>每一个代理都只能支持标准应用服务命令集中的一个子集</p></li><li><p>每一个代理只允许访问指定主机的通信。这意味着每一个代理通过对所用的网络流量、每一个连接及其持续时间记录日志，保留了详细的审计信息。审计日志对检测和终止入侵者极为重要</p></li><li><p>每一个代理模块都是一个为网络安全设计的一个很小的软件包</p></li><li><p>代理之间相互独立</p></li><li><p>代理通常无需进行磁盘访问，不需要读取初始配置文件。使得入侵者很难在主机上安装Trojan horse、sniffers或其他危险的文件</p></li><li><p>堡垒主机是一个组织机构网络安全的中心主机。堡垒主机是由网络管理员严密监视的，堡垒主机软件和系统的安全情况应该定期地进行审查，对访问记录应进行查看，以防潜在的安全漏洞和对堡垒主机的试探性攻击</p></li></ol><h3 id="2-典型体系结构"><a href="#2-典型体系结构" class="headerlink" title="2. 典型体系结构"></a>2. 典型体系结构</h3><p><strong>(1) 屏蔽主机模式</strong></p><p><img src="http://pcdbq4c2i.bkt.clouddn.com/%E5%B1%8F%E8%94%BD%E4%B8%BB%E6%9C%BA%E6%A8%A1%E5%BC%8F.png" alt=""></p><p>1.屏蔽主机模式防火墙(Screened Firewall)由<strong>包过滤路由器</strong>和<strong>堡垒主机</strong>组成。在这种模式下，<strong>所有的网络流量</strong>都必须通过堡垒主机</p><ul><li><p>对于来自外部网络的网络流量，只有发往堡垒主机的IP数据包才被允许通过</p></li><li><p>对于来自内部网络的网络流量，只有来自堡垒主机的IP数据包才被允许通过</p></li></ul><p>2.屏蔽主机模式防火墙的实质就是<strong>包过滤</strong>和<strong>代理服务功能</strong>的结合。堡垒主机担任了身份鉴别和代理服务的功能。这样的配置更加安全</p><ul><li><p>首先，这种配置能够实现数据包级过滤和应用级过滤，在定义安全策略时有相当的灵活性</p></li><li><p>其次，在入侵者威胁到内部网络的安全以前，必须能够“穿透”两个独立的系统（包过滤路由器和堡垒主机）</p></li><li><p>这种配置在对Internet进行直接访问时，有更大的灵活性。例如，内部网络中有一个公共信息服务器，如Web服务器，这时，可以配置路由器允许网络流量在信息服务器和Internet之间传输</p></li><li><p>单宿主机模式存在一个缺陷：一旦过滤路由器遭到破坏，堡垒主机就可能被越过，使得内部网络完全暴露</p></li></ul><p><strong>(2) 双宿/多宿主机模式</strong></p><p><img src="http://pcdbq4c2i.bkt.clouddn.com/%E5%A4%9A%E5%AE%BF%E4%B8%BB.png" alt=""></p><ol><li><p>双宿/多宿主机模式防火墙 (Dual-homed/MultiHomedFirewall)，又称为双宿/多宿网关防火墙</p></li><li><p>它是一种拥有两个或多个连接到不同网络上的网络接口的防火墙。通常用一台装有两块或多块网卡的堡垒主机作为防火墙，每块网卡各自与受保护网和外部网连接</p></li><li><p>该模式下，堡垒主机关闭了IP转发功能，其网关功能是通过提供代理服务而不是通过 IP转发来实现的。显然只有特定类型的协议请求才能被代理<br>服务处理。于是，网关采用了“缺省拒绝”策略以得到很高的安全性</p></li><li><p>这种体系结构的防火墙简单明了，易于实现，成本低，能够为内外网提供检测、认证、日志等功能</p></li><li><p>这种结构也存在弱点，一旦黑客侵入堡垒主机并打开其IP转发功能，则任何网上用户均可随意访问内部网络。因此，双宿/多宿网关防火墙对不可信任的外部主机的访问必须进行严格的身份验证</p></li></ol><p><strong>(3) 屏蔽子网模式</strong></p><p>与前面几种配置模式相比，屏蔽子网模式防火墙(Screened Subnet Mode Firewall) 是最为安全的一种配置模式。它采用了两个包过滤路由器：一个位于堡垒主机和外部网络(Internet)之间；另一个位于堡垒主机和内部网络之间。该配置模式在内部网与外部网络之间建立了一个被隔离的子网</p><p><img src="http://pcdbq4c2i.bkt.clouddn.com/%E5%B1%8F%E8%94%BD%E5%AD%90%E7%BD%91.png" alt=""></p><ol><li><p>周边防御网络是位于内部网络与外部网络之间的一个安全子网，分别和内外两个路由器相连。这个子网被定义为“非军事区”(demilitarized zone)网络，这一网络所受到的威胁不会影响到内部网络</p></li><li><p>可以将堡垒主机、Web服务器、E-mail服务器等公用服务器放在非军事区网络中，将重要的数据放在内部网服务器上。内部网络和外部网络均可访问屏蔽子网，但禁止它们穿过屏蔽子网通信。在这一配置中，内网增加了一台内部包过滤路由器，该路由器与外部路由器的过滤规则完全不同，它只允许源于堡垒主机的数据包进入</p></li><li><p>这种防火墙安全性好，但成本高。即使外部路由器和堡垒主机被入侵者控制，内部网络仍受到内部包过滤路由器的保护</p></li></ol><hr><h2 id="0x09-防火墙缺陷及发展"><a href="#0x09-防火墙缺陷及发展" class="headerlink" title="0x09 防火墙缺陷及发展"></a>0x09 防火墙缺陷及发展</h2><h3 id="1-防火墙缺陷"><a href="#1-防火墙缺陷" class="headerlink" title="1. 防火墙缺陷"></a>1. 防火墙缺陷</h3><p>(1) 防火墙不能防范不经由防火墙的攻击</p><p>如果允许从受保护网内部不受限制的向外拨号，一些用户可以形成与Internet的直接的SLIP或PPP连接，从而绕过防火墙，造成一个潜在的后门攻击渠道</p><p>(2) 防火墙目前还不能防止感染了病毒的软件或文件的传输，只能在每台主机上装反病毒软件</p><p>(3) 防火墙不能防止数据驱动式攻击</p><p>有些表面看来无害的数据被邮寄或复制到Internet主机上并被执行而发起攻击时，就会发生数据驱动攻击。例如，一种数据驱动的攻击可以使一台主机修改与安全有关的文件，从而使入侵者下一次更容易入侵该系统</p><p>(4) 防火墙还存在着安装、管理、配置复杂的缺点，在高流量的网络中，防火墙还容易成为网络的瓶颈</p><h3 id="2-发展趋势"><a href="#2-发展趋势" class="headerlink" title="2. 发展趋势"></a>2. 发展趋势</h3><p><strong>(1) 优良的性能</strong></p><ul><li><p>传统的代理型防火墙虽然可以提供较高级别的安全保护，但是同时它也成为限制网络带宽的瓶颈，极大地制约了在网络中的实际应用。<strong>数据通过率</strong>是表示防火墙性能的参数，由于不同防火墙的不同功能具有不同的工作量和系统资源要求，因此数据在通过防火墙时会产生延时。现在大多数的防火墙产品都支持<strong>NAT功能</strong>，它可以让受防火墙保护的一边的IP地址不至于暴露在没有保护的另一边，但启用NAT后，势必会对防火墙系统性能有所影响。另外防火墙系统中集成的<strong>VPN解决方案</strong>必须是真正的线速运行，否则将成为网络通信的瓶颈</p></li><li><p>采用复杂的加密算法时，防火墙性能尤为重要</p></li></ul><p><strong>(2) 可扩展的结构和功能</strong></p><ul><li><p>防火墙系统规模和功能应该能适应内部网络的规模和安全策略的变化，</p></li><li><p>防火墙除了具有保护网络安全的基本功能外，还提供对VPN的支持，同时还应该具有可扩展的内驻应用层代<br>理。除了支持常见的网络服务以外，还应该能够按照用户的需求提供相应的代理服务</p></li><li><p>未来的防火墙系统应是一个<strong>可随意伸缩</strong>的<strong>模块化解决方案</strong>，从最为基本的包过滤器到带加密功能的VPN型包过滤器，直至一个独立的应用网关，使用户有充分的余地构建自己所需要的防火墙体系</p></li></ul><p><strong>(3) 简化的安装与管理</strong></p><p>将具有非常易于进行配置的图形用户界面，NT防火墙市场的发展证明了这种趋势</p><p><strong>(4) 主动过滤</strong></p><p>具有内置病毒和内容扫描功能或允许用户将病毒与内容扫描程序进行集成</p><p><strong>(5) 防病毒与防黑客</strong></p><p>TCP／IP 协议套件中存在的脆弱性使Internet对<strong>拒绝服务攻击</strong>敞开了大门。防火墙厂商一直在尽其可能阻止拒绝服务攻击。像对付序列号预测和IP欺骗这类简单攻击，这些年来已经成为了防火墙工具箱的一部分。像“SYN泛滥”这类更复杂的拒绝服务攻击需要厂商部署更先进的检测和避免方案来对付</p><p><strong>(6) 发展联动技术</strong></p><p>联动即通过一种<strong>组合</strong>的方式，将不同的技术与防火墙技术进行整合，在提高防火墙自身功能和性能的同时，由其他技术完成防火墙所缺乏的功能，以适应网络安全<strong>整体化、立体化</strong>的要求</p><ul><li><p>防火墙与<strong>防病毒产品</strong>联动，可以在网关处查杀病毒，将病毒的发作限制在最小的可能</p></li><li><p>防火墙与<strong>认证系统</strong>联动，可以在制定安全策略时使用强度更大、安全性更高的认证体系</p></li><li><p>防火墙与<strong>入侵检测系统</strong>联动，可以对网络进行动静结合的保护</p></li><li><p>防火墙与<strong>日志分析系统</strong>联动</p></li></ul><h3 id="3-趋势总结"><a href="#3-趋势总结" class="headerlink" title="3. 趋势总结"></a>3. 趋势总结</h3><p>未来防火墙技术会全面考虑<strong>网络安全、操作系统安全、应用程序安全、用户的安全、数据安全</strong>，五者综合应用；此外，网络的防火墙产品还将把网络前沿技术，如Web页面超高速缓存、虚拟网络和带宽管理、与其它安全<strong>技术联动</strong>等与其自身结合起来</p><hr><h2 id="0x0A-防火墙设计及配置"><a href="#0x0A-防火墙设计及配置" class="headerlink" title="0x0A 防火墙设计及配置"></a>0x0A 防火墙设计及配置</h2><p>现代操作系统已经集成了基本的防火墙架构，只需在相关的架构上加入自定义的软件模块，就可以实现高强度的防火墙功能 </p><h3 id="1-Firewall-Windows"><a href="#1-Firewall-Windows" class="headerlink" title="1. Firewall-Windows"></a>1. Firewall-Windows</h3><p><img src="http://pcdbq4c2i.bkt.clouddn.com/windows.png" alt=""></p><p><strong>(1) 用户级：</strong>SPI接口，包过滤接口</p><p><strong>(2) 内核级：</strong>TDI过滤驱动程序，NDIS中间层过滤驱动程序，NDIS过滤钩子驱动程序</p><h3 id="2-Firewall-Linux"><a href="#2-Firewall-Linux" class="headerlink" title="2. Firewall-Linux"></a>2. Firewall-Linux</h3><p>(1) Linux kernel 集成了过滤系统</p><ul><li>2.0 ipfwadm</li><li>2.2 ipchains</li><li>2.4以上内核：netfilter/iptables</li></ul><p>(2) 大多数Linux下的防火墙都是在这些过滤系统之上开发设计的。通过LKM注册钩子函数，实现对数据的检测，从而实现自定义的防火墙</p><p>(3) 商用防火墙大多在netfilter/iptables上开发</p><hr><h2 id="0xFF-参考资源"><a href="#0xFF-参考资源" class="headerlink" title="0xFF 参考资源"></a>0xFF 参考资源</h2><ul><li><p><a href="https://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E5%A2%99" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki</a></p></li><li><p><a href="http://staff.ustc.edu.cn/~billzeng/senis/nis06.pdf" target="_blank" rel="noopener">http://staff.ustc.edu.cn/~billzeng/senis/nis06.pdf</a></p></li><li><p><a href="https://www.secrss.com/search?keywords=%E9%98%B2%E7%81%AB%E5%A2%99" target="_blank" rel="noopener">https://www.secrss.com/firewall</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;防火墙(firewall)是一种保护计算机网络安全的技术性措施，它通过在网络边界上建立相应的网络通信监控系统来隔离内部和外部网络，以阻挡来自外部的网络入侵。本文对防火墙技术及其发展进行简要分析与总结&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="0x02 安全技术" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="Firewall" scheme="http://yoursite.com/tags/Firewall/"/>
    
  </entry>
  
  <entry>
    <title>Joy-加密流量分析</title>
    <link href="http://yoursite.com/2018/07/31/Joy/"/>
    <id>http://yoursite.com/2018/07/31/Joy/</id>
    <published>2018-07-31T06:43:40.000Z</published>
    <updated>2018-08-18T03:56:55.825Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/cisco/joy/" title="Joy" target="_blank" rel="noopener">Joy</a>是一个BSD许可的基于libpcap的软件包，用于从实时网络流量或数据包捕获（pcap）文件中提取数据特征，使用类似于IPFIX或Netflow的面向流的模型，然后在JSON中表示这些数据特征。它还包含可应用于这些数据文件的分析工具,Joy可用于大规模探索数据，尤其是安全性和威胁相关数据<br><a id="more"></a></p></blockquote><hr><h2 id="0x01-简述"><a href="#0x01-简述" class="headerlink" title="0x01 简述"></a>0x01 简述</h2><h3 id="1-可获取信息类型"><a href="#1-可获取信息类型" class="headerlink" title="1. 可获取信息类型"></a>1. 可获取信息类型</h3><pre><code>1. IP数据包的长度以及到达时间；2. 数据流中特定数据的经验概率分布情况，以及相应的熵；3. TLS记录的长度以及到达时间；3. 其他非加密的TLS数据，例如提供的加密套件列表、选择的加密套件、clientKeyExchange域的长度、以及服务器证书字符串等等；4. DNS域名、地址以及TTLs；5. HTTP头元素以及HTTP body的前八个字节；6. 与数据流有关的进程名称以及pcap文件</code></pre><h3 id="2-适用范围"><a href="#2-适用范围" class="headerlink" title="2. 适用范围"></a>2. 适用范围</h3><p>Joy旨在用于<strong>安全研究</strong>，<strong>取证</strong>以及（小规模）<strong>网络监控</strong>，以检测漏​​洞，威胁和其他未经授权或不需要的行为。研究人员，管理员，渗透测试人员和安全运营团队可以充分利用这些信息，保护受监控的网络，并在漏洞的情况下，通过<strong>改善防御态势</strong>为更广泛的社区带来好处。对于攻击者来说，Joy同样可以帮助他们实现自己的目的，例如扫描目标网络中潜在的安全漏洞，或者窃取目标网络流数据</p><h3 id="3-工具配置"><a href="#3-工具配置" class="headerlink" title="3. 工具配置"></a>3. 工具配置</h3><p><strong>(1) 解决依赖(Ubuntu)</strong></p><pre><code>sudo apt-get install build-essential libssl-dev libpcap-dev libcurl4-openssl-dev</code></pre><p><strong>（2）下载Joy源代码</strong></p><pre><code>sudo apt-get install gitgit clone https://github.com/cisco/joy.git</code></pre><p><strong>（3）编译安装</strong></p><pre><code>sudo apt-get install gcccd joy./configmake &amp;&amp; make install</code></pre><p><strong>（4）安装检测</strong></p><pre><code>man joy</code></pre><p><img src="http://par628i4r.bkt.clouddn.com/joy%E5%AE%89%E8%A3%85.png" alt="joy"></p><hr><h2 id="0x02-用法详解"><a href="#0x02-用法详解" class="headerlink" title="0x02 用法详解"></a>0x02 用法详解</h2><h3 id="1-General-options"><a href="#1-General-options" class="headerlink" title="1. General options"></a>1. General options</h3><pre><code>1. -x F (string)                            The command -x F causes joy to read configuration commands from the file F2. interface=I (string)                     The command interface=I causes joy to read packets live from network interface I, in online mode3. promisc=1 (boolean)                      If promisc=1, and running in online mode, put the network interface into promiscuous mode4. output=F (string)                        Write output to file F; otherwise stdout is used5. logfile=F (string)                       Write secondary output to file F; otherwise stderr is used. Secondary output consists of status reports,warnings, and errors6. count=C (number)                         Rotate output files so each contains about C records7. upload=userserver:path (string)          Upload data files using the secure copy utility scp to the location userserver:path, after file rotation8. keyfile=F (string)                       When uploading data files using the upload command , use the SSH identity (private key) in file F to authenticate to the server9. anon=F (string)                          Anonymize addresses matching the subnets listed in file F10. retain=1 (boolean)                      If retain=1, retain a local copy of each data file after it is uploaded11. preemptive timeout=1 (boolean)          If preemptive timeout=1, then use active flow timeout logic that uses the packet timestamp to decide if adding that packet to the flow record would trigger a timeout12. nfv9 port=N (number)                    If nfv9 port=1, enable Netflow V9 capture on port N. Netflow v9 [5] reports basic flow telemetry13. ipfix collect port=N (number)           If ipfix collect port=1, enable IPFIX capture on port N. IPFIX [9, 6, 13, 2, 15, 1, 3, 14] is an Internet Engineering Task Force (IETF) standard protocol for flow information export14. ipfix collect online=1 (boolean)        If ipfix collect online=1, have the IPFIX collector listen on a UDP socket15. ipfix export port=N (number)            If ipfix export port=N is set, enable IPFIX export on port N16. ipfix export remote port=N (number)     If ipfix export remote port=N is set, then the IPFIX exporter will send to port N on the remote collector. Otherwise, the default port of 4739 is used17. ipfix export remote host=host (string)  If ipfix export remote host=host is set, then use host as the remote server target for the IPFIX exporter. Otherwise, the default 127.0.0.1 (localhost) address is used18. ipfix export template=type (string)     If ipfix export template=type is set, then use type as the template for IPFIX exporter. The available types are simple and idp, and the default is the former19. aux resource path=path (string)         If aux resource path=path is set, then expect the auxiliary data files to be stored in the directory path20. verbosity=L (boolean)                   If verbosity=L) is set, then the log (secondary) output includes events at level L and higher, where 0=off, 1=debug, 2=info, 3=warning, 4=error, 5=critical. The default value is 4 (error)21. show config=1                           If show config=1, then show the configuration on stderr when the program is started22. show interfaces=1                       If show interfaces=1, then show the interfaces on stderr when the program is started23. username=user                           If username=user is set, then drop privileges to username user after starting packet capture in online mode as root. Otherwise, the default username joy is used</code></pre><h3 id="2-Data-feature-options"><a href="#2-Data-feature-options" class="headerlink" title="2. Data feature options"></a>2. Data feature options</h3><pre><code>1. bpf=&quot;expression&quot;            only process packets matching BPF &quot;expression&quot;2. zeros=1                     include zero-length data (e.g. ACKs) in packet list3. retrans=1                   include TCP retransmissions in packet list4. bidir=1                     merge unidirectional flows into bidirectional ones5. dist=1                      include byte distribution array6. cdist=F                     include compact byte distribution array using the mapping file, F7. entropy=1                   include byte entropy8. http=1                      include HTTP data9. exe=1                       include information about host process associated with flow10. classify=1                 include results of post-collection classification11. num_pkts=N                 report on at most N packets per flow (0 &lt;= N &lt; 200)12. type=T                     select message type: 1=SPLT, 2=SALT13. idp=N                      report N bytes of the initial data packet of each flow14. label=L:F                  add label L to addresses that match the subnets in file F15. URLmodel=URL               URL to be used to retrieve classisifer updates16. model=F1:F2                change classifier parameters, SPLT in file F1 and SPLT+BD in file F217. hd=1                       include header description18. URLlabel=URL               Full URL including filename to be used to retrieve label updates19. wht=1                      include walsh-hadamard transform20. example=1                  include example feature21. dns=1                      report DNS response information22. ssh=1                      report ssh information23. tls=1                      report TLS data (ciphersuites, record lengths and times, ...)24. dhcp=1                     report dhcp information25. http=1                     report http information27. ike=1                      report IKE information28. payload=N                  include N bytes of payload29. salt=1                     include salt feature30. ppi=1                      include per-packet info (ppi)</code></pre><hr><h2 id="0x03-实战浅析"><a href="#0x03-实战浅析" class="headerlink" title="0x03 实战浅析"></a>0x03 实战浅析</h2>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/cisco/joy/&quot; title=&quot;Joy&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Joy&lt;/a&gt;是一个BSD许可的基于libpcap的软件包，用于从实时网络流量或数据包捕获（pcap）文件中提取数据特征，使用类似于IPFIX或Netflow的面向流的模型，然后在JSON中表示这些数据特征。它还包含可应用于这些数据文件的分析工具,Joy可用于大规模探索数据，尤其是安全性和威胁相关数据&lt;br&gt;
    
    </summary>
    
      <category term="0x02 安全技术" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="安全工具" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="SecTools" scheme="http://yoursite.com/tags/SecTools/"/>
    
  </entry>
  
  <entry>
    <title>SSL/TLS协议详解</title>
    <link href="http://yoursite.com/2018/07/24/SSL-TLS%E5%8D%8F%E8%AE%AE%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2018/07/24/SSL-TLS协议详解/</id>
    <published>2018-07-24T10:55:20.000Z</published>
    <updated>2018-08-18T03:56:36.687Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>传输层安全性（TLS)及其前身安全套接字层（SSL），通过计算机网络提供通信安全性的加密协议。广泛用于网页浏览，电子邮件，即时消息和IP语音（VoIP）之类的应用程序中。TLS协议主要旨在提供两个或更多通信计算机应用程序之间的隐私和数据完整性<br><a id="more"></a></p></blockquote><hr><h2 id="SSL协议"><a href="#SSL协议" class="headerlink" title="SSL协议"></a>SSL协议</h2><h3 id="0x01-SSL体系结构"><a href="#0x01-SSL体系结构" class="headerlink" title="0x01 SSL体系结构"></a>0x01 SSL体系结构</h3><p><strong>1. SSL协议栈</strong></p><p>SSL使用TCP提供一种可靠的端对端的安全服务，SSL不是单个协议，它由两层协议组成</p><p><img src="http://pcdbq4c2i.bkt.clouddn.com/SSL%E5%8D%8F%E8%AE%AE%E6%A0%88.png" alt="SSL"></p><p>SSL记录协议对各种更高层协议提供基本的安全服务。SSL中定义的三个较高层协议分别是：握手协议，密码变更规格协议，报警协议，这些SSL协议规范用于管理SSL的交换</p><p><strong>2. 连接与会话</strong></p><p><strong>连接(conection)：</strong>SSL连接是一种能够提供合适服务类型的传输。这种连接是点对点的关系而且短暂，每一条连接都与一个会话连接</p><p><strong>会话(session)：</strong>SSL会话是客户端与服务器之间的一种关联。会话是通过握手协议来创建，所有会话都定义了密码安全参数集合，这些参数可以在多个安全之间共享。</p><p><strong>会话状态参数</strong></p><pre><code>会话标识符(session identifier)：由服务器产生的用于标识活动的或可恢复的会话状态的一个任意字节序列对等证书(peer certificate)：对等的X.509v3证书，此元素可为空压缩方法(compression method)：加密前用于压缩数据的算法密码规格(cipher spec)：包括大块数据加密算法(如空算法，AES算法等)规格和用于计算MAC的散列算法(如MD5,SHA-1算法等)规格。还定义一些密码属性，如散列值长度等主密钥(master secret)：客户端和服务器共享的48字节的会话密钥可恢复性(is resumable)：指明能否把会话用于创建新连接的标志比特</code></pre><p><strong>连接状态参数</strong></p><pre><code>服务端和客户端随机数(server and client random)：由服务器和客户端为每个连接选定的字符串服务器写MAC密钥(server write MAC secret)：服务器发送数据时用于计算MAC值得密钥客户端写MAC密钥(client write MAC secret)：客户端发送数据时用于计算MAC值得密钥服务器写密钥(server write key)：服务器用于加密数据，客户端用于解密的传统加密密钥客户端写密钥(client write key)：客户端用于加密数据，服务器用于解密的传统加密密钥初始化向量(initialization vector)：当CBC模式中的数据块正在使用时，需要为每个密钥配置一个初始化向量(IV)。最初的IV由SSL握手协议初始化，之后的IV值为前一次分组密码算法的最后一个密文分组序列号(sequence number)：建立连接的各方为每条连接发送和接收的消息维护单独序列号。当一方发送或接收改变密码规格的消息时，相应序列号置零，序列号的值不能超过2^64-1</code></pre><h3 id="0x02-SSL记录协议"><a href="#0x02-SSL记录协议" class="headerlink" title="0x02 SSL记录协议"></a>0x02 SSL记录协议</h3><p><strong>1. 提供服务(连接)</strong></p><p><strong>机密性(Confidentiality)：</strong>握手协议定义一个可用于SSL负载的传统加密共享密钥</p><p><strong>消息完整性(Message Integrity)：</strong>握手协议还定义一个用于产生消息认证码(MAC)的共享密钥</p><p><strong>2. 运行流程</strong></p><p><img src="http://pcdbq4c2i.bkt.clouddn.com/SSL%E6%B5%81%E7%A8%8B.png" alt="运行"></p><p><strong>(1) 分段：</strong>将每个上层消息分给为不大于2^14字节的块</p><p><strong>(2) 压缩：</strong>可选，压缩必须是无损并且对内容的长度不能产生多于1024字节的增量，SSLv3(TLS当前版本)中，未规定压缩算法，默认压缩算法为空算法</p><p><strong>(3) 添加MAC，计算消息验证码</strong></p><p><img src="http://pcdbq4c2i.bkt.clouddn.com/MAC%E8%AE%A1%E7%AE%97.png" alt="MAC"></p><p>SSLv3中的两个填充是串接式的填充，HMAC中是异或运算</p><p><strong>(4) 加密(压缩后的消息及MAC)</strong></p><p>使用对称加密算法进行加密，机密造成的块长度增量不超过1024字节，故块的总长度不超过2^14+2048字节</p><p><img src="http://pcdbq4c2i.bkt.clouddn.com/SSL%E5%8A%A0%E5%AF%86.png" alt="加密"></p><p><strong>流加密算法：</strong>MAC码在加密前计算得到，计算所得的MAC码连同明文或压缩后的明文一同被加密</p><p><strong>分组加密算法：</strong>消息MAC码计算结束后，加密发生之前先填充一些填充数据。填充方式为：先进行一定数量的字节填充，然后在最后一个人填充字节上填入填充总长度</p><p><strong>(5) 添加SSL记录头</strong></p><p><strong>header 组成域</strong></p><pre><code>内容类型(Content Type)：8比特，用于处理封闭分段的更高层协议主版本(Major Version)：8比特，表明应用的SSL版本主版本号,SSLv3.0该值为3副版本(Minor Version)：8比特，表明应用的SSL版本副版本号,SSLv3.0该值为0压缩后的长度(Compressed Length)：8比特，以字节为单位的明文块(使用压缩后则为压缩后的明文块)长度，最大值为2^14+2048</code></pre><p>内容类型被定义为密码变更规格(change_cipher_spec)，报警(alert)，握手(handshark)和应用数据(application_data)4种</p><p><strong>3. SSL记录协议格式</strong></p><p><img src="http://pcdbq4c2i.bkt.clouddn.com/SSL%E8%AE%B0%E5%BD%95%E6%A0%BC%E5%BC%8F.png" alt="ssl格式"></p><p><strong>4. SSL记录协议载荷</strong></p><p><img src="http://pcdbq4c2i.bkt.clouddn.com/SSL%E8%AE%B0%E5%BD%95%E8%BD%BD%E8%8D%B7.png" alt="SSL记录载荷"></p><h3 id="0x03-密码变更规格协议"><a href="#0x03-密码变更规格协议" class="headerlink" title="0x03 密码变更规格协议"></a>0x03 密码变更规格协议</h3><p><img src="http://pcdbq4c2i.bkt.clouddn.com/%E5%AF%86%E7%A0%81%E5%8F%98%E6%9B%B4%E8%A7%84%E6%A0%BC.png" alt="密码变更"></p><p>密码变更规格协议是应用SSL记录协议的3个SSL规格协议之一，是最简单的一个协议。本协议只包含一条消息，有一个之为1的字节组成，此消息唯一功能是<strong>使得延迟状态改变为当前状态</strong>，该消息更新了在这一连接上应用的密码机制</p><h3 id="0x04-报警协议"><a href="#0x04-报警协议" class="headerlink" title="0x04 报警协议"></a>0x04 报警协议</h3><p><img src="http://pcdbq4c2i.bkt.clouddn.com/%E6%8A%A5%E8%AD%A6%E5%8D%8F%E8%AE%AE.png" alt="报警"></p><p>报警协议用于将SSL相关的报警传达给对等实体，也按照当前状态的规格进行压缩和加密操作</p><p>这一协议过程每一条消息由连个字节组成，其中第一个字节可取值为<strong>警告(1)</strong>或<strong>致命(2)</strong>以表示消息严重程度，严重程度为致命时，SSL将立即结束当前连接；第二个字节包括一种用于指明具体警告的编码</p><p><strong>致命警告内容</strong></p><p><img src="http://pcdbq4c2i.bkt.clouddn.com/%E8%87%B4%E5%91%BD%E8%AD%A6%E5%91%8A.png" alt="致命"></p><h3 id="0x05-握手协议"><a href="#0x05-握手协议" class="headerlink" title="0x05 握手协议"></a>0x05 握手协议</h3><p><strong>1. 协议概述</strong></p><p>SSL握手协议允许客户端和服务器相互认证，并协商加密和MAC算法，以及用于保护SSL记录中所发送数据加密密钥，握手协议在应用数据<strong>传输之前</strong>使用</p><p><strong>2. 协议组成</strong></p><p><img src="http://pcdbq4c2i.bkt.clouddn.com/%E6%8F%A1%E6%89%8B%E5%8D%8F%E8%AE%AE.png" alt="握手"></p><p>握手协议有客户端和服务器之间的一系列消息交换组成，每条消息包括三个域</p><pre><code>类型(Type)：1字节，表示预定义的10种消息类型之一长度(Length)：3字节，以字节为单位的消息长度内容(Content)：(&gt;=0字节)，相关参数如下所示</code></pre><p><img src="http://pcdbq4c2i.bkt.clouddn.com/%E6%B6%88%E6%81%AF%E7%B1%BB%E5%9E%8B.png" alt="类型"></p><p><strong>3. 握手协议过程</strong></p><p><img src="http://pcdbq4c2i.bkt.clouddn.com/%E6%8F%A1%E6%89%8B%E8%BF%87%E7%A8%8B.png" alt="过程"></p><p><strong>(1) 第一阶段：客户端发起建立连接请求</strong></p><p>此阶段主要是发起逻辑连接并建立与之关联的安全能力</p><p>首先由客户端发送<strong>client_hello</strong>消息启动</p><pre><code>版本(Version)：客户端的SSL最高版本随机数(Random)：由客户端产生的随机序列(32比特时间戳+安全随机数产生器产生的28字节随机数)，用于密钥过程中防止重放攻击会话ID(Session ID)：可变长度的会话标识符。非零值表示客户端希望更新现有连接的参数，零值表示客户端希望为此次会话建立一条新连接密码构件(CiperSuite)：该列表包括客户端支持的密码算法组合，以优先选用递减的顺序给出压缩方法(Compression Methon)：客户端支持的压缩方法列表</code></pre><p>发送完<code>client_hello</code>消息后，客户端等待<code>server_hello</code>消息，版本域包含客户端建议的较低版本和服务器建议的最高版本，服务器产生一个独立于客户端随机域的新随机数域。如果客户端会话ID域的值非零，则服务器取相同值；否则，服务器会话ID域包括一个新会话值</p><p><strong>(2) 第二阶段：</strong>服务器认证和密钥交换</p><p>如果需要认证，则这一阶段的开始以服务器发送其证书为标志，发送的消息包括一个X.509证书或一个X.509证书链。<code>Certificate</code>（证书）消息对于出匿名Diffie-Hellman密钥交换外事必需的；之后，如果必要，将发送一个<code>server_key_exchange</code>(服务器密钥交换)消息</p><p>然后，如果服务器使用的不是匿名Diffie-Hellman算法，则服务器可以向客户端请求证书，<code>certificate_request</code>(证书请求)消息包括两个参数：<code>certificate_type</code>(证书类型)和<code>certificate_authorities</code>(证书机构)</p><p>最后一条消息(必需)是<code>server_done</code>(服务器结束)消息，该消息有服务器发出并示意服务器的hello及相关消息已经结束，此次奥西没有参数，发送完后，服务器要等待客户的响应</p><p><strong>(3) 第三阶段：</strong>客户端认证和密钥交换</p><p>接收到<code>server_done</code>(服务器结束)消息后，如果需要，客户端应该验证服务器提供的证书是否有效，同时检查<code>server_hello</code>参数是否可接受，若条件均满足，客户端将返回一条或更多消息给服务器</p><p>如果服务器已请求证书，则以客户端发送一条<code>certificate</code>消息为这一阶段的开始，如果没有合适的证书可用，那么客户端发送<code>no_ceritificate alert</code>(无证书警报)</p><p>接下来是<code>client_key_exchange</code>(客户端密钥交换)消息，该消息必须在这一阶段发送</p><p>最后，客户端可以发送<code>certificate_verify</code>(证书验证)消息，一边对客户端证书进行显示验证。仅当客户端证书具有签名功能时才会发送该消息</p><p><strong>(4) 第四阶段：完成</strong></p><p>这一阶段完成安全连接的建立，客户端发送一个<code>change_cipher_spec</code>(密码变更规格)消息，并把未定的密码规格复制到当前密码规格中，该消息不是握手协议的一部分。客户端在新算法，新密钥和新秘密值下立即发送<code>finished</code>(结束)消息，<code>finished</code>消息用于验证密钥交换和认证过程是否成功，<code>finished</code>消息是两个散列码的串接</p><p><img src="http://pcdbq4c2i.bkt.clouddn.com/finished.png" alt="finished"></p><p><code>Sender</code>是一个识别码，能够把作为发送者的客户端与<code>handshake_messages</code>区分开来</p><p><code>handshake_message</code>包括从所有握手消息起到<code>Sender</code>码之前的所有数据，但不包括本条消息</p><hr><h2 id="TLS协议"><a href="#TLS协议" class="headerlink" title="TLS协议"></a>TLS协议</h2><h3 id="0x01-协议概述"><a href="#0x01-协议概述" class="headerlink" title="0x01 协议概述"></a>0x01 协议概述</h3><p>运行在传输层之上的最流行的安全协议是传输层安全(Transport Layer Security，TLS)，TLS用于保证Web通信以及其他流行协议的安全，比如POP，IMAP(使用TLS保护后，他们被称为POP3S与IMAPS)。TLS能够在应用程序内部或底部实现，而这些应用程序是运行于底层协议上来实现功能，TLS是SSL的互联网标准版本</p><h3 id="0x02-TLS协议栈"><a href="#0x02-TLS协议栈" class="headerlink" title="0x02 TLS协议栈"></a>0x02 TLS协议栈</h3><p><img src="http://par628i4r.bkt.clouddn.com/TLS%E5%8D%8F%E8%AE%AE%E6%A0%88.png" alt="TLS"></p><p>TLS协议“栈”包括位于底部的<strong>记录层</strong>以及上层协议(称为<strong>信息交换协议</strong>) 中的三个协议，第4个上层协议是使用TLS的应用协议。记录层提供分片、压缩、完整性保护以及加密功能</p><p>TLS是一个客户端/ 服务器协议, 设计用于为两个应用程序的连接提供安全。<code>记录协议</code>提供<strong>分片、压缩、完整性保护</strong>以及对客户端与服务器之间所<strong>交换数据的加密服务</strong>。<code>信息交换(handshaking)协议</code>负责<strong>建立身份、进行认证、提示警报</strong>, 以及为用于每一条连接的记录协议提供唯一的<strong>密钥材料</strong>。信息交换协议包含了4 个特殊的协议: 握手协议、警告协议、密码变更协议以及应用数据协议</p><h3 id="0x03-TLS-SSL协议对比"><a href="#0x03-TLS-SSL协议对比" class="headerlink" title="0x03 TLS/SSL协议对比"></a>0x03 TLS/SSL协议对比</h3><p><strong>1. 版本号</strong></p><p>TLS记录格式与SSL记录格式完全相同，头部中各域的意义也完全相同；唯一不同的是版本号，TLS当前版本，主版本号是3，副版本号是1</p><p><strong>2. 消息验证码</strong></p><p>SSLv3与TLS MAC方案有两点不同：<strong>算法填充方式</strong>和<strong>MAC值计算范围</strong></p><p>TLS使用HAMC算法，填充部分采用<strong>异或</strong>方式；SSLvs填充部分采用与<strong>密钥串接</strong>的方式，填充后的秘密密钥长度等于散列码长度</p><p><img src="http://par628i4r.bkt.clouddn.com/TLS%20MAC.png" alt="MAC"></p><p>TLS的MAC计算公式中，不仅包含了SSLv3的所有域，还包括TLSCompressed.version域，表示正在使用的协议版本号</p><p><strong>3. 伪随机函数</strong></p><p>TLS使用一个称为R<strong>PF的伪随机函数</strong>来扩展密钥以得到密钥产生和验证中的各种密钥块。采用伪随机函数的目的是使用相对较小的共享密钥值，通过某种不会受到针对散列函数和MAC攻击的方法生成较长的数据块</p><p><img src="http://par628i4r.bkt.clouddn.com/%E4%BC%AA%E9%9A%8F%E6%9C%BA%E6%95%B0.png" alt="伪随机"></p><p><strong>4. 报警码</strong></p><p><strong>5. 密码构件</strong></p><p><strong>6. 客户端证书类型</strong></p><p><strong>7. certificate_verify 和 finished消息</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;传输层安全性（TLS)及其前身安全套接字层（SSL），通过计算机网络提供通信安全性的加密协议。广泛用于网页浏览，电子邮件，即时消息和IP语音（VoIP）之类的应用程序中。TLS协议主要旨在提供两个或更多通信计算机应用程序之间的隐私和数据完整性&lt;br&gt;
    
    </summary>
    
      <category term="0x02 安全技术" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="安全协议" scheme="http://yoursite.com/categories/0x02-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE/"/>
    
    
      <category term="SSL" scheme="http://yoursite.com/tags/SSL/"/>
    
      <category term="TLS" scheme="http://yoursite.com/tags/TLS/"/>
    
  </entry>
  
</feed>
